!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=23)}([function(e,t,n){e.exports=n(31)()},function(e,t,n){"use strict";e.exports=n(39)},function(e,t,n){"use strict";e.exports=function(){}},function(e,t,n){"use strict";e.exports=function(e,t,n,r,o,a,i,l){if(!e){var u;if(void 0===t)u=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,o,a,i,l],s=0;(u=new Error(t.replace(/%s/g,function(){return c[s++]}))).name="Invariant Violation"}throw u.framesToPop=1,u}}},function(e,t,n){"use strict";var r=function(){};e.exports=r},function(e,t,n){var r=n(26);e.exports=h,e.exports.parse=a,e.exports.compile=function(e,t){return u(a(e,t))},e.exports.tokensToFunction=u,e.exports.tokensToRegExp=d;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function a(e,t){for(var n,r=[],a=0,i=0,l="",u=t&&t.delimiter||"/";null!=(n=o.exec(e));){var f=n[0],p=n[1],d=n.index;if(l+=e.slice(i,d),i=d+f.length,p)l+=p[1];else{var h=e[i],m=n[2],v=n[3],y=n[4],g=n[5],b=n[6],w=n[7];l&&(r.push(l),l="");var x=null!=m&&null!=h&&h!==m,k="+"===b||"*"===b,E="?"===b||"*"===b,C=n[2]||u,T=y||g;r.push({name:v||a++,prefix:m||"",delimiter:C,optional:E,repeat:k,partial:x,asterisk:!!w,pattern:T?s(T):w?".*":"[^"+c(C)+"]+?"})}}return i<e.length&&(l+=e.substr(i)),l&&r.push(l),r}function i(e){return encodeURI(e).replace(/[\/?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function l(e){return encodeURI(e).replace(/[?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function u(e){for(var t=new Array(e.length),n=0;n<e.length;n++)"object"==typeof e[n]&&(t[n]=new RegExp("^(?:"+e[n].pattern+")$"));return function(n,o){for(var a="",u=n||{},c=(o||{}).pretty?i:encodeURIComponent,s=0;s<e.length;s++){var f=e[s];if("string"!=typeof f){var p,d=u[f.name];if(null==d){if(f.optional){f.partial&&(a+=f.prefix);continue}throw new TypeError('Expected "'+f.name+'" to be defined')}if(r(d)){if(!f.repeat)throw new TypeError('Expected "'+f.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(f.optional)continue;throw new TypeError('Expected "'+f.name+'" to not be empty')}for(var h=0;h<d.length;h++){if(p=c(d[h]),!t[s].test(p))throw new TypeError('Expected all "'+f.name+'" to match "'+f.pattern+'", but received `'+JSON.stringify(p)+"`");a+=(0===h?f.prefix:f.delimiter)+p}}else{if(p=f.asterisk?l(d):c(d),!t[s].test(p))throw new TypeError('Expected "'+f.name+'" to match "'+f.pattern+'", but received "'+p+'"');a+=f.prefix+p}}else a+=f}return a}}function c(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function s(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function f(e,t){return e.keys=t,e}function p(e){return e.sensitive?"":"i"}function d(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,a=!1!==n.end,i="",l=0;l<e.length;l++){var u=e[l];if("string"==typeof u)i+=c(u);else{var s=c(u.prefix),d="(?:"+u.pattern+")";t.push(u),u.repeat&&(d+="(?:"+s+d+")*"),i+=d=u.optional?u.partial?s+"("+d+")?":"(?:"+s+"("+d+"))?":s+"("+d+")"}}var h=c(n.delimiter||"/"),m=i.slice(-h.length)===h;return o||(i=(m?i.slice(0,-h.length):i)+"(?:"+h+"(?=$))?"),i+=a?"$":o&&m?"":"(?="+h+"|$)",f(new RegExp("^"+i,p(n)),t)}function h(e,t,n){return r(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return f(e,t)}(e,t):r(e)?function(e,t,n){for(var r=[],o=0;o<e.length;o++)r.push(h(e[o],t,n).source);return f(new RegExp("(?:"+r.join("|")+")",p(n)),t)}(e,t,n):function(e,t,n){return d(a(e,n),t,n)}(e,t,n)}},function(e,t,n){var r={},o=function(e){var t;return function(){return void 0===t&&(t=e.apply(this,arguments)),t}}(function(){return window&&document&&document.all&&!window.atob}),a=function(e){var t={};return function(e){if("function"==typeof e)return e();if(void 0===t[e]){var n=function(e){return document.querySelector(e)}.call(this,e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}}(),i=null,l=0,u=[],c=n(27);function s(e,t){for(var n=0;n<e.length;n++){var o=e[n],a=r[o.id];if(a){a.refs++;for(var i=0;i<a.parts.length;i++)a.parts[i](o.parts[i]);for(;i<o.parts.length;i++)a.parts.push(v(o.parts[i],t))}else{var l=[];for(i=0;i<o.parts.length;i++)l.push(v(o.parts[i],t));r[o.id]={id:o.id,refs:1,parts:l}}}}function f(e,t){for(var n=[],r={},o=0;o<e.length;o++){var a=e[o],i=t.base?a[0]+t.base:a[0],l={css:a[1],media:a[2],sourceMap:a[3]};r[i]?r[i].parts.push(l):n.push(r[i]={id:i,parts:[l]})}return n}function p(e,t){var n=a(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=u[u.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),u.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=a(e.insertInto+" "+e.insertAt.before);n.insertBefore(t,o)}}function d(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=u.indexOf(e);t>=0&&u.splice(t,1)}function h(e){var t=document.createElement("style");return void 0===e.attrs.type&&(e.attrs.type="text/css"),m(t,e.attrs),p(e,t),t}function m(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function v(e,t){var n,r,o,a;if(t.transform&&e.css){if(!(a=t.transform(e.css)))return function(){};e.css=a}if(t.singleton){var u=l++;n=i||(i=h(t)),r=g.bind(null,n,u,!1),o=g.bind(null,n,u,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",m(t,e.attrs),p(e,t),t}(t),r=function(e,t,n){var r=n.css,o=n.sourceMap,a=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||a)&&(r=c(r));o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var i=new Blob([r],{type:"text/css"}),l=e.href;e.href=URL.createObjectURL(i),l&&URL.revokeObjectURL(l)}.bind(null,n,t),o=function(){d(n),n.href&&URL.revokeObjectURL(n.href)}):(n=h(t),r=function(e,t){var n=t.css,r=t.media;r&&e.setAttribute("media",r);if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){d(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=o()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=f(e,t);return s(n,t),function(e){for(var o=[],a=0;a<n.length;a++){var i=n[a];(l=r[i.id]).refs--,o.push(l)}e&&s(f(e,t),t);for(a=0;a<o.length;a++){var l;if(0===(l=o[a]).refs){for(var u=0;u<l.parts.length;u++)l.parts[u]();delete r[l.id]}}}};var y=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}();function g(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=y(t,o);else{var a=document.createTextNode(o),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(a,i[t]):e.appendChild(a)}}},function(e,t){e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=function(e){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(e))))+" */"}(r),a=r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"});return[n].concat(a).concat([o]).join("\n")}return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var a=this[o][0];"number"==typeof a&&(r[a]=!0)}for(o=0;o<e.length;o++){var i=e[o];"number"==typeof i[0]&&r[i[0]]||(n&&!i[2]?i[2]=n:n&&(i[2]="("+i[2]+") and ("+n+")"),t.push(i))}},t}},function(e,t,n){"use strict";function r(e){return function(){return e}}var o=function(){};o.thatReturns=r,o.thatReturnsFalse=r(!1),o.thatReturnsTrue=r(!0),o.thatReturnsNull=r(null),o.thatReturnsThis=function(){return this},o.thatReturnsArgument=function(e){return e},e.exports=o},function(e,t,n){"use strict";e.exports={}},function(e,t,n){"use strict";var r=function(e){};e.exports=function(e,t,n,o,a,i,l,u){if(r(t),!e){var c;if(void 0===t)c=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var s=[n,o,a,i,l,u],f=0;(c=new Error(t.replace(/%s/g,function(){return s[f++]}))).name="Invariant Violation"}throw c.framesToPop=1,c}}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,i,l=function(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),u=1;u<arguments.length;u++){for(var c in n=Object(arguments[u]))o.call(n,c)&&(l[c]=n[c]);if(r){i=r(n);for(var s=0;s<i.length;s++)a.call(n,i[s])&&(l[i[s]]=n[i[s]])}}return l}},,function(e,t,n){e.exports=n.p+"523f9d4f1d4c83285138963d902a5d8c.ico"},function(e,t,n){e.exports=n.p+"e6eddb3d0f027296cfda353990a2475a.png"},function(e,t,n){e.exports=n.p+"23a7ffd32e7769602a6ffec367734752.jpg"},function(e,t,n){e.exports=n.p+"54d59bf3c4a6645169ee2c5c55b737e7.png"},function(e,t,n){e.exports=n.p+"3b32b633bb8e98ac49d99badf7318351.jpg"},function(e,t,n){e.exports=n.p+"bc2ee3464dbfc9d8211ed7a254e06f06.svg"},function(e,t,n){e.exports=n.p+"80d245c525eac806600800b21ec12c96.png"},function(e,t,n){e.exports=n.p+"e0229b628a21a5a4243b54ed018a38cb.jpg"},function(e,t,n){"use strict";var r={childContextTypes:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},o={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},a=Object.defineProperty,i=Object.getOwnPropertyNames,l=Object.getOwnPropertySymbols,u=Object.getOwnPropertyDescriptor,c=Object.getPrototypeOf,s=c&&c(Object);e.exports=function e(t,n,f){if("string"!=typeof n){if(s){var p=c(n);p&&p!==s&&e(t,p,f)}var d=i(n);l&&(d=d.concat(l(n)));for(var h=0;h<d.length;++h){var m=d[h];if(!(r[m]||o[m]||f&&f[m])){var v=u(n,m);try{a(t,m,v)}catch(e){}}}return t}return t}},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(38)},function(e,t,n){"use strict";n.r(t);var r=n(1),o=n.n(r),a=n(22),i=n.n(a),l=n(4),u=n.n(l),c=n(0),s=n.n(c),f=n(2),p=n.n(f),d=n(3),h=n.n(d);function m(e){return"/"===e.charAt(0)}function v(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}var y=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=e&&e.split("/")||[],r=t&&t.split("/")||[],o=e&&m(e),a=t&&m(t),i=o||a;if(e&&m(e)?r=n:n.length&&(r.pop(),r=r.concat(n)),!r.length)return"/";var l=void 0;if(r.length){var u=r[r.length-1];l="."===u||".."===u||""===u}else l=!1;for(var c=0,s=r.length;s>=0;s--){var f=r[s];"."===f?v(r,s):".."===f?(v(r,s),c++):c&&(v(r,s),c--)}if(!i)for(;c--;c)r.unshift("..");!i||""===r[0]||r[0]&&m(r[0])||r.unshift("");var p=r.join("/");return l&&"/"!==p.substr(-1)&&(p+="/"),p},g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};var b=function e(t,n){if(t===n)return!0;if(null==t||null==n)return!1;if(Array.isArray(t))return Array.isArray(n)&&t.length===n.length&&t.every(function(t,r){return e(t,n[r])});var r=void 0===t?"undefined":g(t);if(r!==(void 0===n?"undefined":g(n)))return!1;if("object"===r){var o=t.valueOf(),a=n.valueOf();if(o!==t||a!==n)return e(o,a);var i=Object.keys(t),l=Object.keys(n);return i.length===l.length&&i.every(function(r){return e(t[r],n[r])})}return!1},w=function(e){return"/"===e.charAt(0)?e:"/"+e},x=function(e){return"/"===e.charAt(0)?e.substr(1):e},k=function(e,t){return new RegExp("^"+t+"(\\/|\\?|#|$)","i").test(e)},E=function(e,t){return k(e,t)?e.substr(t.length):e},C=function(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e},T=function(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o},_=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},S=function(e,t,n,r){var o=void 0;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var a=t.indexOf("?");return-1!==a&&(n=t.substr(a),t=t.substr(0,a)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(o=_({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=y(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o},P=function(e,t){return e.pathname===t.pathname&&e.search===t.search&&e.hash===t.hash&&e.key===t.key&&b(e.state,t.state)},O=function(){var e=null,t=[];return{setPrompt:function(t){return p()(null==e,"A history supports only one prompt at a time"),e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var a="function"==typeof e?e(t,n):e;"string"==typeof a?"function"==typeof r?r(a,o):(p()(!1,"A history needs a getUserConfirmation function in order to use a prompt message"),o(!0)):o(!1!==a)}else o(!0)},appendListener:function(e){var n=!0,r=function(){n&&e.apply(void 0,arguments)};return t.push(r),function(){n=!1,t=t.filter(function(e){return e!==r})}},notifyListeners:function(){for(var e=arguments.length,n=Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach(function(e){return e.apply(void 0,n)})}}},R=!("undefined"==typeof window||!window.document||!window.document.createElement),N=function(e,t,n){return e.addEventListener?e.addEventListener(t,n,!1):e.attachEvent("on"+t,n)},j=function(e,t,n){return e.removeEventListener?e.removeEventListener(t,n,!1):e.detachEvent("on"+t,n)},A=function(e,t){return t(window.confirm(e))},U=("function"==typeof Symbol&&Symbol.iterator,Object.assign,Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}),M={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+x(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:x,decodePath:w},slash:{encodePath:w,decodePath:w}},I=function(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)},F=function(e){var t=window.location.href.indexOf("#");window.location.replace(window.location.href.slice(0,t>=0?t:0)+"#"+e)},L=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};h()(R,"Hash history needs a DOM");var t=window.history,n=-1===window.navigator.userAgent.indexOf("Firefox"),r=e.getUserConfirmation,o=void 0===r?A:r,a=e.hashType,i=void 0===a?"slash":a,l=e.basename?C(w(e.basename)):"",u=M[i],c=u.encodePath,s=u.decodePath,f=function(){var e=s(I());return p()(!l||k(e,l),'You are attempting to use a basename on a page whose URL path does not begin with the basename. Expected path "'+e+'" to begin with "'+l+'".'),l&&(e=E(e,l)),S(e)},d=O(),m=function(e){U($,e),$.length=t.length,d.notifyListeners($.location,$.action)},v=!1,y=null,g=function(){var e=I(),t=c(e);if(e!==t)F(t);else{var n=f(),r=$.location;if(!v&&P(r,n))return;if(y===T(n))return;y=null,b(n)}},b=function(e){v?(v=!1,m()):d.confirmTransitionTo(e,"POP",o,function(t){t?m({action:"POP",location:e}):x(e)})},x=function(e){var t=$.location,n=z.lastIndexOf(T(t));-1===n&&(n=0);var r=z.lastIndexOf(T(e));-1===r&&(r=0);var o=n-r;o&&(v=!0,B(o))},_=I(),L=c(_);_!==L&&F(L);var D=f(),z=[T(D)],B=function(e){p()(n,"Hash history go(n) causes a full page reload in this browser"),t.go(e)},W=0,V=function(e){1===(W+=e)?N(window,"hashchange",g):0===W&&j(window,"hashchange",g)},H=!1,$={length:t.length,action:"POP",location:D,createHref:function(e){return"#"+c(l+T(e))},push:function(e,t){p()(void 0===t,"Hash history cannot push state; it is ignored");var n=S(e,void 0,void 0,$.location);d.confirmTransitionTo(n,"PUSH",o,function(e){if(e){var t=T(n),r=c(l+t);if(I()!==r){y=t,function(e){window.location.hash=e}(r);var o=z.lastIndexOf(T($.location)),a=z.slice(0,-1===o?0:o+1);a.push(t),z=a,m({action:"PUSH",location:n})}else p()(!1,"Hash history cannot PUSH the same path; a new entry will not be added to the history stack"),m()}})},replace:function(e,t){p()(void 0===t,"Hash history cannot replace state; it is ignored");var n=S(e,void 0,void 0,$.location);d.confirmTransitionTo(n,"REPLACE",o,function(e){if(e){var t=T(n),r=c(l+t);I()!==r&&(y=t,F(r));var o=z.indexOf(T($.location));-1!==o&&(z[o]=t),m({action:"REPLACE",location:n})}})},go:B,goBack:function(){return B(-1)},goForward:function(){return B(1)},block:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=d.setPrompt(e);return H||(V(1),H=!0),function(){return H&&(H=!1,V(-1)),t()}},listen:function(e){var t=d.appendListener(e);return V(1),function(){V(-1),t()}}};return $},D=("function"==typeof Symbol&&Symbol.iterator,Object.assign,Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e});function z(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var B=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,a=Array(o),i=0;i<o;i++)a[i]=arguments[i];return n=r=z(this,e.call.apply(e,[this].concat(a))),r.state={match:r.computeMatch(r.props.history.location.pathname)},z(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.getChildContext=function(){return{router:D({},this.context.router,{history:this.props.history,route:{location:this.props.history.location,match:this.state.match}})}},t.prototype.computeMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}},t.prototype.componentWillMount=function(){var e=this,t=this.props,n=t.children,r=t.history;h()(null==n||1===o.a.Children.count(n),"A <Router> may have only one child element"),this.unlisten=r.listen(function(){e.setState({match:e.computeMatch(r.location.pathname)})})},t.prototype.componentWillReceiveProps=function(e){u()(this.props.history===e.history,"You cannot change <Router history>")},t.prototype.componentWillUnmount=function(){this.unlisten()},t.prototype.render=function(){var e=this.props.children;return e?o.a.Children.only(e):null},t}(o.a.Component);B.propTypes={history:s.a.object.isRequired,children:s.a.node},B.contextTypes={router:s.a.object},B.childContextTypes={router:s.a.object.isRequired};var W=B;function V(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var H=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,a=Array(o),i=0;i<o;i++)a[i]=arguments[i];return n=r=V(this,e.call.apply(e,[this].concat(a))),r.history=L(r.props),V(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){u()(!this.props.history,"<HashRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { HashRouter as Router }`.")},t.prototype.render=function(){return o.a.createElement(W,{history:this.history,children:this.props.children})},t}(o.a.Component);H.propTypes={basename:s.a.string,getUserConfirmation:s.a.func,hashType:s.a.oneOf(["hashbang","noslash","slash"]),children:s.a.node};var $=H,q=n(5),K=n.n(q),Y={},Q=0,G=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments[2];"string"==typeof t&&(t={path:t});var r=t,o=r.path,a=r.exact,i=void 0!==a&&a,l=r.strict,u=void 0!==l&&l,c=r.sensitive,s=void 0!==c&&c;if(null==o)return n;var f=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=Y[n]||(Y[n]={});if(r[e])return r[e];var o=[],a={re:K()(e,o,t),keys:o};return Q<1e4&&(r[e]=a,Q++),a}(o,{end:i,strict:u,sensitive:s}),p=f.re,d=f.keys,h=p.exec(e);if(!h)return null;var m=h[0],v=h.slice(1),y=e===m;return i&&!y?null:{path:o,url:"/"===o&&""===m?"/":m,isExact:y,params:d.reduce(function(e,t,n){return e[t.name]=v[n],e},{})}};var X=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){h()(this.context.router,"You should not use <Switch> outside a <Router>")},t.prototype.componentWillReceiveProps=function(e){u()(!(e.location&&!this.props.location),'<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),u()(!(!e.location&&this.props.location),'<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.')},t.prototype.render=function(){var e=this.context.router.route,t=this.props.children,n=this.props.location||e.location,r=void 0,a=void 0;return o.a.Children.forEach(t,function(t){if(null==r&&o.a.isValidElement(t)){var i=t.props,l=i.path,u=i.exact,c=i.strict,s=i.sensitive,f=i.from,p=l||f;a=t,r=G(n.pathname,{path:p,exact:u,strict:c,sensitive:s},e.match)}}),r?o.a.cloneElement(a,{location:n,computedMatch:r}):null},t}(o.a.Component);X.contextTypes={router:s.a.shape({route:s.a.object.isRequired}).isRequired},X.propTypes={children:s.a.node,location:s.a.object};var J=X,Z=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function ee(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var te=function(e){return 0===o.a.Children.count(e)},ne=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,a=Array(o),i=0;i<o;i++)a[i]=arguments[i];return n=r=ee(this,e.call.apply(e,[this].concat(a))),r.state={match:r.computeMatch(r.props,r.context.router)},ee(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.getChildContext=function(){return{router:Z({},this.context.router,{route:{location:this.props.location||this.context.router.route.location,match:this.state.match}})}},t.prototype.computeMatch=function(e,t){var n=e.computedMatch,r=e.location,o=e.path,a=e.strict,i=e.exact,l=e.sensitive;if(n)return n;h()(t,"You should not use <Route> or withRouter() outside a <Router>");var u=t.route,c=(r||u.location).pathname;return G(c,{path:o,strict:a,exact:i,sensitive:l},u.match)},t.prototype.componentWillMount=function(){u()(!(this.props.component&&this.props.render),"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored"),u()(!(this.props.component&&this.props.children&&!te(this.props.children)),"You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored"),u()(!(this.props.render&&this.props.children&&!te(this.props.children)),"You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored")},t.prototype.componentWillReceiveProps=function(e,t){u()(!(e.location&&!this.props.location),'<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),u()(!(!e.location&&this.props.location),'<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.'),this.setState({match:this.computeMatch(e,t.router)})},t.prototype.render=function(){var e=this.state.match,t=this.props,n=t.children,r=t.component,a=t.render,i=this.context.router,l=i.history,u=i.route,c=i.staticContext,s={match:e,location:this.props.location||u.location,history:l,staticContext:c};return r?e?o.a.createElement(r,s):null:a?e?a(s):null:"function"==typeof n?n(s):n&&!te(n)?o.a.Children.only(n):null},t}(o.a.Component);ne.propTypes={computedMatch:s.a.object,path:s.a.string,exact:s.a.bool,strict:s.a.bool,sensitive:s.a.bool,component:s.a.func,render:s.a.func,children:s.a.oneOfType([s.a.func,s.a.node]),location:s.a.object},ne.contextTypes={router:s.a.shape({history:s.a.object.isRequired,route:s.a.object.isRequired,staticContext:s.a.object})},ne.childContextTypes={router:s.a.object.isRequired};var re=ne,oe=re,ae={},ie=0,le=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"/",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return"/"===e?e:function(e){var t=e,n=ae[t]||(ae[t]={});if(n[e])return n[e];var r=K.a.compile(e);return ie<1e4&&(n[e]=r,ie++),r}(e)(t,{pretty:!0})},ue=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};var ce=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.isStatic=function(){return this.context.router&&this.context.router.staticContext},t.prototype.componentWillMount=function(){h()(this.context.router,"You should not use <Redirect> outside a <Router>"),this.isStatic()&&this.perform()},t.prototype.componentDidMount=function(){this.isStatic()||this.perform()},t.prototype.componentDidUpdate=function(e){var t=S(e.to),n=S(this.props.to);P(t,n)?u()(!1,"You tried to redirect to the same route you're currently on: \""+n.pathname+n.search+'"'):this.perform()},t.prototype.computeTo=function(e){var t=e.computedMatch,n=e.to;return t?"string"==typeof n?le(n,t.params):ue({},n,{pathname:le(n.pathname,t.params)}):n},t.prototype.perform=function(){var e=this.context.router.history,t=this.props.push,n=this.computeTo(this.props);t?e.push(n):e.replace(n)},t.prototype.render=function(){return null},t}(o.a.Component);ce.propTypes={computedMatch:s.a.object,push:s.a.bool,from:s.a.string,to:s.a.oneOfType([s.a.string,s.a.object]).isRequired},ce.defaultProps={push:!1},ce.contextTypes={router:s.a.shape({history:s.a.shape({push:s.a.func.isRequired,replace:s.a.func.isRequired}).isRequired,staticContext:s.a.object}).isRequired};var se=ce,fe=n(21),pe=n.n(fe),de=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};var he=function(e){var t=function(t){var n=t.wrappedComponentRef,r=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(t,["wrappedComponentRef"]);return o.a.createElement(re,{children:function(t){return o.a.createElement(e,de({},r,t,{ref:n}))}})};return t.displayName="withRouter("+(e.displayName||e.name)+")",t.WrappedComponent=e,t.propTypes={wrappedComponentRef:s.a.func},pe()(t,e)};n(29);class me extends r.PureComponent{render(){const{imageArray:e}=this.props;return o.a.createElement("div",{className:"gallery"},e&&e.map((e,t)=>o.a.createElement("div",{key:t},o.a.createElement("h2",null,"index: ",t),o.a.createElement("img",{src:e,alt:"test",className:"gallery-image"}))))}}me.propTypes={imageArray:s.a.array};var ve=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function ye(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var ge=function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)},be=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,a=Array(o),i=0;i<o;i++)a[i]=arguments[i];return n=r=ye(this,e.call.apply(e,[this].concat(a))),r.handleClick=function(e){if(r.props.onClick&&r.props.onClick(e),!e.defaultPrevented&&0===e.button&&!r.props.target&&!ge(e)){e.preventDefault();var t=r.context.router.history,n=r.props,o=n.replace,a=n.to;o?t.replace(a):t.push(a)}},ye(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.render=function(){var e=this.props,t=(e.replace,e.to),n=e.innerRef,r=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["replace","to","innerRef"]);h()(this.context.router,"You should not use <Link> outside a <Router>"),h()(void 0!==t,'You must specify the "to" property');var a=this.context.router.history,i="string"==typeof t?S(t,null,null,a.location):t,l=a.createHref(i);return o.a.createElement("a",ve({},r,{onClick:this.handleClick,href:l,ref:n}))},t}(o.a.Component);be.propTypes={onClick:s.a.func,target:s.a.string,replace:s.a.bool,to:s.a.oneOfType([s.a.string,s.a.object]).isRequired,innerRef:s.a.oneOfType([s.a.string,s.a.func])},be.defaultProps={replace:!1},be.contextTypes={router:s.a.shape({history:s.a.shape({push:s.a.func.isRequired,replace:s.a.func.isRequired,createHref:s.a.func.isRequired}).isRequired}).isRequired};var we=be;class xe extends r.PureComponent{render(){const{match:e}=this.props;return o.a.createElement("div",null,o.a.createElement("h2",null,"Welcome to Feedback"),o.a.createElement("div",null,o.a.createElement(we,{to:`${e.url}/post`},"Post Feedback"),o.a.createElement(we,{to:`${e.url}/get`},"Get Feedback")),o.a.createElement(J,null,o.a.createElement(oe,{path:`${e.url}/post`,render:()=>o.a.createElement("div",null,"Thanks, but no thanks.")}),o.a.createElement(oe,{path:`${e.url}/get`,render:()=>o.a.createElement("div",null,"Best website ever created in the world.")})))}}xe.propTypes={match:s.a.object.isRequired};var ke=he(xe),Ee=n(20),Ce=n.n(Ee),Te=n(19),_e=n.n(Te),Se=n(18),Pe=n.n(Se),Oe=n(17),Re=n.n(Oe),Ne=n(16),je=n.n(Ne),Ae=n(15),Ue=n.n(Ae),Me=n(14),Ie=n.n(Me),Fe=n(13),Le=n.n(Fe);const De=[Ce.a,_e.a,Pe.a,Re.a,je.a,Ue.a,Ie.a,Le.a];class ze extends r.PureComponent{componentDidMount(){window.cordova&&window.FirebasePlugin.onNotificationOpen(e=>{console.log("notification is",e),this.props.history.push("/feedback/get")})}render(){return o.a.createElement(J,null,o.a.createElement(oe,{path:"/gallery",render:()=>o.a.createElement(me,{imageArray:De})}),o.a.createElement(oe,{path:"/feedback",component:ke}),o.a.createElement(se,{to:"/gallery"}))}}ze.propTypes={history:s.a.object.isRe};var Be=he(ze);n(25);class We extends r.PureComponent{constructor(...e){var t;return t=super(...e),this.handleGrantPermission=(()=>{window.FirebasePlugin.grantPermission()}),this.handleGetToken=(()=>{window.FirebasePlugin.getToken(e=>{console.log("token is",e)})}),t}render(){return o.a.createElement($,null,o.a.createElement("div",null,o.a.createElement("div",{className:"greeting"},"Hello world!"),o.a.createElement("button",{onClick:this.handleGrantPermission},"Grant Permission"),o.a.createElement("button",{onClick:this.handleGetToken},"Get Token"),o.a.createElement(Be,null)))}}function Ve(){i.a.render(o.a.createElement(We,null),document.getElementById("root"))}window.cordova?document.addEventListener("deviceready",Ve,!1):Ve()},function(e,t,n){(e.exports=n(7)(!0)).push([e.i,".greeting {\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  font-size: 20px;\n}","",{version:3,sources:["/Users/guest/Desktop/work/jdre/cordova-sandbox/cordova-app/src/App.css"],names:[],mappings:"AAAA;EACE,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,gBAAgB;CACjB",file:"App.css",sourcesContent:[".greeting {\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  font-size: 20px;\n}"],sourceRoot:""}])},function(e,t,n){var r=n(24);"string"==typeof r&&(r=[[e.i,r,""]]);var o={sourceMap:!0,hmr:!0,transform:void 0,insertInto:void 0};n(6)(r,o);r.locals&&(e.exports=r.locals)},function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var o,a=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(a)?e:(o=0===a.indexOf("//")?a:0===a.indexOf("/")?n+a:r+a.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},function(e,t,n){(e.exports=n(7)(!0)).push([e.i,".gallery {\n  display: flex;\n  flex-direction: column;\n}\n\n.gallery-image {\n  max-width: 400px;\n  -o-object-fit: contain;\n     object-fit: contain;\n}","",{version:3,sources:["/Users/guest/Desktop/work/jdre/cordova-sandbox/cordova-app/src/Gallery.css"],names:[],mappings:"AAAA;EACE,cAAc;EACd,uBAAuB;CACxB;;AAED;EACE,iBAAiB;EACjB,uBAAoB;KAApB,oBAAoB;CACrB",file:"Gallery.css",sourcesContent:[".gallery {\n  display: flex;\n  flex-direction: column;\n}\n\n.gallery-image {\n  max-width: 400px;\n  object-fit: contain;\n}"],sourceRoot:""}])},function(e,t,n){var r=n(28);"string"==typeof r&&(r=[[e.i,r,""]]);var o={sourceMap:!0,hmr:!0,transform:void 0,insertInto:void 0};n(6)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";var r=n(30);function o(){}e.exports=function(){function e(e,t,n,o,a,i){if(i!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t};return n.checkPropTypes=o,n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports=function(e){var t=(e?e.ownerDocument||e:document).defaultView||window;return!(!e||!("function"==typeof t.Node?e instanceof t.Node:"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName))}},function(e,t,n){"use strict";var r=n(32);e.exports=function(e){return r(e)&&3==e.nodeType}},function(e,t,n){"use strict";var r=n(33);e.exports=function e(t,n){return!(!t||!n)&&(t===n||!r(t)&&(r(n)?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}},function(e,t,n){"use strict";var r=Object.prototype.hasOwnProperty;function o(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}e.exports=function(e,t){if(o(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(var i=0;i<n.length;i++)if(!r.call(t,n[i])||!o(e[n[i]],t[n[i]]))return!1;return!0}},function(e,t,n){"use strict";e.exports=function(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}},function(e,t,n){"use strict";var r=!("undefined"==typeof window||!window.document||!window.document.createElement),o={canUseDOM:r,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:r&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:r&&!!window.screen,isInWorker:!r};e.exports=o},function(e,t,n){"use strict";
/** @license React v16.4.1
 * react-dom.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(10),o=n(1),a=n(37),i=n(11),l=n(8),u=n(36),c=n(35),s=n(34),f=n(9);function p(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,o=0;o<t;o++)n+="&args[]="+encodeURIComponent(arguments[o+1]);r(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}o||p("227");var d={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(e,t,n,r,o,a,i,l,u){(function(e,t,n,r,o,a,i,l,u){this._hasCaughtError=!1,this._caughtError=null;var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this._caughtError=e,this._hasCaughtError=!0}}).apply(d,arguments)},invokeGuardedCallbackAndCatchFirstError:function(e,t,n,r,o,a,i,l,u){if(d.invokeGuardedCallback.apply(this,arguments),d.hasCaughtError()){var c=d.clearCaughtError();d._hasRethrowError||(d._hasRethrowError=!0,d._rethrowError=c)}},rethrowCaughtError:function(){return function(){if(d._hasRethrowError){var e=d._rethrowError;throw d._rethrowError=null,d._hasRethrowError=!1,e}}.apply(d,arguments)},hasCaughtError:function(){return d._hasCaughtError},clearCaughtError:function(){if(d._hasCaughtError){var e=d._caughtError;return d._caughtError=null,d._hasCaughtError=!1,e}p("198")}};var h=null,m={};function v(){if(h)for(var e in m){var t=m[e],n=h.indexOf(e);if(-1<n||p("96",e),!g[n])for(var r in t.extractEvents||p("97",e),g[n]=t,n=t.eventTypes){var o=void 0,a=n[r],i=t,l=r;b.hasOwnProperty(l)&&p("99",l),b[l]=a;var u=a.phasedRegistrationNames;if(u){for(o in u)u.hasOwnProperty(o)&&y(u[o],i,l);o=!0}else a.registrationName?(y(a.registrationName,i,l),o=!0):o=!1;o||p("98",r,e)}}}function y(e,t,n){w[e]&&p("100",e),w[e]=t,x[e]=t.eventTypes[n].dependencies}var g=[],b={},w={},x={};function k(e){h&&p("101"),h=Array.prototype.slice.call(e),v()}function E(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];m.hasOwnProperty(t)&&m[t]===r||(m[t]&&p("102",t),m[t]=r,n=!0)}n&&v()}var C={plugins:g,eventNameDispatchConfigs:b,registrationNameModules:w,registrationNameDependencies:x,possibleRegistrationNames:null,injectEventPluginOrder:k,injectEventPluginsByName:E},T=null,_=null,S=null;function P(e,t,n,r){t=e.type||"unknown-event",e.currentTarget=S(r),d.invokeGuardedCallbackAndCatchFirstError(t,n,void 0,e),e.currentTarget=null}function O(e,t){return null==t&&p("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function R(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var N=null;function j(e,t){if(e){var n=e._dispatchListeners,r=e._dispatchInstances;if(Array.isArray(n))for(var o=0;o<n.length&&!e.isPropagationStopped();o++)P(e,t,n[o],r[o]);else n&&P(e,t,n,r);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function A(e){return j(e,!0)}function U(e){return j(e,!1)}var M={injectEventPluginOrder:k,injectEventPluginsByName:E};function I(e,t){var n=e.stateNode;if(!n)return null;var r=T(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&p("231",t,typeof n),n)}function F(e,t){null!==e&&(N=O(N,e)),e=N,N=null,e&&(R(e,t?A:U),N&&p("95"),d.rethrowCaughtError())}function L(e,t,n,r){for(var o=null,a=0;a<g.length;a++){var i=g[a];i&&(i=i.extractEvents(e,t,n,r))&&(o=O(o,i))}F(o,!1)}var D={injection:M,getListener:I,runEventsInBatch:F,runExtractedEventsInBatch:L},z=Math.random().toString(36).slice(2),B="__reactInternalInstance$"+z,W="__reactEventHandlers$"+z;function V(e){if(e[B])return e[B];for(;!e[B];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[B]).tag||6===e.tag?e:null}function H(e){if(5===e.tag||6===e.tag)return e.stateNode;p("33")}function $(e){return e[W]||null}var q={precacheFiberNode:function(e,t){t[B]=e},getClosestInstanceFromNode:V,getInstanceFromNode:function(e){return!(e=e[B])||5!==e.tag&&6!==e.tag?null:e},getNodeFromInstance:H,getFiberCurrentPropsFromNode:$,updateFiberProps:function(e,t){e[W]=t}};function K(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Y(e,t,n){for(var r=[];e;)r.push(e),e=K(e);for(e=r.length;0<e--;)t(r[e],"captured",n);for(e=0;e<r.length;e++)t(r[e],"bubbled",n)}function Q(e,t,n){(t=I(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=O(n._dispatchListeners,t),n._dispatchInstances=O(n._dispatchInstances,e))}function G(e){e&&e.dispatchConfig.phasedRegistrationNames&&Y(e._targetInst,Q,e)}function X(e){if(e&&e.dispatchConfig.phasedRegistrationNames){var t=e._targetInst;Y(t=t?K(t):null,Q,e)}}function J(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=I(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=O(n._dispatchListeners,t),n._dispatchInstances=O(n._dispatchInstances,e))}function Z(e){e&&e.dispatchConfig.registrationName&&J(e._targetInst,null,e)}function ee(e){R(e,G)}function te(e,t,n,r){if(n&&r)e:{for(var o=n,a=r,i=0,l=o;l;l=K(l))i++;l=0;for(var u=a;u;u=K(u))l++;for(;0<i-l;)o=K(o),i--;for(;0<l-i;)a=K(a),l--;for(;i--;){if(o===a||o===a.alternate)break e;o=K(o),a=K(a)}o=null}else o=null;for(a=o,o=[];n&&n!==a&&(null===(i=n.alternate)||i!==a);)o.push(n),n=K(n);for(n=[];r&&r!==a&&(null===(i=r.alternate)||i!==a);)n.push(r),r=K(r);for(r=0;r<o.length;r++)J(o[r],"bubbled",e);for(e=n.length;0<e--;)J(n[e],"captured",t)}var ne={accumulateTwoPhaseDispatches:ee,accumulateTwoPhaseDispatchesSkipTarget:function(e){R(e,X)},accumulateEnterLeaveDispatches:te,accumulateDirectDispatches:function(e){R(e,Z)}};function re(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n["ms"+e]="MS"+t,n["O"+e]="o"+t.toLowerCase(),n}var oe={animationend:re("Animation","AnimationEnd"),animationiteration:re("Animation","AnimationIteration"),animationstart:re("Animation","AnimationStart"),transitionend:re("Transition","TransitionEnd")},ae={},ie={};function le(e){if(ae[e])return ae[e];if(!oe[e])return e;var t,n=oe[e];for(t in n)if(n.hasOwnProperty(t)&&t in ie)return ae[e]=n[t];return e}a.canUseDOM&&(ie=document.createElement("div").style,"AnimationEvent"in window||(delete oe.animationend.animation,delete oe.animationiteration.animation,delete oe.animationstart.animation),"TransitionEvent"in window||delete oe.transitionend.transition);var ue=le("animationend"),ce=le("animationiteration"),se=le("animationstart"),fe=le("transitionend"),pe="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),de=null;function he(){return!de&&a.canUseDOM&&(de="textContent"in document.documentElement?"textContent":"innerText"),de}var me={_root:null,_startText:null,_fallbackText:null};function ve(){if(me._fallbackText)return me._fallbackText;var e,t,n=me._startText,r=n.length,o=ye(),a=o.length;for(e=0;e<r&&n[e]===o[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===o[a-t];t++);return me._fallbackText=o.slice(e,1<t?1-t:void 0),me._fallbackText}function ye(){return"value"in me._root?me._root.value:me._root[he()]}var ge="dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(" "),be={type:null,target:null,currentTarget:l.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};function we(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?l.thatReturnsTrue:l.thatReturnsFalse,this.isPropagationStopped=l.thatReturnsFalse,this}function xe(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function ke(e){e instanceof this||p("223"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Ee(e){e.eventPool=[],e.getPooled=xe,e.release=ke}i(we.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=l.thatReturnsTrue)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=l.thatReturnsTrue)},persist:function(){this.isPersistent=l.thatReturnsTrue},isPersistent:l.thatReturnsFalse,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;for(t=0;t<ge.length;t++)this[ge[t]]=null}}),we.Interface=be,we.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var o=new t;return i(o,n.prototype),n.prototype=o,n.prototype.constructor=n,n.Interface=i({},r.Interface,e),n.extend=r.extend,Ee(n),n},Ee(we);var Ce=we.extend({data:null}),Te=we.extend({data:null}),_e=[9,13,27,32],Se=a.canUseDOM&&"CompositionEvent"in window,Pe=null;a.canUseDOM&&"documentMode"in document&&(Pe=document.documentMode);var Oe=a.canUseDOM&&"TextEvent"in window&&!Pe,Re=a.canUseDOM&&(!Se||Pe&&8<Pe&&11>=Pe),Ne=String.fromCharCode(32),je={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},Ae=!1;function Ue(e,t){switch(e){case"keyup":return-1!==_e.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Me(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Ie=!1;var Fe={eventTypes:je,extractEvents:function(e,t,n,r){var o=void 0,a=void 0;if(Se)e:{switch(e){case"compositionstart":o=je.compositionStart;break e;case"compositionend":o=je.compositionEnd;break e;case"compositionupdate":o=je.compositionUpdate;break e}o=void 0}else Ie?Ue(e,n)&&(o=je.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=je.compositionStart);return o?(Re&&(Ie||o!==je.compositionStart?o===je.compositionEnd&&Ie&&(a=ve()):(me._root=r,me._startText=ye(),Ie=!0)),o=Ce.getPooled(o,t,n,r),a?o.data=a:null!==(a=Me(n))&&(o.data=a),ee(o),a=o):a=null,(e=Oe?function(e,t){switch(e){case"compositionend":return Me(t);case"keypress":return 32!==t.which?null:(Ae=!0,Ne);case"textInput":return(e=t.data)===Ne&&Ae?null:e;default:return null}}(e,n):function(e,t){if(Ie)return"compositionend"===e||!Se&&Ue(e,t)?(e=ve(),me._root=null,me._startText=null,me._fallbackText=null,Ie=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Re?null:t.data;default:return null}}(e,n))?((t=Te.getPooled(je.beforeInput,t,n,r)).data=e,ee(t)):t=null,null===a?t:null===t?a:[a,t]}},Le=null,De={injectFiberControlledHostComponent:function(e){Le=e}},ze=null,Be=null;function We(e){if(e=_(e)){Le&&"function"==typeof Le.restoreControlledState||p("194");var t=T(e.stateNode);Le.restoreControlledState(e.stateNode,e.type,t)}}function Ve(e){ze?Be?Be.push(e):Be=[e]:ze=e}function He(){return null!==ze||null!==Be}function $e(){if(ze){var e=ze,t=Be;if(Be=ze=null,We(e),t)for(e=0;e<t.length;e++)We(t[e])}}var qe={injection:De,enqueueStateRestore:Ve,needsStateRestore:He,restoreStateIfNeeded:$e};function Ke(e,t){return e(t)}function Ye(e,t,n){return e(t,n)}function Qe(){}var Ge=!1;function Xe(e,t){if(Ge)return e(t);Ge=!0;try{return Ke(e,t)}finally{Ge=!1,He()&&(Qe(),$e())}}var Je={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Ze(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Je[e.type]:"textarea"===t}function et(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function tt(e,t){return!(!a.canUseDOM||t&&!("addEventListener"in document))&&((t=(e="on"+e)in document)||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t)}function nt(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function rt(e){e._valueTracker||(e._valueTracker=function(e){var t=nt(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function ot(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=nt(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var at=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,it="function"==typeof Symbol&&Symbol.for,lt=it?Symbol.for("react.element"):60103,ut=it?Symbol.for("react.portal"):60106,ct=it?Symbol.for("react.fragment"):60107,st=it?Symbol.for("react.strict_mode"):60108,ft=it?Symbol.for("react.profiler"):60114,pt=it?Symbol.for("react.provider"):60109,dt=it?Symbol.for("react.context"):60110,ht=it?Symbol.for("react.async_mode"):60111,mt=it?Symbol.for("react.forward_ref"):60112,vt=it?Symbol.for("react.timeout"):60113,yt="function"==typeof Symbol&&Symbol.iterator;function gt(e){return null===e||void 0===e?null:"function"==typeof(e=yt&&e[yt]||e["@@iterator"])?e:null}function bt(e){var t=e.type;if("function"==typeof t)return t.displayName||t.name;if("string"==typeof t)return t;switch(t){case ht:return"AsyncMode";case dt:return"Context.Consumer";case ct:return"ReactFragment";case ut:return"ReactPortal";case ft:return"Profiler("+e.pendingProps.id+")";case pt:return"Context.Provider";case st:return"StrictMode";case vt:return"Timeout"}if("object"==typeof t&&null!==t)switch(t.$$typeof){case mt:return""!==(e=t.render.displayName||t.render.name||"")?"ForwardRef("+e+")":"ForwardRef"}return null}function wt(e){var t="";do{e:switch(e.tag){case 0:case 1:case 2:case 5:var n=e._debugOwner,r=e._debugSource,o=bt(e),a=null;n&&(a=bt(n)),n=r,o="\n    in "+(o||"Unknown")+(n?" (at "+n.fileName.replace(/^.*[\\\/]/,"")+":"+n.lineNumber+")":a?" (created by "+a+")":"");break e;default:o=""}t+=o,e=e.return}while(e);return t}var xt=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,kt={},Et={};function Ct(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var Tt={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){Tt[e]=new Ct(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];Tt[t]=new Ct(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){Tt[e]=new Ct(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","preserveAlpha"].forEach(function(e){Tt[e]=new Ct(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){Tt[e]=new Ct(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){Tt[e]=new Ct(e,3,!0,e.toLowerCase(),null)}),["capture","download"].forEach(function(e){Tt[e]=new Ct(e,4,!1,e.toLowerCase(),null)}),["cols","rows","size","span"].forEach(function(e){Tt[e]=new Ct(e,6,!1,e.toLowerCase(),null)}),["rowSpan","start"].forEach(function(e){Tt[e]=new Ct(e,5,!1,e.toLowerCase(),null)});var _t=/[\-:]([a-z])/g;function St(e){return e[1].toUpperCase()}function Pt(e,t,n,r){var o=Tt.hasOwnProperty(t)?Tt[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null===t||void 0===t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!Et.hasOwnProperty(e)||!kt.hasOwnProperty(e)&&(xt.test(e)?Et[e]=!0:(kt[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function Ot(e,t){var n=t.checked;return i({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Rt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=Mt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Nt(e,t){null!=(t=t.checked)&&Pt(e,"checked",t,!1)}function jt(e,t){Nt(e,t);var n=Mt(t.value);null!=n&&("number"===t.type?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n)),t.hasOwnProperty("value")?Ut(e,t.type,n):t.hasOwnProperty("defaultValue")&&Ut(e,t.type,Mt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function At(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){t=""+e._wrapperState.initialValue;var r=e.value;n||t===r||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!e.defaultChecked,""!==n&&(e.name=n)}function Ut(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Mt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(_t,St);Tt[t]=new Ct(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(_t,St);Tt[t]=new Ct(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(_t,St);Tt[t]=new Ct(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),Tt.tabIndex=new Ct("tabIndex",1,!1,"tabindex",null);var It={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Ft(e,t,n){return(e=we.getPooled(It.change,e,t,n)).type="change",Ve(n),ee(e),e}var Lt=null,Dt=null;function zt(e){F(e,!1)}function Bt(e){if(ot(H(e)))return e}function Wt(e,t){if("change"===e)return t}var Vt=!1;function Ht(){Lt&&(Lt.detachEvent("onpropertychange",$t),Dt=Lt=null)}function $t(e){"value"===e.propertyName&&Bt(Dt)&&Xe(zt,e=Ft(Dt,e,et(e)))}function qt(e,t,n){"focus"===e?(Ht(),Dt=n,(Lt=t).attachEvent("onpropertychange",$t)):"blur"===e&&Ht()}function Kt(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Bt(Dt)}function Yt(e,t){if("click"===e)return Bt(t)}function Qt(e,t){if("input"===e||"change"===e)return Bt(t)}a.canUseDOM&&(Vt=tt("input")&&(!document.documentMode||9<document.documentMode));var Gt={eventTypes:It,_isInputEventSupported:Vt,extractEvents:function(e,t,n,r){var o=t?H(t):window,a=void 0,i=void 0,l=o.nodeName&&o.nodeName.toLowerCase();if("select"===l||"input"===l&&"file"===o.type?a=Wt:Ze(o)?Vt?a=Qt:(a=Kt,i=qt):(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(a=Yt),a&&(a=a(e,t)))return Ft(a,n,r);i&&i(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Ut(o,"number",o.value)}},Xt=we.extend({view:null,detail:null}),Jt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Zt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Jt[e])&&!!t[e]}function en(){return Zt}var tn=Xt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:en,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)}}),nn=tn.extend({pointerId:null,width:null,height:null,pressure:null,tiltX:null,tiltY:null,pointerType:null,isPrimary:null}),rn={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},on={eventTypes:rn,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,a="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!a&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,a?(a=t,t=(t=n.relatedTarget||n.toElement)?V(t):null):a=null,a===t)return null;var i=void 0,l=void 0,u=void 0,c=void 0;return"mouseout"===e||"mouseover"===e?(i=tn,l=rn.mouseLeave,u=rn.mouseEnter,c="mouse"):"pointerout"!==e&&"pointerover"!==e||(i=nn,l=rn.pointerLeave,u=rn.pointerEnter,c="pointer"),e=null==a?o:H(a),o=null==t?o:H(t),(l=i.getPooled(l,a,n,r)).type=c+"leave",l.target=e,l.relatedTarget=o,(n=i.getPooled(u,t,n,r)).type=c+"enter",n.target=o,n.relatedTarget=e,te(l,n,a,t),[l,n]}};function an(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function ln(e){2!==an(e)&&p("188")}function un(e){var t=e.alternate;if(!t)return 3===(t=an(e))&&p("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,a=o?o.alternate:null;if(!o||!a)break;if(o.child===a.child){for(var i=o.child;i;){if(i===n)return ln(o),e;if(i===r)return ln(o),t;i=i.sibling}p("188")}if(n.return!==r.return)n=o,r=a;else{i=!1;for(var l=o.child;l;){if(l===n){i=!0,n=o,r=a;break}if(l===r){i=!0,r=o,n=a;break}l=l.sibling}if(!i){for(l=a.child;l;){if(l===n){i=!0,n=a,r=o;break}if(l===r){i=!0,r=a,n=o;break}l=l.sibling}i||p("189")}}n.alternate!==r&&p("190")}return 3!==n.tag&&p("188"),n.stateNode.current===n?e:t}function cn(e){if(!(e=un(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var sn=we.extend({animationName:null,elapsedTime:null,pseudoElement:null}),fn=we.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),pn=Xt.extend({relatedTarget:null});function dn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var hn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},mn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},vn=Xt.extend({key:function(e){if(e.key){var t=hn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=dn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?mn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:en,charCode:function(e){return"keypress"===e.type?dn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?dn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),yn=tn.extend({dataTransfer:null}),gn=Xt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:en}),bn=we.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),wn=tn.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),xn=[["abort","abort"],[ue,"animationEnd"],[ce,"animationIteration"],[se,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[fe,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],kn={},En={};function Cn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},kn[e]=t,En[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){Cn(e,!0)}),xn.forEach(function(e){Cn(e,!1)});var Tn={eventTypes:kn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=En[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=En[e];if(!o)return null;switch(e){case"keypress":if(0===dn(n))return null;case"keydown":case"keyup":e=vn;break;case"blur":case"focus":e=pn;break;case"click":if(2===n.button)return null;case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=tn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=yn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=gn;break;case ue:case ce:case se:e=sn;break;case fe:e=bn;break;case"scroll":e=Xt;break;case"wheel":e=wn;break;case"copy":case"cut":case"paste":e=fn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=nn;break;default:e=we}return ee(t=e.getPooled(o,t,n,r)),t}},_n=Tn.isInteractiveTopLevelEventType,Sn=[];function Pn(e){var t=e.targetInst;do{if(!t){e.ancestors.push(t);break}var n;for(n=t;n.return;)n=n.return;if(!(n=3!==n.tag?null:n.stateNode.containerInfo))break;e.ancestors.push(t),t=V(n)}while(t);for(n=0;n<e.ancestors.length;n++)t=e.ancestors[n],L(e.topLevelType,t,e.nativeEvent,et(e.nativeEvent))}var On=!0;function Rn(e){On=!!e}function Nn(e,t){if(!t)return null;var n=(_n(e)?An:Un).bind(null,e);t.addEventListener(e,n,!1)}function jn(e,t){if(!t)return null;var n=(_n(e)?An:Un).bind(null,e);t.addEventListener(e,n,!0)}function An(e,t){Ye(Un,e,t)}function Un(e,t){if(On){var n=et(t);if(null===(n=V(n))||"number"!=typeof n.tag||2===an(n)||(n=null),Sn.length){var r=Sn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{Xe(Pn,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>Sn.length&&Sn.push(e)}}}var Mn={get _enabled(){return On},setEnabled:Rn,isEnabled:function(){return On},trapBubbledEvent:Nn,trapCapturedEvent:jn,dispatchEvent:Un},In={},Fn=0,Ln="_reactListenersID"+(""+Math.random()).slice(2);function Dn(e){return Object.prototype.hasOwnProperty.call(e,Ln)||(e[Ln]=Fn++,In[e[Ln]]={}),In[e[Ln]]}function zn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Bn(e,t){var n,r=zn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=zn(r)}}function Wn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var Vn=a.canUseDOM&&"documentMode"in document&&11>=document.documentMode,Hn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu focus keydown keyup mousedown mouseup selectionchange".split(" ")}},$n=null,qn=null,Kn=null,Yn=!1;function Qn(e,t){if(Yn||null==$n||$n!==u())return null;var n=$n;return"selectionStart"in n&&Wn(n)?n={start:n.selectionStart,end:n.selectionEnd}:window.getSelection?n={anchorNode:(n=window.getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset}:n=void 0,Kn&&c(Kn,n)?null:(Kn=n,(e=we.getPooled(Hn.select,qn,e,t)).type="select",e.target=$n,ee(e),e)}var Gn={eventTypes:Hn,extractEvents:function(e,t,n,r){var o,a=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!a)){e:{a=Dn(a),o=x.onSelect;for(var i=0;i<o.length;i++){var l=o[i];if(!a.hasOwnProperty(l)||!a[l]){a=!1;break e}}a=!0}o=!a}if(o)return null;switch(a=t?H(t):window,e){case"focus":(Ze(a)||"true"===a.contentEditable)&&($n=a,qn=t,Kn=null);break;case"blur":Kn=qn=$n=null;break;case"mousedown":Yn=!0;break;case"contextmenu":case"mouseup":return Yn=!1,Qn(n,r);case"selectionchange":if(Vn)break;case"keydown":case"keyup":return Qn(n,r)}return null}};M.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),T=q.getFiberCurrentPropsFromNode,_=q.getInstanceFromNode,S=q.getNodeFromInstance,M.injectEventPluginsByName({SimpleEventPlugin:Tn,EnterLeaveEventPlugin:on,ChangeEventPlugin:Gt,SelectEventPlugin:Gn,BeforeInputEventPlugin:Fe});var Xn="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,Jn=Date,Zn=setTimeout,er=clearTimeout,tr=void 0;if("object"==typeof performance&&"function"==typeof performance.now){var nr=performance;tr=function(){return nr.now()}}else tr=function(){return Jn.now()};var rr=void 0,or=void 0;if(a.canUseDOM){var ar="function"==typeof Xn?Xn:function(){p("276")},ir=null,lr=null,ur=-1,cr=!1,sr=!1,fr=0,pr=33,dr=33,hr={didTimeout:!1,timeRemaining:function(){var e=fr-tr();return 0<e?e:0}},mr=function(e,t){var n=e.scheduledCallback,r=!1;try{n(t),r=!0}finally{or(e),r||(cr=!0,window.postMessage(vr,"*"))}},vr="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(e){if(e.source===window&&e.data===vr&&(cr=!1,null!==ir)){if(null!==ir){var t=tr();if(!(-1===ur||ur>t)){e=-1;for(var n=[],r=ir;null!==r;){var o=r.timeoutTime;-1!==o&&o<=t?n.push(r):-1!==o&&(-1===e||o<e)&&(e=o),r=r.next}if(0<n.length)for(hr.didTimeout=!0,t=0,r=n.length;t<r;t++)mr(n[t],hr);ur=e}}for(e=tr();0<fr-e&&null!==ir;)e=ir,hr.didTimeout=!1,mr(e,hr),e=tr();null===ir||sr||(sr=!0,ar(yr))}},!1);var yr=function(e){sr=!1;var t=e-fr+dr;t<dr&&pr<dr?(8>t&&(t=8),dr=t<pr?pr:t):pr=t,fr=e+dr,cr||(cr=!0,window.postMessage(vr,"*"))};rr=function(e,t){var n=-1;return null!=t&&"number"==typeof t.timeout&&(n=tr()+t.timeout),(-1===ur||-1!==n&&n<ur)&&(ur=n),e={scheduledCallback:e,timeoutTime:n,prev:null,next:null},null===ir?ir=e:null!==(t=e.prev=lr)&&(t.next=e),lr=e,sr||(sr=!0,ar(yr)),e},or=function(e){if(null!==e.prev||ir===e){var t=e.next,n=e.prev;e.next=null,e.prev=null,null!==t?null!==n?(n.next=t,t.prev=n):(t.prev=null,ir=t):null!==n?(n.next=null,lr=n):lr=ir=null}}}else{var gr=new Map;rr=function(e){var t={scheduledCallback:e,timeoutTime:0,next:null,prev:null},n=Zn(function(){e({timeRemaining:function(){return 1/0},didTimeout:!1})});return gr.set(e,n),t},or=function(e){var t=gr.get(e.scheduledCallback);gr.delete(e),er(t)}}function br(e,t){return e=i({children:void 0},t),(t=function(e){var t="";return o.Children.forEach(e,function(e){null==e||"string"!=typeof e&&"number"!=typeof e||(t+=e)}),t}(t.children))&&(e.children=t),e}function wr(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+n,t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function xr(e,t){var n=t.value;e._wrapperState={initialValue:null!=n?n:t.defaultValue,wasMultiple:!!t.multiple}}function kr(e,t){return null!=t.dangerouslySetInnerHTML&&p("91"),i({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Er(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&p("92"),Array.isArray(t)&&(1>=t.length||p("93"),t=t[0]),n=""+t),null==n&&(n="")),e._wrapperState={initialValue:""+n}}function Cr(e,t){var n=t.value;null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&(e.defaultValue=n)),null!=t.defaultValue&&(e.defaultValue=t.defaultValue)}function Tr(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}var _r={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function Sr(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Pr(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Sr(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Or=void 0,Rr=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction(function(){return e(t,n)})}:e}(function(e,t){if(e.namespaceURI!==_r.svg||"innerHTML"in e)e.innerHTML=t;else{for((Or=Or||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=Or.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}});function Nr(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var jr={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Ar=["Webkit","ms","Moz","O"];function Ur(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=n,a=t[n];o=null==a||"boolean"==typeof a||""===a?"":r||"number"!=typeof a||0===a||jr.hasOwnProperty(o)&&jr[o]?(""+a).trim():a+"px","float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(jr).forEach(function(e){Ar.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),jr[t]=jr[e]})});var Mr=i({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Ir(e,t,n){t&&(Mr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&p("137",e,n()),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&p("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||p("61")),null!=t.style&&"object"!=typeof t.style&&p("62",n()))}function Fr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Lr=l.thatReturns("");function Dr(e,t){var n=Dn(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=x[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":jn("scroll",e);break;case"focus":case"blur":jn("focus",e),jn("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":tt(o,!0)&&jn(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===pe.indexOf(o)&&Nn(o,e)}n[o]=!0}}}function zr(e,t,n,r){return n=9===n.nodeType?n:n.ownerDocument,r===_r.html&&(r=Sr(e)),r===_r.html?"script"===e?((e=n.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):e="string"==typeof t.is?n.createElement(e,{is:t.is}):n.createElement(e):e=n.createElementNS(r,e),e}function Br(e,t){return(9===t.nodeType?t:t.ownerDocument).createTextNode(e)}function Wr(e,t,n,r){var o=Fr(t,n);switch(t){case"iframe":case"object":Nn("load",e);var a=n;break;case"video":case"audio":for(a=0;a<pe.length;a++)Nn(pe[a],e);a=n;break;case"source":Nn("error",e),a=n;break;case"img":case"image":case"link":Nn("error",e),Nn("load",e),a=n;break;case"form":Nn("reset",e),Nn("submit",e),a=n;break;case"details":Nn("toggle",e),a=n;break;case"input":Rt(e,n),a=Ot(e,n),Nn("invalid",e),Dr(r,"onChange");break;case"option":a=br(e,n);break;case"select":xr(e,n),a=i({},n,{value:void 0}),Nn("invalid",e),Dr(r,"onChange");break;case"textarea":Er(e,n),a=kr(e,n),Nn("invalid",e),Dr(r,"onChange");break;default:a=n}Ir(t,a,Lr);var u,c=a;for(u in c)if(c.hasOwnProperty(u)){var s=c[u];"style"===u?Ur(e,s):"dangerouslySetInnerHTML"===u?null!=(s=s?s.__html:void 0)&&Rr(e,s):"children"===u?"string"==typeof s?("textarea"!==t||""!==s)&&Nr(e,s):"number"==typeof s&&Nr(e,""+s):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(w.hasOwnProperty(u)?null!=s&&Dr(r,u):null!=s&&Pt(e,u,s,o))}switch(t){case"input":rt(e),At(e,n,!1);break;case"textarea":rt(e),Tr(e);break;case"option":null!=n.value&&e.setAttribute("value",n.value);break;case"select":e.multiple=!!n.multiple,null!=(t=n.value)?wr(e,!!n.multiple,t,!1):null!=n.defaultValue&&wr(e,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=l)}}function Vr(e,t,n,r,o){var a=null;switch(t){case"input":n=Ot(e,n),r=Ot(e,r),a=[];break;case"option":n=br(e,n),r=br(e,r),a=[];break;case"select":n=i({},n,{value:void 0}),r=i({},r,{value:void 0}),a=[];break;case"textarea":n=kr(e,n),r=kr(e,r),a=[];break;default:"function"!=typeof n.onClick&&"function"==typeof r.onClick&&(e.onclick=l)}Ir(t,r,Lr),t=e=void 0;var u=null;for(e in n)if(!r.hasOwnProperty(e)&&n.hasOwnProperty(e)&&null!=n[e])if("style"===e){var c=n[e];for(t in c)c.hasOwnProperty(t)&&(u||(u={}),u[t]="")}else"dangerouslySetInnerHTML"!==e&&"children"!==e&&"suppressContentEditableWarning"!==e&&"suppressHydrationWarning"!==e&&"autoFocus"!==e&&(w.hasOwnProperty(e)?a||(a=[]):(a=a||[]).push(e,null));for(e in r){var s=r[e];if(c=null!=n?n[e]:void 0,r.hasOwnProperty(e)&&s!==c&&(null!=s||null!=c))if("style"===e)if(c){for(t in c)!c.hasOwnProperty(t)||s&&s.hasOwnProperty(t)||(u||(u={}),u[t]="");for(t in s)s.hasOwnProperty(t)&&c[t]!==s[t]&&(u||(u={}),u[t]=s[t])}else u||(a||(a=[]),a.push(e,u)),u=s;else"dangerouslySetInnerHTML"===e?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(a=a||[]).push(e,""+s)):"children"===e?c===s||"string"!=typeof s&&"number"!=typeof s||(a=a||[]).push(e,""+s):"suppressContentEditableWarning"!==e&&"suppressHydrationWarning"!==e&&(w.hasOwnProperty(e)?(null!=s&&Dr(o,e),a||c===s||(a=[])):(a=a||[]).push(e,s))}return u&&(a=a||[]).push("style",u),a}function Hr(e,t,n,r,o){"input"===n&&"radio"===o.type&&null!=o.name&&Nt(e,o),Fr(n,r),r=Fr(n,o);for(var a=0;a<t.length;a+=2){var i=t[a],l=t[a+1];"style"===i?Ur(e,l):"dangerouslySetInnerHTML"===i?Rr(e,l):"children"===i?Nr(e,l):Pt(e,i,l,r)}switch(n){case"input":jt(e,o);break;case"textarea":Cr(e,o);break;case"select":e._wrapperState.initialValue=void 0,t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?wr(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?wr(e,!!o.multiple,o.defaultValue,!0):wr(e,!!o.multiple,o.multiple?[]:"",!1))}}function $r(e,t,n,r,o){switch(t){case"iframe":case"object":Nn("load",e);break;case"video":case"audio":for(r=0;r<pe.length;r++)Nn(pe[r],e);break;case"source":Nn("error",e);break;case"img":case"image":case"link":Nn("error",e),Nn("load",e);break;case"form":Nn("reset",e),Nn("submit",e);break;case"details":Nn("toggle",e);break;case"input":Rt(e,n),Nn("invalid",e),Dr(o,"onChange");break;case"select":xr(e,n),Nn("invalid",e),Dr(o,"onChange");break;case"textarea":Er(e,n),Nn("invalid",e),Dr(o,"onChange")}for(var a in Ir(t,n,Lr),r=null,n)if(n.hasOwnProperty(a)){var i=n[a];"children"===a?"string"==typeof i?e.textContent!==i&&(r=["children",i]):"number"==typeof i&&e.textContent!==""+i&&(r=["children",""+i]):w.hasOwnProperty(a)&&null!=i&&Dr(o,a)}switch(t){case"input":rt(e),At(e,n,!0);break;case"textarea":rt(e),Tr(e);break;case"select":case"option":break;default:"function"==typeof n.onClick&&(e.onclick=l)}return r}function qr(e,t){return e.nodeValue!==t}var Kr={createElement:zr,createTextNode:Br,setInitialProperties:Wr,diffProperties:Vr,updateProperties:Hr,diffHydratedProperties:$r,diffHydratedText:qr,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(e,t,n){switch(t){case"input":if(jt(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=$(r);o||p("90"),ot(r),jt(r,o)}}}break;case"textarea":Cr(e,n);break;case"select":null!=(t=n.value)&&wr(e,!!n.multiple,t,!1)}}},Yr=null,Qr=null;function Gr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Xr(e,t){return"textarea"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&"string"==typeof t.dangerouslySetInnerHTML.__html}var Jr=tr,Zr=rr,eo=or;function to(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function no(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var ro=[],oo=-1;function ao(e){return{current:e}}function io(e){0>oo||(e.current=ro[oo],ro[oo]=null,oo--)}function lo(e,t){ro[++oo]=e.current,e.current=t}var uo=ao(f),co=ao(!1),so=f;function fo(e){return ho(e)?so:uo.current}function po(e,t){var n=e.type.contextTypes;if(!n)return f;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in n)a[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function ho(e){return 2===e.tag&&null!=e.type.childContextTypes}function mo(e){ho(e)&&(io(co),io(uo))}function vo(e){io(co),io(uo)}function yo(e,t,n){uo.current!==f&&p("168"),lo(uo,t),lo(co,n)}function go(e,t){var n=e.stateNode,r=e.type.childContextTypes;if("function"!=typeof n.getChildContext)return t;for(var o in n=n.getChildContext())o in r||p("108",bt(e)||"Unknown",o);return i({},t,n)}function bo(e){if(!ho(e))return!1;var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||f,so=uo.current,lo(uo,t),lo(co,co.current),!0}function wo(e,t){var n=e.stateNode;if(n||p("169"),t){var r=go(e,so);n.__reactInternalMemoizedMergedChildContext=r,io(co),io(uo),lo(uo,r)}else io(co);lo(co,t)}function xo(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=null,this.index=0,this.ref=null,this.pendingProps=t,this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.expirationTime=0,this.alternate=null}function ko(e,t,n){var r=e.alternate;return null===r?((r=new xo(e.tag,t,e.key,e.mode)).type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=t,r.effectTag=0,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null),r.expirationTime=n,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function Eo(e,t,n){var r=e.type,o=e.key;if(e=e.props,"function"==typeof r)var a=r.prototype&&r.prototype.isReactComponent?2:0;else if("string"==typeof r)a=5;else switch(r){case ct:return Co(e.children,t,n,o);case ht:a=11,t|=3;break;case st:a=11,t|=2;break;case ft:return(r=new xo(15,e,o,4|t)).type=ft,r.expirationTime=n,r;case vt:a=16,t|=2;break;default:e:{switch("object"==typeof r&&null!==r?r.$$typeof:null){case pt:a=13;break e;case dt:a=12;break e;case mt:a=14;break e;default:p("130",null==r?r:typeof r,"")}a=void 0}}return(t=new xo(a,e,o,t)).type=r,t.expirationTime=n,t}function Co(e,t,n,r){return(e=new xo(10,e,r,t)).expirationTime=n,e}function To(e,t,n){return(e=new xo(6,e,null,t)).expirationTime=n,e}function _o(e,t,n){return(t=new xo(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function So(e,t,n){return e={current:t=new xo(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:n,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null},t.stateNode=e}var Po=null,Oo=null;function Ro(e){return function(t){try{return e(t)}catch(e){}}}function No(e){"function"==typeof Po&&Po(e)}function jo(e){"function"==typeof Oo&&Oo(e)}var Ao=!1;function Uo(e){return{expirationTime:0,baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Mo(e){return{expirationTime:e.expirationTime,baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Io(e){return{expirationTime:e,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Fo(e,t,n){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t),(0===e.expirationTime||e.expirationTime>n)&&(e.expirationTime=n)}function Lo(e,t,n){var r=e.alternate;if(null===r){var o=e.updateQueue,a=null;null===o&&(o=e.updateQueue=Uo(e.memoizedState))}else o=e.updateQueue,a=r.updateQueue,null===o?null===a?(o=e.updateQueue=Uo(e.memoizedState),a=r.updateQueue=Uo(r.memoizedState)):o=e.updateQueue=Mo(a):null===a&&(a=r.updateQueue=Mo(o));null===a||o===a?Fo(o,t,n):null===o.lastUpdate||null===a.lastUpdate?(Fo(o,t,n),Fo(a,t,n)):(Fo(o,t,n),a.lastUpdate=t)}function Do(e,t,n){var r=e.updateQueue;null===(r=null===r?e.updateQueue=Uo(e.memoizedState):zo(e,r)).lastCapturedUpdate?r.firstCapturedUpdate=r.lastCapturedUpdate=t:(r.lastCapturedUpdate.next=t,r.lastCapturedUpdate=t),(0===r.expirationTime||r.expirationTime>n)&&(r.expirationTime=n)}function zo(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=Mo(t)),t}function Bo(e,t,n,r,o,a){switch(n.tag){case 1:return"function"==typeof(e=n.payload)?e.call(a,r,o):e;case 3:e.effectTag=-1025&e.effectTag|64;case 0:if(null===(o="function"==typeof(e=n.payload)?e.call(a,r,o):e)||void 0===o)break;return i({},r,o);case 2:Ao=!0}return r}function Wo(e,t,n,r,o){if(Ao=!1,!(0===t.expirationTime||t.expirationTime>o)){for(var a=(t=zo(e,t)).baseState,i=null,l=0,u=t.firstUpdate,c=a;null!==u;){var s=u.expirationTime;s>o?(null===i&&(i=u,a=c),(0===l||l>s)&&(l=s)):(c=Bo(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=u:(t.lastEffect.nextEffect=u,t.lastEffect=u))),u=u.next}for(s=null,u=t.firstCapturedUpdate;null!==u;){var f=u.expirationTime;f>o?(null===s&&(s=u,null===i&&(a=c)),(0===l||l>f)&&(l=f)):(c=Bo(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===i&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===i&&null===s&&(a=c),t.baseState=a,t.firstUpdate=i,t.firstCapturedUpdate=s,t.expirationTime=l,e.memoizedState=c}}function Vo(e,t){"function"!=typeof e&&p("191",e),e.call(t)}function Ho(e,t,n){for(null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),e=t.firstEffect,t.firstEffect=t.lastEffect=null;null!==e;){var r=e.callback;null!==r&&(e.callback=null,Vo(r,n)),e=e.nextEffect}for(e=t.firstCapturedEffect,t.firstCapturedEffect=t.lastCapturedEffect=null;null!==e;)null!==(t=e.callback)&&(e.callback=null,Vo(t,n)),e=e.nextEffect}function $o(e,t){return{value:e,source:t,stack:wt(t)}}var qo=ao(null),Ko=ao(null),Yo=ao(0);function Qo(e){var t=e.type._context;lo(Yo,t._changedBits),lo(Ko,t._currentValue),lo(qo,e),t._currentValue=e.pendingProps.value,t._changedBits=e.stateNode}function Go(e){var t=Yo.current,n=Ko.current;io(qo),io(Ko),io(Yo),(e=e.type._context)._currentValue=n,e._changedBits=t}var Xo={},Jo=ao(Xo),Zo=ao(Xo),ea=ao(Xo);function ta(e){return e===Xo&&p("174"),e}function na(e,t){lo(ea,t),lo(Zo,e),lo(Jo,Xo);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Pr(null,"");break;default:t=Pr(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}io(Jo),lo(Jo,t)}function ra(e){io(Jo),io(Zo),io(ea)}function oa(e){Zo.current===e&&(io(Jo),io(Zo))}function aa(e,t,n){var r=e.memoizedState;r=null===(t=t(n,r))||void 0===t?r:i({},r,t),e.memoizedState=r,null!==(e=e.updateQueue)&&0===e.expirationTime&&(e.baseState=r)}var ia={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===an(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=gi(),o=Io(r=vi(r,e));o.payload=t,void 0!==n&&null!==n&&(o.callback=n),Lo(e,o,r),yi(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=gi(),o=Io(r=vi(r,e));o.tag=1,o.payload=t,void 0!==n&&null!==n&&(o.callback=n),Lo(e,o,r),yi(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=gi(),r=Io(n=vi(n,e));r.tag=2,void 0!==t&&null!==t&&(r.callback=t),Lo(e,r,n),yi(e,n)}};function la(e,t,n,r,o,a){var i=e.stateNode;return e=e.type,"function"==typeof i.shouldComponentUpdate?i.shouldComponentUpdate(n,o,a):!e.prototype||!e.prototype.isPureReactComponent||(!c(t,n)||!c(r,o))}function ua(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ia.enqueueReplaceState(t,t.state,null)}function ca(e,t){var n=e.type,r=e.stateNode,o=e.pendingProps,a=fo(e);r.props=o,r.state=e.memoizedState,r.refs=f,r.context=po(e,a),null!==(a=e.updateQueue)&&(Wo(e,a,o,r,t),r.state=e.memoizedState),"function"==typeof(a=e.type.getDerivedStateFromProps)&&(aa(e,a,o),r.state=e.memoizedState),"function"==typeof n.getDerivedStateFromProps||"function"==typeof r.getSnapshotBeforeUpdate||"function"!=typeof r.UNSAFE_componentWillMount&&"function"!=typeof r.componentWillMount||(n=r.state,"function"==typeof r.componentWillMount&&r.componentWillMount(),"function"==typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),n!==r.state&&ia.enqueueReplaceState(r,r.state,null),null!==(a=e.updateQueue)&&(Wo(e,a,o,r,t),r.state=e.memoizedState)),"function"==typeof r.componentDidMount&&(e.effectTag|=4)}var sa=Array.isArray;function fa(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){var r=void 0;(n=n._owner)&&(2!==n.tag&&p("110"),r=n.stateNode),r||p("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs===f?r.refs={}:r.refs;null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&p("148"),n._owner||p("254",e)}return e}function pa(e,t){"textarea"!==e.type&&p("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function da(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=ko(e,t,n)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function i(t){return e&&null===t.alternate&&(t.effectTag=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=To(n,e.mode,r)).return=e,t):((t=o(t,n,r)).return=e,t)}function u(e,t,n,r){return null!==t&&t.type===n.type?((r=o(t,n.props,r)).ref=fa(e,t,n),r.return=e,r):((r=Eo(n,e.mode,r)).ref=fa(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=_o(n,e.mode,r)).return=e,t):((t=o(t,n.children||[],r)).return=e,t)}function s(e,t,n,r,a){return null===t||10!==t.tag?((t=Co(n,e.mode,r,a)).return=e,t):((t=o(t,n,r)).return=e,t)}function f(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=To(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case lt:return(n=Eo(t,e.mode,n)).ref=fa(e,null,t),n.return=e,n;case ut:return(t=_o(t,e.mode,n)).return=e,t}if(sa(t)||gt(t))return(t=Co(t,e.mode,n,null)).return=e,t;pa(e,t)}return null}function d(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:l(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case lt:return n.key===o?n.type===ct?s(e,t,n.props.children,r,o):u(e,t,n,r):null;case ut:return n.key===o?c(e,t,n,r):null}if(sa(n)||gt(n))return null!==o?null:s(e,t,n,r,null);pa(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return l(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case lt:return e=e.get(null===r.key?n:r.key)||null,r.type===ct?s(t,e,r.props.children,o,r.key):u(t,e,r,o);case ut:return c(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(sa(r)||gt(r))return s(t,e=e.get(n)||null,r,o,null);pa(t,r)}return null}function m(o,i,l,u){for(var c=null,s=null,p=i,m=i=0,v=null;null!==p&&m<l.length;m++){p.index>m?(v=p,p=null):v=p.sibling;var y=d(o,p,l[m],u);if(null===y){null===p&&(p=v);break}e&&p&&null===y.alternate&&t(o,p),i=a(y,i,m),null===s?c=y:s.sibling=y,s=y,p=v}if(m===l.length)return n(o,p),c;if(null===p){for(;m<l.length;m++)(p=f(o,l[m],u))&&(i=a(p,i,m),null===s?c=p:s.sibling=p,s=p);return c}for(p=r(o,p);m<l.length;m++)(v=h(p,o,m,l[m],u))&&(e&&null!==v.alternate&&p.delete(null===v.key?m:v.key),i=a(v,i,m),null===s?c=v:s.sibling=v,s=v);return e&&p.forEach(function(e){return t(o,e)}),c}function v(o,i,l,u){var c=gt(l);"function"!=typeof c&&p("150"),null==(l=c.call(l))&&p("151");for(var s=c=null,m=i,v=i=0,y=null,g=l.next();null!==m&&!g.done;v++,g=l.next()){m.index>v?(y=m,m=null):y=m.sibling;var b=d(o,m,g.value,u);if(null===b){m||(m=y);break}e&&m&&null===b.alternate&&t(o,m),i=a(b,i,v),null===s?c=b:s.sibling=b,s=b,m=y}if(g.done)return n(o,m),c;if(null===m){for(;!g.done;v++,g=l.next())null!==(g=f(o,g.value,u))&&(i=a(g,i,v),null===s?c=g:s.sibling=g,s=g);return c}for(m=r(o,m);!g.done;v++,g=l.next())null!==(g=h(m,o,v,g.value,u))&&(e&&null!==g.alternate&&m.delete(null===g.key?v:g.key),i=a(g,i,v),null===s?c=g:s.sibling=g,s=g);return e&&m.forEach(function(e){return t(o,e)}),c}return function(e,r,a,l){var u="object"==typeof a&&null!==a&&a.type===ct&&null===a.key;u&&(a=a.props.children);var c="object"==typeof a&&null!==a;if(c)switch(a.$$typeof){case lt:e:{for(c=a.key,u=r;null!==u;){if(u.key===c){if(10===u.tag?a.type===ct:u.type===a.type){n(e,u.sibling),(r=o(u,a.type===ct?a.props.children:a.props,l)).ref=fa(e,u,a),r.return=e,e=r;break e}n(e,u);break}t(e,u),u=u.sibling}a.type===ct?((r=Co(a.props.children,e.mode,l,a.key)).return=e,e=r):((l=Eo(a,e.mode,l)).ref=fa(e,r,a),l.return=e,e=l)}return i(e);case ut:e:{for(u=a.key;null!==r;){if(r.key===u){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),(r=o(r,a.children||[],l)).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=_o(a,e.mode,l)).return=e,e=r}return i(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,a,l)).return=e,e=r):(n(e,r),(r=To(a,e.mode,l)).return=e,e=r),i(e);if(sa(a))return m(e,r,a,l);if(gt(a))return v(e,r,a,l);if(c&&pa(e,a),void 0===a&&!u)switch(e.tag){case 2:case 1:p("152",(l=e.type).displayName||l.name||"Component")}return n(e,r)}}var ha=da(!0),ma=da(!1),va=null,ya=null,ga=!1;function ba(e,t){var n=new xo(5,null,null,0);n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function wa(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function xa(e){if(ga){var t=ya;if(t){var n=t;if(!wa(e,t)){if(!(t=to(n))||!wa(e,t))return e.effectTag|=2,ga=!1,void(va=e);ba(va,n)}va=e,ya=no(t)}else e.effectTag|=2,ga=!1,va=e}}function ka(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag;)e=e.return;va=e}function Ea(e){if(e!==va)return!1;if(!ga)return ka(e),ga=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Xr(t,e.memoizedProps))for(t=ya;t;)ba(e,t),t=to(t);return ka(e),ya=va?to(e.stateNode):null,!0}function Ca(){ya=va=null,ga=!1}function Ta(e,t,n){_a(e,t,n,t.expirationTime)}function _a(e,t,n,r){t.child=null===e?ma(t,null,n,r):ha(t,e.child,n,r)}function Sa(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Pa(e,t,n,r,o){Sa(e,t);var a=0!=(64&t.effectTag);if(!n&&!a)return r&&wo(t,!1),Na(e,t);n=t.stateNode,at.current=t;var i=a?null:n.render();return t.effectTag|=1,a&&(_a(e,t,null,o),t.child=null),_a(e,t,i,o),t.memoizedState=n.state,t.memoizedProps=n.props,r&&wo(t,!0),t.child}function Oa(e){var t=e.stateNode;t.pendingContext?yo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&yo(0,t.context,!1),na(e,t.containerInfo)}function Ra(e,t,n,r){var o=e.child;for(null!==o&&(o.return=e);null!==o;){switch(o.tag){case 12:var a=0|o.stateNode;if(o.type===t&&0!=(a&n)){for(a=o;null!==a;){var i=a.alternate;if(0===a.expirationTime||a.expirationTime>r)a.expirationTime=r,null!==i&&(0===i.expirationTime||i.expirationTime>r)&&(i.expirationTime=r);else{if(null===i||!(0===i.expirationTime||i.expirationTime>r))break;i.expirationTime=r}a=a.return}a=null}else a=o.child;break;case 13:a=o.type===e.type?null:o.child;break;default:a=o.child}if(null!==a)a.return=o;else for(a=o;null!==a;){if(a===e){a=null;break}if(null!==(o=a.sibling)){o.return=a.return,a=o;break}a=a.return}o=a}}function Na(e,t){if(null!==e&&t.child!==e.child&&p("153"),null!==t.child){var n=ko(e=t.child,e.pendingProps,e.expirationTime);for(t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=ko(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function ja(e,t,n){if(0===t.expirationTime||t.expirationTime>n){switch(t.tag){case 3:Oa(t);break;case 2:bo(t);break;case 4:na(t,t.stateNode.containerInfo);break;case 13:Qo(t)}return null}switch(t.tag){case 0:null!==e&&p("155");var r=t.type,o=t.pendingProps,a=fo(t);return r=r(o,a=po(t,a)),t.effectTag|=1,"object"==typeof r&&null!==r&&"function"==typeof r.render&&void 0===r.$$typeof?(a=t.type,t.tag=2,t.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,"function"==typeof(a=a.getDerivedStateFromProps)&&aa(t,a,o),o=bo(t),r.updater=ia,t.stateNode=r,r._reactInternalFiber=t,ca(t,n),e=Pa(e,t,!0,o,n)):(t.tag=1,Ta(e,t,r),t.memoizedProps=o,e=t.child),e;case 1:return o=t.type,n=t.pendingProps,co.current||t.memoizedProps!==n?(o=o(n,r=po(t,r=fo(t))),t.effectTag|=1,Ta(e,t,o),t.memoizedProps=n,e=t.child):e=Na(e,t),e;case 2:if(o=bo(t),null===e)if(null===t.stateNode){var i=t.pendingProps,l=t.type;r=fo(t);var u=2===t.tag&&null!=t.type.contextTypes;i=new l(i,a=u?po(t,r):f),t.memoizedState=null!==i.state&&void 0!==i.state?i.state:null,i.updater=ia,t.stateNode=i,i._reactInternalFiber=t,u&&((u=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,u.__reactInternalMemoizedMaskedChildContext=a),ca(t,n),r=!0}else{l=t.type,r=t.stateNode,u=t.memoizedProps,a=t.pendingProps,r.props=u;var c=r.context;i=po(t,i=fo(t));var s=l.getDerivedStateFromProps;(l="function"==typeof s||"function"==typeof r.getSnapshotBeforeUpdate)||"function"!=typeof r.UNSAFE_componentWillReceiveProps&&"function"!=typeof r.componentWillReceiveProps||(u!==a||c!==i)&&ua(t,r,a,i),Ao=!1;var d=t.memoizedState;c=r.state=d;var h=t.updateQueue;null!==h&&(Wo(t,h,a,r,n),c=t.memoizedState),u!==a||d!==c||co.current||Ao?("function"==typeof s&&(aa(t,s,a),c=t.memoizedState),(u=Ao||la(t,u,a,d,c,i))?(l||"function"!=typeof r.UNSAFE_componentWillMount&&"function"!=typeof r.componentWillMount||("function"==typeof r.componentWillMount&&r.componentWillMount(),"function"==typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount()),"function"==typeof r.componentDidMount&&(t.effectTag|=4)):("function"==typeof r.componentDidMount&&(t.effectTag|=4),t.memoizedProps=a,t.memoizedState=c),r.props=a,r.state=c,r.context=i,r=u):("function"==typeof r.componentDidMount&&(t.effectTag|=4),r=!1)}else l=t.type,r=t.stateNode,a=t.memoizedProps,u=t.pendingProps,r.props=a,c=r.context,i=po(t,i=fo(t)),(l="function"==typeof(s=l.getDerivedStateFromProps)||"function"==typeof r.getSnapshotBeforeUpdate)||"function"!=typeof r.UNSAFE_componentWillReceiveProps&&"function"!=typeof r.componentWillReceiveProps||(a!==u||c!==i)&&ua(t,r,u,i),Ao=!1,c=t.memoizedState,d=r.state=c,null!==(h=t.updateQueue)&&(Wo(t,h,u,r,n),d=t.memoizedState),a!==u||c!==d||co.current||Ao?("function"==typeof s&&(aa(t,s,u),d=t.memoizedState),(s=Ao||la(t,a,u,c,d,i))?(l||"function"!=typeof r.UNSAFE_componentWillUpdate&&"function"!=typeof r.componentWillUpdate||("function"==typeof r.componentWillUpdate&&r.componentWillUpdate(u,d,i),"function"==typeof r.UNSAFE_componentWillUpdate&&r.UNSAFE_componentWillUpdate(u,d,i)),"function"==typeof r.componentDidUpdate&&(t.effectTag|=4),"function"==typeof r.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof r.componentDidUpdate||a===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),"function"!=typeof r.getSnapshotBeforeUpdate||a===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=256),t.memoizedProps=u,t.memoizedState=d),r.props=u,r.state=d,r.context=i,r=s):("function"!=typeof r.componentDidUpdate||a===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),"function"!=typeof r.getSnapshotBeforeUpdate||a===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=256),r=!1);return Pa(e,t,r,o,n);case 3:return Oa(t),null!==(o=t.updateQueue)?(r=null!==(r=t.memoizedState)?r.element:null,Wo(t,o,t.pendingProps,null,n),(o=t.memoizedState.element)===r?(Ca(),e=Na(e,t)):(r=t.stateNode,(r=(null===e||null===e.child)&&r.hydrate)&&(ya=no(t.stateNode.containerInfo),va=t,r=ga=!0),r?(t.effectTag|=2,t.child=ma(t,null,o,n)):(Ca(),Ta(e,t,o)),e=t.child)):(Ca(),e=Na(e,t)),e;case 5:return ta(ea.current),(o=ta(Jo.current))!==(r=Pr(o,t.type))&&(lo(Zo,t),lo(Jo,r)),null===e&&xa(t),o=t.type,u=t.memoizedProps,r=t.pendingProps,a=null!==e?e.memoizedProps:null,co.current||u!==r||((u=1&t.mode&&!!r.hidden)&&(t.expirationTime=1073741823),u&&1073741823===n)?(u=r.children,Xr(o,r)?u=null:a&&Xr(o,a)&&(t.effectTag|=16),Sa(e,t),1073741823!==n&&1&t.mode&&r.hidden?(t.expirationTime=1073741823,t.memoizedProps=r,e=null):(Ta(e,t,u),t.memoizedProps=r,e=t.child)):e=Na(e,t),e;case 6:return null===e&&xa(t),t.memoizedProps=t.pendingProps,null;case 16:return null;case 4:return na(t,t.stateNode.containerInfo),o=t.pendingProps,co.current||t.memoizedProps!==o?(null===e?t.child=ha(t,null,o,n):Ta(e,t,o),t.memoizedProps=o,e=t.child):e=Na(e,t),e;case 14:return o=t.type.render,n=t.pendingProps,r=t.ref,co.current||t.memoizedProps!==n||r!==(null!==e?e.ref:null)?(Ta(e,t,o=o(n,r)),t.memoizedProps=n,e=t.child):e=Na(e,t),e;case 10:return n=t.pendingProps,co.current||t.memoizedProps!==n?(Ta(e,t,n),t.memoizedProps=n,e=t.child):e=Na(e,t),e;case 11:return n=t.pendingProps.children,co.current||null!==n&&t.memoizedProps!==n?(Ta(e,t,n),t.memoizedProps=n,e=t.child):e=Na(e,t),e;case 15:return n=t.pendingProps,t.memoizedProps===n?e=Na(e,t):(Ta(e,t,n.children),t.memoizedProps=n,e=t.child),e;case 13:return function(e,t,n){var r=t.type._context,o=t.pendingProps,a=t.memoizedProps,i=!0;if(co.current)i=!1;else if(a===o)return t.stateNode=0,Qo(t),Na(e,t);var l=o.value;if(t.memoizedProps=o,null===a)l=1073741823;else if(a.value===o.value){if(a.children===o.children&&i)return t.stateNode=0,Qo(t),Na(e,t);l=0}else{var u=a.value;if(u===l&&(0!==u||1/u==1/l)||u!=u&&l!=l){if(a.children===o.children&&i)return t.stateNode=0,Qo(t),Na(e,t);l=0}else if(l="function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,l):1073741823,0==(l|=0)){if(a.children===o.children&&i)return t.stateNode=0,Qo(t),Na(e,t)}else Ra(t,r,l,n)}return t.stateNode=l,Qo(t),Ta(e,t,o.children),t.child}(e,t,n);case 12:e:if(r=t.type,a=t.pendingProps,u=t.memoizedProps,o=r._currentValue,i=r._changedBits,co.current||0!==i||u!==a){if(t.memoizedProps=a,void 0!==(l=a.unstable_observedBits)&&null!==l||(l=1073741823),t.stateNode=l,0!=(i&l))Ra(t,r,i,n);else if(u===a){e=Na(e,t);break e}n=(n=a.children)(o),t.effectTag|=1,Ta(e,t,n),e=t.child}else e=Na(e,t);return e;default:p("156")}}function Aa(e){e.effectTag|=4}var Ua=void 0,Ma=void 0,Ia=void 0;function Fa(e,t){var n=t.pendingProps;switch(t.tag){case 1:return null;case 2:return mo(t),null;case 3:ra(),vo();var r=t.stateNode;return r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Ea(t),t.effectTag&=-3),Ua(t),null;case 5:oa(t),r=ta(ea.current);var o=t.type;if(null!==e&&null!=t.stateNode){var a=e.memoizedProps,i=t.stateNode,l=ta(Jo.current);i=Vr(i,o,a,n,r),Ma(e,t,i,o,a,n,r,l),e.ref!==t.ref&&(t.effectTag|=128)}else{if(!n)return null===t.stateNode&&p("166"),null;if(e=ta(Jo.current),Ea(t))n=t.stateNode,o=t.type,a=t.memoizedProps,n[B]=t,n[W]=a,r=$r(n,o,a,e,r),t.updateQueue=r,null!==r&&Aa(t);else{(e=zr(o,n,r,e))[B]=t,e[W]=n;e:for(a=t.child;null!==a;){if(5===a.tag||6===a.tag)e.appendChild(a.stateNode);else if(4!==a.tag&&null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)break e;a=a.return}a.sibling.return=a.return,a=a.sibling}Wr(e,o,n,r),Gr(o,n)&&Aa(t),t.stateNode=e}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Ia(e,t,e.memoizedProps,n);else{if("string"!=typeof n)return null===t.stateNode&&p("166"),null;r=ta(ea.current),ta(Jo.current),Ea(t)?(r=t.stateNode,n=t.memoizedProps,r[B]=t,qr(r,n)&&Aa(t)):((r=Br(n,r))[B]=t,t.stateNode=r)}return null;case 14:case 16:case 10:case 11:case 15:return null;case 4:return ra(),Ua(t),null;case 13:return Go(t),null;case 12:return null;case 0:p("167");default:p("156")}}function La(e,t){var n=t.source;null===t.stack&&null!==n&&wt(n),null!==n&&bt(n),t=t.value,null!==e&&2===e.tag&&bt(e);try{t&&t.suppressReactErrorLogging||console.error(t)}catch(e){e&&e.suppressReactErrorLogging||console.error(e)}}function Da(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){hi(e,t)}else t.current=null}function za(e){switch(jo(e),e.tag){case 2:Da(e);var t=e.stateNode;if("function"==typeof t.componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){hi(e,t)}break;case 5:Da(e);break;case 4:Va(e)}}function Ba(e){return 5===e.tag||3===e.tag||4===e.tag}function Wa(e){e:{for(var t=e.return;null!==t;){if(Ba(t)){var n=t;break e}t=t.return}p("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:p("161")}16&n.effectTag&&(Nr(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||Ba(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var a=t,i=o.stateNode,l=n;8===a.nodeType?a.parentNode.insertBefore(i,l):a.insertBefore(i,l)}else t.insertBefore(o.stateNode,n);else r?(a=t,i=o.stateNode,8===a.nodeType?a.parentNode.insertBefore(i,a):a.appendChild(i)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function Va(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&p("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var a=t,i=a;;)if(za(i),null!==i.child&&4!==i.tag)i.child.return=i,i=i.child;else{if(i===a)break;for(;null===i.sibling;){if(null===i.return||i.return===a)break e;i=i.return}i.sibling.return=i.return,i=i.sibling}o?(a=r,i=t.stateNode,8===a.nodeType?a.parentNode.removeChild(i):a.removeChild(i)):r.removeChild(t.stateNode)}else if(4===t.tag?r=t.stateNode.containerInfo:za(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function Ha(e,t){switch(t.tag){case 2:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,a=t.updateQueue;t.updateQueue=null,null!==a&&(n[W]=r,Hr(n,a,o,e,r))}break;case 6:null===t.stateNode&&p("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 15:case 16:break;default:p("163")}}function $a(e,t,n){(n=Io(n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Xi(r),La(e,t)},n}function qa(e,t,n){(n=Io(n)).tag=3;var r=e.stateNode;return null!==r&&"function"==typeof r.componentDidCatch&&(n.callback=function(){null===ci?ci=new Set([this]):ci.add(this);var n=t.value,r=t.stack;La(e,t),this.componentDidCatch(n,{componentStack:null!==r?r:""})}),n}function Ka(e,t,n,r,o,a){n.effectTag|=512,n.firstEffect=n.lastEffect=null,r=$o(r,n),e=t;do{switch(e.tag){case 3:return e.effectTag|=1024,void Do(e,r=$a(e,r,a),a);case 2:if(t=r,n=e.stateNode,0==(64&e.effectTag)&&null!==n&&"function"==typeof n.componentDidCatch&&(null===ci||!ci.has(n)))return e.effectTag|=1024,void Do(e,r=qa(e,t,a),a)}e=e.return}while(null!==e)}function Ya(e){switch(e.tag){case 2:mo(e);var t=e.effectTag;return 1024&t?(e.effectTag=-1025&t|64,e):null;case 3:return ra(),vo(),1024&(t=e.effectTag)?(e.effectTag=-1025&t|64,e):null;case 5:return oa(e),null;case 16:return 1024&(t=e.effectTag)?(e.effectTag=-1025&t|64,e):null;case 4:return ra(),null;case 13:return Go(e),null;default:return null}}Ua=function(){},Ma=function(e,t,n){(t.updateQueue=n)&&Aa(t)},Ia=function(e,t,n,r){n!==r&&Aa(t)};var Qa=Jr(),Ga=2,Xa=Qa,Ja=0,Za=0,ei=!1,ti=null,ni=null,ri=0,oi=-1,ai=!1,ii=null,li=!1,ui=!1,ci=null;function si(){if(null!==ti)for(var e=ti.return;null!==e;){var t=e;switch(t.tag){case 2:mo(t);break;case 3:ra(),vo();break;case 5:oa(t);break;case 4:ra();break;case 13:Go(t)}e=e.return}ni=null,ri=0,oi=-1,ai=!1,ti=null,ui=!1}function fi(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(512&e.effectTag)){t=Fa(t,e);var o=e;if(1073741823===ri||1073741823!==o.expirationTime){var a=0;switch(o.tag){case 3:case 2:var i=o.updateQueue;null!==i&&(a=i.expirationTime)}for(i=o.child;null!==i;)0!==i.expirationTime&&(0===a||a>i.expirationTime)&&(a=i.expirationTime),i=i.sibling;o.expirationTime=a}if(null!==t)return t;if(null!==n&&0==(512&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e)),null!==r)return r;if(null===n){ui=!0;break}e=n}else{if(null!==(e=Ya(e)))return e.effectTag&=511,e;if(null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=512),null!==r)return r;if(null===n)break;e=n}}return null}function pi(e){var t=ja(e.alternate,e,ri);return null===t&&(t=fi(e)),at.current=null,t}function di(e,t,n){ei&&p("243"),ei=!0,t===ri&&e===ni&&null!==ti||(si(),ri=t,oi=-1,ti=ko((ni=e).current,null,ri),e.pendingCommitExpirationTime=0);var r=!1;for(ai=!n||ri<=Ga;;){try{if(n)for(;null!==ti&&!Gi();)ti=pi(ti);else for(;null!==ti;)ti=pi(ti)}catch(t){if(null===ti)r=!0,Xi(t);else{null===ti&&p("271");var o=(n=ti).return;if(null===o){r=!0,Xi(t);break}Ka(e,o,n,t,0,ri),ti=fi(n)}}break}if(ei=!1,r)return null;if(null===ti){if(ui)return e.pendingCommitExpirationTime=t,e.current.alternate;ai&&p("262"),0<=oi&&setTimeout(function(){var t=e.current.expirationTime;0!==t&&(0===e.remainingExpirationTime||e.remainingExpirationTime<t)&&Bi(e,t)},oi),function(e){null===_i&&p("246"),_i.remainingExpirationTime=e}(e.current.expirationTime)}return null}function hi(e,t){var n;e:{for(ei&&!li&&p("263"),n=e.return;null!==n;){switch(n.tag){case 2:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromCatch||"function"==typeof r.componentDidCatch&&(null===ci||!ci.has(r))){Lo(n,e=qa(n,e=$o(t,e),1),1),yi(n,1),n=void 0;break e}break;case 3:Lo(n,e=$a(n,e=$o(t,e),1),1),yi(n,1),n=void 0;break e}n=n.return}3===e.tag&&(Lo(e,n=$a(e,n=$o(t,e),1),1),yi(e,1)),n=void 0}return n}function mi(){var e=2+25*(1+((gi()-2+500)/25|0));return e<=Ja&&(e=Ja+1),Ja=e}function vi(e,t){return e=0!==Za?Za:ei?li?1:ri:1&t.mode?Mi?2+10*(1+((e-2+15)/10|0)):2+25*(1+((e-2+500)/25|0)):1,Mi&&(0===Pi||e>Pi)&&(Pi=e),e}function yi(e,t){for(;null!==e;){if((0===e.expirationTime||e.expirationTime>t)&&(e.expirationTime=t),null!==e.alternate&&(0===e.alternate.expirationTime||e.alternate.expirationTime>t)&&(e.alternate.expirationTime=t),null===e.return){if(3!==e.tag)break;var n=e.stateNode;!ei&&0!==ri&&t<ri&&si();var r=n.current.expirationTime;ei&&!li&&ni===n||Bi(n,r),Li>Fi&&p("185")}e=e.return}}function gi(){return Xa=Jr()-Qa,Ga=2+(Xa/10|0)}function bi(e){var t=Za;Za=2+25*(1+((gi()-2+500)/25|0));try{return e()}finally{Za=t}}function wi(e,t,n,r,o){var a=Za;Za=1;try{return e(t,n,r,o)}finally{Za=a}}var xi=null,ki=null,Ei=0,Ci=void 0,Ti=!1,_i=null,Si=0,Pi=0,Oi=!1,Ri=!1,Ni=null,ji=null,Ai=!1,Ui=!1,Mi=!1,Ii=null,Fi=1e3,Li=0,Di=1;function zi(e){if(0!==Ei){if(e>Ei)return;null!==Ci&&eo(Ci)}var t=Jr()-Qa;Ei=e,Ci=Zr(Vi,{timeout:10*(e-2)-t})}function Bi(e,t){if(null===e.nextScheduledRoot)e.remainingExpirationTime=t,null===ki?(xi=ki=e,e.nextScheduledRoot=e):(ki=ki.nextScheduledRoot=e).nextScheduledRoot=xi;else{var n=e.remainingExpirationTime;(0===n||t<n)&&(e.remainingExpirationTime=t)}Ti||(Ai?Ui&&(_i=e,Si=1,Yi(e,1,!1)):1===t?Hi():zi(t))}function Wi(){var e=0,t=null;if(null!==ki)for(var n=ki,r=xi;null!==r;){var o=r.remainingExpirationTime;if(0===o){if((null===n||null===ki)&&p("244"),r===r.nextScheduledRoot){xi=ki=r.nextScheduledRoot=null;break}if(r===xi)xi=o=r.nextScheduledRoot,ki.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===ki){(ki=n).nextScheduledRoot=xi,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if((0===e||o<e)&&(e=o,t=r),r===ki)break;n=r,r=r.nextScheduledRoot}}null!==(n=_i)&&n===t&&1===e?Li++:Li=0,_i=t,Si=e}function Vi(e){$i(0,!0,e)}function Hi(){$i(1,!1,null)}function $i(e,t,n){if(ji=n,Wi(),t)for(;null!==_i&&0!==Si&&(0===e||e>=Si)&&(!Oi||gi()>=Si);)gi(),Yi(_i,Si,!Oi),Wi();else for(;null!==_i&&0!==Si&&(0===e||e>=Si);)Yi(_i,Si,!1),Wi();null!==ji&&(Ei=0,Ci=null),0!==Si&&zi(Si),ji=null,Oi=!1,Ki()}function qi(e,t){Ti&&p("253"),_i=e,Si=t,Yi(e,t,!1),Hi(),Ki()}function Ki(){if(Li=0,null!==Ii){var e=Ii;Ii=null;for(var t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){Ri||(Ri=!0,Ni=e)}}}if(Ri)throw e=Ni,Ni=null,Ri=!1,e}function Yi(e,t,n){Ti&&p("245"),Ti=!0,n?null!==(n=e.finishedWork)?Qi(e,n,t):null!==(n=di(e,t,!0))&&(Gi()?e.finishedWork=n:Qi(e,n,t)):null!==(n=e.finishedWork)?Qi(e,n,t):null!==(n=di(e,t,!1))&&Qi(e,n,t),Ti=!1}function Qi(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime<=n&&(null===Ii?Ii=[r]:Ii.push(r),r._defer))return e.finishedWork=t,void(e.remainingExpirationTime=0);if(e.finishedWork=null,li=ei=!0,(n=t.stateNode).current===t&&p("177"),0===(r=n.pendingCommitExpirationTime)&&p("261"),n.pendingCommitExpirationTime=0,gi(),at.current=null,1<t.effectTag)if(null!==t.lastEffect){t.lastEffect.nextEffect=t;var o=t.firstEffect}else o=t;else o=t.firstEffect;Yr=On;var a=u();if(Wn(a)){if("selectionStart"in a)var i={start:a.selectionStart,end:a.selectionEnd};else e:{var l=window.getSelection&&window.getSelection();if(l&&0!==l.rangeCount){i=l.anchorNode;var c=l.anchorOffset,f=l.focusNode;l=l.focusOffset;try{i.nodeType,f.nodeType}catch(e){i=null;break e}var d=0,h=-1,m=-1,v=0,y=0,g=a,b=null;t:for(;;){for(var w;g!==i||0!==c&&3!==g.nodeType||(h=d+c),g!==f||0!==l&&3!==g.nodeType||(m=d+l),3===g.nodeType&&(d+=g.nodeValue.length),null!==(w=g.firstChild);)b=g,g=w;for(;;){if(g===a)break t;if(b===i&&++v===c&&(h=d),b===f&&++y===l&&(m=d),null!==(w=g.nextSibling))break;b=(g=b).parentNode}g=w}i=-1===h||-1===m?null:{start:h,end:m}}else i=null}i=i||{start:0,end:0}}else i=null;for(Qr={focusedElem:a,selectionRange:i},Rn(!1),ii=o;null!==ii;){a=!1,i=void 0;try{for(;null!==ii;){if(256&ii.effectTag){var x=ii.alternate;switch((c=ii).tag){case 2:if(256&c.effectTag&&null!==x){var k=x.memoizedProps,E=x.memoizedState,C=c.stateNode;C.props=c.memoizedProps,C.state=c.memoizedState;var T=C.getSnapshotBeforeUpdate(k,E);C.__reactInternalSnapshotBeforeUpdate=T}break;case 3:case 5:case 6:case 4:break;default:p("163")}}ii=ii.nextEffect}}catch(e){a=!0,i=e}a&&(null===ii&&p("178"),hi(ii,i),null!==ii&&(ii=ii.nextEffect))}for(ii=o;null!==ii;){x=!1,k=void 0;try{for(;null!==ii;){var _=ii.effectTag;if(16&_&&Nr(ii.stateNode,""),128&_){var S=ii.alternate;if(null!==S){var P=S.ref;null!==P&&("function"==typeof P?P(null):P.current=null)}}switch(14&_){case 2:Wa(ii),ii.effectTag&=-3;break;case 6:Wa(ii),ii.effectTag&=-3,Ha(ii.alternate,ii);break;case 4:Ha(ii.alternate,ii);break;case 8:Va(E=ii),E.return=null,E.child=null,E.alternate&&(E.alternate.child=null,E.alternate.return=null)}ii=ii.nextEffect}}catch(e){x=!0,k=e}x&&(null===ii&&p("178"),hi(ii,k),null!==ii&&(ii=ii.nextEffect))}if(P=Qr,S=u(),_=P.focusedElem,x=P.selectionRange,S!==_&&s(document.documentElement,_)){null!==x&&Wn(_)&&(S=x.start,void 0===(P=x.end)&&(P=S),"selectionStart"in _?(_.selectionStart=S,_.selectionEnd=Math.min(P,_.value.length)):window.getSelection&&(S=window.getSelection(),k=_[he()].length,P=Math.min(x.start,k),x=void 0===x.end?P:Math.min(x.end,k),!S.extend&&P>x&&(k=x,x=P,P=k),k=Bn(_,P),E=Bn(_,x),k&&E&&(1!==S.rangeCount||S.anchorNode!==k.node||S.anchorOffset!==k.offset||S.focusNode!==E.node||S.focusOffset!==E.offset)&&((C=document.createRange()).setStart(k.node,k.offset),S.removeAllRanges(),P>x?(S.addRange(C),S.extend(E.node,E.offset)):(C.setEnd(E.node,E.offset),S.addRange(C))))),S=[];for(P=_;P=P.parentNode;)1===P.nodeType&&S.push({element:P,left:P.scrollLeft,top:P.scrollTop});for("function"==typeof _.focus&&_.focus(),_=0;_<S.length;_++)(P=S[_]).element.scrollLeft=P.left,P.element.scrollTop=P.top}for(Qr=null,Rn(Yr),Yr=null,n.current=t,ii=o;null!==ii;){o=!1,_=void 0;try{for(S=r;null!==ii;){var O=ii.effectTag;if(36&O){var R=ii.alternate;switch(x=S,(P=ii).tag){case 2:var N=P.stateNode;if(4&P.effectTag)if(null===R)N.props=P.memoizedProps,N.state=P.memoizedState,N.componentDidMount();else{var j=R.memoizedProps,A=R.memoizedState;N.props=P.memoizedProps,N.state=P.memoizedState,N.componentDidUpdate(j,A,N.__reactInternalSnapshotBeforeUpdate)}var U=P.updateQueue;null!==U&&(N.props=P.memoizedProps,N.state=P.memoizedState,Ho(P,U,N));break;case 3:var M=P.updateQueue;if(null!==M){if(k=null,null!==P.child)switch(P.child.tag){case 5:k=P.child.stateNode;break;case 2:k=P.child.stateNode}Ho(P,M,k)}break;case 5:var I=P.stateNode;null===R&&4&P.effectTag&&Gr(P.type,P.memoizedProps)&&I.focus();break;case 6:case 4:case 15:case 16:break;default:p("163")}}if(128&O){P=void 0;var F=ii.ref;if(null!==F){var L=ii.stateNode;switch(ii.tag){case 5:P=L;break;default:P=L}"function"==typeof F?F(P):F.current=P}}var D=ii.nextEffect;ii.nextEffect=null,ii=D}}catch(e){o=!0,_=e}o&&(null===ii&&p("178"),hi(ii,_),null!==ii&&(ii=ii.nextEffect))}ei=li=!1,No(t.stateNode),0===(t=n.current.expirationTime)&&(ci=null),e.remainingExpirationTime=t}function Gi(){return!(null===ji||ji.timeRemaining()>Di)&&(Oi=!0)}function Xi(e){null===_i&&p("246"),_i.remainingExpirationTime=0,Ri||(Ri=!0,Ni=e)}function Ji(e,t){var n=Ai;Ai=!0;try{return e(t)}finally{(Ai=n)||Ti||Hi()}}function Zi(e,t){if(Ai&&!Ui){Ui=!0;try{return e(t)}finally{Ui=!1}}return e(t)}function el(e,t){Ti&&p("187");var n=Ai;Ai=!0;try{return wi(e,t)}finally{Ai=n,Hi()}}function tl(e,t,n){if(Mi)return e(t,n);Ai||Ti||0===Pi||($i(Pi,!1,null),Pi=0);var r=Mi,o=Ai;Ai=Mi=!0;try{return e(t,n)}finally{Mi=r,(Ai=o)||Ti||Hi()}}function nl(e){var t=Ai;Ai=!0;try{wi(e)}finally{(Ai=t)||Ti||$i(1,!1,null)}}function rl(e,t,n,r,o){var a=t.current;if(n){var i;n=n._reactInternalFiber;e:{for(2===an(n)&&2===n.tag||p("170"),i=n;3!==i.tag;){if(ho(i)){i=i.stateNode.__reactInternalMemoizedMergedChildContext;break e}(i=i.return)||p("171")}i=i.stateNode.context}n=ho(n)?go(n,i):i}else n=f;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=Io(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),Lo(a,o,r),yi(a,r),r}function ol(e){var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?p("188"):p("268",Object.keys(e))),null===(e=cn(t))?null:e.stateNode}function al(e,t,n,r){var o=t.current;return rl(e,t,n,o=vi(gi(),o),r)}function il(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function ll(e){var t=e.findFiberByHostInstance;return function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Po=Ro(function(e){return t.onCommitFiberRoot(n,e)}),Oo=Ro(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}return!0}(i({},e,{findHostInstanceByFiber:function(e){return null===(e=cn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}var ul=Ji,cl=tl,sl=function(){Ti||0===Pi||($i(Pi,!1,null),Pi=0)};function fl(e){this._expirationTime=mi(),this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function pl(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function dl(e,t,n){this._internalRoot=So(e,t,n)}function hl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function ml(e,t,n,r,o){hl(n)||p("200");var a=n._reactRootContainer;if(a){if("function"==typeof o){var i=o;o=function(){var e=il(a._internalRoot);i.call(e)}}null!=e?a.legacy_renderSubtreeIntoContainer(e,t,o):a.render(t,o)}else{if(a=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new dl(e,!1,t)}(n,r),"function"==typeof o){var l=o;o=function(){var e=il(a._internalRoot);l.call(e)}}Zi(function(){null!=e?a.legacy_renderSubtreeIntoContainer(e,t,o):a.render(t,o)})}return il(a._internalRoot)}function vl(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return hl(t)||p("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ut,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}De.injectFiberControlledHostComponent(Kr),fl.prototype.render=function(e){this._defer||p("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new pl;return rl(e,t,null,n,r._onCommit),r},fl.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},fl.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||p("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&p("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,qi(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},fl.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},pl.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},pl.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&p("191",n),n()}}},dl.prototype.render=function(e,t){var n=this._internalRoot,r=new pl;return null!==(t=void 0===t?null:t)&&r.then(t),al(e,n,null,r._onCommit),r},dl.prototype.unmount=function(e){var t=this._internalRoot,n=new pl;return null!==(e=void 0===e?null:e)&&n.then(e),al(null,t,null,n._onCommit),n},dl.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new pl;return null!==(n=void 0===n?null:n)&&o.then(n),al(t,r,e,o._onCommit),o},dl.prototype.createBatch=function(){var e=new fl(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime<=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Ke=ul,Ye=cl,Qe=sl;var yl={createPortal:vl,findDOMNode:function(e){return null==e?null:1===e.nodeType?e:ol(e)},hydrate:function(e,t,n){return ml(null,e,t,!0,n)},render:function(e,t,n){return ml(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return(null==e||void 0===e._reactInternalFiber)&&p("38"),ml(e,t,n,!1,r)},unmountComponentAtNode:function(e){return hl(e)||p("40"),!!e._reactRootContainer&&(Zi(function(){ml(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return vl.apply(void 0,arguments)},unstable_batchedUpdates:Ji,unstable_deferredUpdates:bi,unstable_interactiveUpdates:tl,flushSync:el,unstable_flushControlled:nl,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:D,EventPluginRegistry:C,EventPropagators:ne,ReactControlledComponent:qe,ReactDOMComponentTree:q,ReactDOMEventListener:Mn},unstable_createRoot:function(e,t){return new dl(e,!0,null!=t&&!0===t.hydrate)}};ll({findFiberByHostInstance:V,bundleType:0,version:"16.4.1",rendererPackageName:"react-dom"});var gl={default:yl},bl=gl&&yl||gl;e.exports=bl.default?bl.default:bl},function(e,t,n){"use strict";
/** @license React v16.4.1
 * react.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(11),o=n(10),a=n(9),i=n(8),l="function"==typeof Symbol&&Symbol.for,u=l?Symbol.for("react.element"):60103,c=l?Symbol.for("react.portal"):60106,s=l?Symbol.for("react.fragment"):60107,f=l?Symbol.for("react.strict_mode"):60108,p=l?Symbol.for("react.profiler"):60114,d=l?Symbol.for("react.provider"):60109,h=l?Symbol.for("react.context"):60110,m=l?Symbol.for("react.async_mode"):60111,v=l?Symbol.for("react.forward_ref"):60112;l&&Symbol.for("react.timeout");var y="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);o(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var b={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function w(e,t,n){this.props=e,this.context=t,this.refs=a,this.updater=n||b}function x(){}function k(e,t,n){this.props=e,this.context=t,this.refs=a,this.updater=n||b}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&g("85"),this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},x.prototype=w.prototype;var E=k.prototype=new x;E.constructor=k,r(E,w.prototype),E.isPureReactComponent=!0;var C={current:null},T=Object.prototype.hasOwnProperty,_={key:!0,ref:!0,__self:!0,__source:!0};function S(e,t,n){var r=void 0,o={},a=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(a=""+t.key),t)T.call(t,r)&&!_.hasOwnProperty(r)&&(o[r]=t[r]);var l=arguments.length-2;if(1===l)o.children=n;else if(1<l){for(var c=Array(l),s=0;s<l;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===o[r]&&(o[r]=l[r]);return{$$typeof:u,type:e,key:a,ref:i,props:o,_owner:C.current}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===u}var O=/\/+/g,R=[];function N(e,t,n,r){if(R.length){var o=R.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function j(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>R.length&&R.push(e)}function A(e,t,n,r){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var a=!1;if(null===e)a=!0;else switch(o){case"string":case"number":a=!0;break;case"object":switch(e.$$typeof){case u:case c:a=!0}}if(a)return n(r,e,""===t?"."+U(e,0):t),1;if(a=0,t=""===t?".":t+":",Array.isArray(e))for(var i=0;i<e.length;i++){var l=t+U(o=e[i],i);a+=A(o,l,n,r)}else if(null===e||void 0===e?l=null:l="function"==typeof(l=y&&e[y]||e["@@iterator"])?l:null,"function"==typeof l)for(e=l.call(e),i=0;!(o=e.next()).done;)a+=A(o=o.value,l=t+U(o,i++),n,r);else"object"===o&&g("31","[object Object]"===(n=""+e)?"object with keys {"+Object.keys(e).join(", ")+"}":n,"");return a}function U(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function M(e,t){e.func.call(e.context,t,e.count++)}function I(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?F(e,r,n,i.thatReturnsArgument):null!=e&&(P(e)&&(t=o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(O,"$&/")+"/")+n,e={$$typeof:u,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}),r.push(e))}function F(e,t,n,r,o){var a="";null!=n&&(a=(""+n).replace(O,"$&/")+"/"),t=N(t,a,r,o),null==e||A(e,"",I,t),j(t)}var L={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return F(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;t=N(null,null,t,n),null==e||A(e,"",M,t),j(t)},count:function(e){return null==e?0:A(e,"",i.thatReturnsNull,null)},toArray:function(e){var t=[];return F(e,t,null,i.thatReturnsArgument),t},only:function(e){return P(e)||g("143"),e}},createRef:function(){return{current:null}},Component:w,PureComponent:k,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:h,_calculateChangedBits:t,_defaultValue:e,_currentValue:e,_currentValue2:e,_changedBits:0,_changedBits2:0,Provider:null,Consumer:null}).Provider={$$typeof:d,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:v,render:e}},Fragment:s,StrictMode:f,unstable_AsyncMode:m,unstable_Profiler:p,createElement:S,cloneElement:function(e,t,n){(null===e||void 0===e)&&g("267",e);var o=void 0,a=r({},e.props),i=e.key,l=e.ref,c=e._owner;if(null!=t){void 0!==t.ref&&(l=t.ref,c=C.current),void 0!==t.key&&(i=""+t.key);var s=void 0;for(o in e.type&&e.type.defaultProps&&(s=e.type.defaultProps),t)T.call(t,o)&&!_.hasOwnProperty(o)&&(a[o]=void 0===t[o]&&void 0!==s?s[o]:t[o])}if(1===(o=arguments.length-2))a.children=n;else if(1<o){s=Array(o);for(var f=0;f<o;f++)s[f]=arguments[f+2];a.children=s}return{$$typeof:u,type:e.type,key:i,ref:l,props:a,_owner:c}},createFactory:function(e){var t=S.bind(null,e);return t.type=e,t},isValidElement:P,version:"16.4.1",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:C,assign:r}},D={default:L},z=D&&L||D;e.exports=z.default?z.default:z}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L25vZGVfbW9kdWxlcy93YXJuaW5nL2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ludmFyaWFudC9icm93c2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy93YXJuaW5nL3dhcm5pbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9ub2RlX21vZHVsZXMvcGF0aC10by1yZWdleHAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvZW1wdHlGdW5jdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvZW1wdHlPYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2ludmFyaWFudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL2ljb24uaWNvIiwid2VicGFjazovLy8uL3NyYy9hc3NldHMvc21hbGwucG5nIiwid2VicGFjazovLy8uL3NyYy9hc3NldHMvc21hbGwuanBnIiwid2VicGFjazovLy8uL3NyYy9hc3NldHMvbGFyZ2UucG5nIiwid2VicGFjazovLy8uL3NyYy9hc3NldHMvbGFyZ2UuanBnIiwid2VicGFjazovLy8uL3NyYy9hc3NldHMvZ2lhbnQuc3ZnIiwid2VicGFjazovLy8uL3NyYy9hc3NldHMvZ2lhbnQucG5nIiwid2VicGFjazovLy8uL3NyYy9hc3NldHMvZ2lhbnQuanBnIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy9kaXN0L2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzLmNqcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZXNvbHZlLXBhdGhuYW1lL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy92YWx1ZS1lcXVhbC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9lcy9QYXRoVXRpbHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXMvTG9jYXRpb25VdGlscy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9lcy9jcmVhdGVUcmFuc2l0aW9uTWFuYWdlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9lcy9ET01VdGlscy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9lcy9jcmVhdGVIYXNoSGlzdG9yeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9lcy9jcmVhdGVCcm93c2VySGlzdG9yeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzL1JvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9lcy9jcmVhdGVNZW1vcnlIaXN0b3J5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL1JvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy9IYXNoUm91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvbWF0Y2hQYXRoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvU3dpdGNoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL1N3aXRjaC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzL1JvdXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL1JvdXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvZ2VuZXJhdGVQYXRoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvUmVkaXJlY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvUmVkaXJlY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lcy93aXRoUm91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL3dpdGhSb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0dhbGxlcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvTGluay5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvRmVlZGJhY2suanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1JvdXRlcy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwLmpzIiwid2VicGFjazovLy8uL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwLmNzcz83MzNiIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9pc2FycmF5L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL3VybHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0dhbGxlcnkuY3NzIiwid2VicGFjazovLy8uL3NyYy9HYWxsZXJ5LmNzcz85MTNlIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2lzTm9kZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvaXNUZXh0Tm9kZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvY29udGFpbnNOb2RlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9zaGFsbG93RXF1YWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2dldEFjdGl2ZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL0V4ZWN1dGlvbkVudmlyb25tZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwiY29uZGl0aW9uIiwiZm9ybWF0IiwiYSIsImIiLCJlIiwiZiIsImVycm9yIiwidW5kZWZpbmVkIiwiRXJyb3IiLCJhcmdzIiwiYXJnSW5kZXgiLCJyZXBsYWNlIiwiZnJhbWVzVG9Qb3AiLCJ3YXJuaW5nIiwiaXNhcnJheSIsInBhdGhUb1JlZ2V4cCIsInBhcnNlIiwiY29tcGlsZSIsInN0ciIsIm9wdGlvbnMiLCJ0b2tlbnNUb0Z1bmN0aW9uIiwidG9rZW5zVG9SZWdFeHAiLCJQQVRIX1JFR0VYUCIsIlJlZ0V4cCIsImpvaW4iLCJyZXMiLCJ0b2tlbnMiLCJpbmRleCIsInBhdGgiLCJkZWZhdWx0RGVsaW1pdGVyIiwiZGVsaW1pdGVyIiwiZXhlYyIsImVzY2FwZWQiLCJvZmZzZXQiLCJzbGljZSIsImxlbmd0aCIsIm5leHQiLCJwcmVmaXgiLCJjYXB0dXJlIiwiZ3JvdXAiLCJtb2RpZmllciIsImFzdGVyaXNrIiwicHVzaCIsInBhcnRpYWwiLCJyZXBlYXQiLCJvcHRpb25hbCIsInBhdHRlcm4iLCJlc2NhcGVHcm91cCIsImVzY2FwZVN0cmluZyIsInN1YnN0ciIsImVuY29kZVVSSUNvbXBvbmVudFByZXR0eSIsImVuY29kZVVSSSIsImNoYXJDb2RlQXQiLCJ0b1N0cmluZyIsInRvVXBwZXJDYXNlIiwiZW5jb2RlQXN0ZXJpc2siLCJtYXRjaGVzIiwiQXJyYXkiLCJvYmoiLCJvcHRzIiwiZGF0YSIsImVuY29kZSIsInByZXR0eSIsImVuY29kZVVSSUNvbXBvbmVudCIsInRva2VuIiwic2VnbWVudCIsIlR5cGVFcnJvciIsIkpTT04iLCJzdHJpbmdpZnkiLCJqIiwidGVzdCIsImF0dGFjaEtleXMiLCJyZSIsImtleXMiLCJmbGFncyIsInNlbnNpdGl2ZSIsInN0cmljdCIsImVuZCIsInJvdXRlIiwiZW5kc1dpdGhEZWxpbWl0ZXIiLCJncm91cHMiLCJzb3VyY2UiLCJtYXRjaCIsInJlZ2V4cFRvUmVnZXhwIiwicGFydHMiLCJhcnJheVRvUmVnZXhwIiwic3RyaW5nVG9SZWdleHAiLCJzdHlsZXNJbkRvbSIsImlzT2xkSUUiLCJmbiIsIm1lbW8iLCJhcHBseSIsInRoaXMiLCJhcmd1bWVudHMiLCJtZW1vaXplIiwid2luZG93IiwiZG9jdW1lbnQiLCJhbGwiLCJhdG9iIiwiZ2V0RWxlbWVudCIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwicXVlcnlTZWxlY3RvciIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsInNpbmdsZXRvbiIsInNpbmdsZXRvbkNvdW50ZXIiLCJzdHlsZXNJbnNlcnRlZEF0VG9wIiwiZml4VXJscyIsImFkZFN0eWxlc1RvRG9tIiwic3R5bGVzIiwiaXRlbSIsImRvbVN0eWxlIiwiaWQiLCJyZWZzIiwiYWRkU3R5bGUiLCJsaXN0VG9TdHlsZXMiLCJsaXN0IiwibmV3U3R5bGVzIiwiYmFzZSIsInBhcnQiLCJjc3MiLCJtZWRpYSIsInNvdXJjZU1hcCIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlIiwiaW5zZXJ0SW50byIsImxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wIiwiaW5zZXJ0QXQiLCJuZXh0U2libGluZyIsImluc2VydEJlZm9yZSIsImFwcGVuZENoaWxkIiwiZmlyc3RDaGlsZCIsImJlZm9yZSIsInJlbW92ZVN0eWxlRWxlbWVudCIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsImlkeCIsImluZGV4T2YiLCJzcGxpY2UiLCJjcmVhdGVTdHlsZUVsZW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiYXR0cnMiLCJ0eXBlIiwiYWRkQXR0cnMiLCJlbCIsImZvckVhY2giLCJzZXRBdHRyaWJ1dGUiLCJ1cGRhdGUiLCJyZW1vdmUiLCJyZXN1bHQiLCJ0cmFuc2Zvcm0iLCJzdHlsZUluZGV4IiwiYXBwbHlUb1NpbmdsZXRvblRhZyIsIlVSTCIsImNyZWF0ZU9iamVjdFVSTCIsInJldm9rZU9iamVjdFVSTCIsIkJsb2IiLCJidG9hIiwibGluayIsInJlbCIsImNyZWF0ZUxpbmtFbGVtZW50IiwiYXV0b0ZpeFVybHMiLCJjb252ZXJ0VG9BYnNvbHV0ZVVybHMiLCJ1bmVzY2FwZSIsImJsb2IiLCJvbGRTcmMiLCJocmVmIiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJjcmVhdGVUZXh0Tm9kZSIsIm5ld09iaiIsIkRFQlVHIiwibmV3TGlzdCIsIm1heVJlbW92ZSIsInJlcGxhY2VUZXh0IiwidGV4dFN0b3JlIiwicmVwbGFjZW1lbnQiLCJmaWx0ZXIiLCJCb29sZWFuIiwiY3NzTm9kZSIsImNoaWxkTm9kZXMiLCJ1c2VTb3VyY2VNYXAiLCJtYXAiLCJjb250ZW50IiwiY3NzTWFwcGluZyIsInNvdXJjZU1hcHBpbmciLCJ0b0NvbW1lbnQiLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZVJvb3QiLCJjb25jYXQiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibWVkaWFRdWVyeSIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJtYWtlRW1wdHlGdW5jdGlvbiIsImFyZyIsImVtcHR5RnVuY3Rpb24iLCJ0aGF0UmV0dXJucyIsInRoYXRSZXR1cm5zRmFsc2UiLCJ0aGF0UmV0dXJuc1RydWUiLCJ0aGF0UmV0dXJuc051bGwiLCJ0aGF0UmV0dXJuc1RoaXMiLCJ0aGF0UmV0dXJuc0FyZ3VtZW50IiwidmFsaWRhdGVGb3JtYXQiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJwcm9wSXNFbnVtZXJhYmxlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJhc3NpZ24iLCJ0ZXN0MSIsIlN0cmluZyIsImdldE93blByb3BlcnR5TmFtZXMiLCJ0ZXN0MiIsImZyb21DaGFyQ29kZSIsInRlc3QzIiwic3BsaXQiLCJsZXR0ZXIiLCJlcnIiLCJzaG91bGRVc2VOYXRpdmUiLCJmcm9tIiwic3ltYm9scyIsInRvIiwidmFsIiwidG9PYmplY3QiLCJSRUFDVF9TVEFUSUNTIiwiY2hpbGRDb250ZXh0VHlwZXMiLCJjb250ZXh0VHlwZXMiLCJkZWZhdWx0UHJvcHMiLCJkaXNwbGF5TmFtZSIsImdldERlZmF1bHRQcm9wcyIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsIm1peGlucyIsInByb3BUeXBlcyIsIktOT1dOX1NUQVRJQ1MiLCJjYWxsZXIiLCJjYWxsZWUiLCJhcml0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImdldFByb3RvdHlwZU9mIiwib2JqZWN0UHJvdG90eXBlIiwiaG9pc3ROb25SZWFjdFN0YXRpY3MiLCJ0YXJnZXRDb21wb25lbnQiLCJzb3VyY2VDb21wb25lbnQiLCJibGFja2xpc3QiLCJpbmhlcml0ZWRDb21wb25lbnQiLCJkZXNjcmlwdG9yIiwiY2hlY2tEQ0UiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJjb25zb2xlIiwiaXNBYnNvbHV0ZSIsInBhdGhuYW1lIiwiY2hhckF0Iiwic3BsaWNlT25lIiwiayIsInBvcCIsInJlc29sdmVfcGF0aG5hbWUiLCJ0b1BhcnRzIiwiZnJvbVBhcnRzIiwiaXNUb0FicyIsImlzRnJvbUFicyIsIm11c3RFbmRBYnMiLCJoYXNUcmFpbGluZ1NsYXNoIiwibGFzdCIsInVwIiwidW5zaGlmdCIsIl90eXBlb2YiLCJpdGVyYXRvciIsImNvbnN0cnVjdG9yIiwidmFsdWVfZXF1YWwiLCJ2YWx1ZUVxdWFsIiwiaXNBcnJheSIsImV2ZXJ5IiwiYVR5cGUiLCJhVmFsdWUiLCJ2YWx1ZU9mIiwiYlZhbHVlIiwiYUtleXMiLCJiS2V5cyIsImFkZExlYWRpbmdTbGFzaCIsInN0cmlwTGVhZGluZ1NsYXNoIiwiaGFzQmFzZW5hbWUiLCJzdHJpcEJhc2VuYW1lIiwic3RyaXBUcmFpbGluZ1NsYXNoIiwiY3JlYXRlUGF0aCIsImxvY2F0aW9uIiwic2VhcmNoIiwiaGFzaCIsIl9leHRlbmRzIiwiTG9jYXRpb25VdGlsc19jcmVhdGVMb2NhdGlvbiIsInN0YXRlIiwiY3VycmVudExvY2F0aW9uIiwiaGFzaEluZGV4Iiwic2VhcmNoSW5kZXgiLCJwYXJzZVBhdGgiLCJkZWNvZGVVUkkiLCJVUklFcnJvciIsIkxvY2F0aW9uVXRpbHNfbG9jYXRpb25zQXJlRXF1YWwiLCJlc19jcmVhdGVUcmFuc2l0aW9uTWFuYWdlciIsInByb21wdCIsImxpc3RlbmVycyIsInNldFByb21wdCIsIm5leHRQcm9tcHQiLCJicm93c2VyX2RlZmF1bHQiLCJjb25maXJtVHJhbnNpdGlvblRvIiwiYWN0aW9uIiwiZ2V0VXNlckNvbmZpcm1hdGlvbiIsImNhbGxiYWNrIiwiYXBwZW5kTGlzdGVuZXIiLCJpc0FjdGl2ZSIsImxpc3RlbmVyIiwibm90aWZ5TGlzdGVuZXJzIiwiX2xlbiIsIl9rZXkiLCJjYW5Vc2VET00iLCJhZGRFdmVudExpc3RlbmVyIiwibm9kZSIsImV2ZW50IiwiYXR0YWNoRXZlbnQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZGV0YWNoRXZlbnQiLCJnZXRDb25maXJtYXRpb24iLCJtZXNzYWdlIiwiY29uZmlybSIsImNyZWF0ZUhhc2hIaXN0b3J5X2V4dGVuZHMiLCJIYXNoUGF0aENvZGVycyIsImhhc2hiYW5nIiwiZW5jb2RlUGF0aCIsImRlY29kZVBhdGgiLCJub3NsYXNoIiwic2xhc2giLCJnZXRIYXNoUGF0aCIsInN1YnN0cmluZyIsInJlcGxhY2VIYXNoUGF0aCIsImVzX2NyZWF0ZUhhc2hIaXN0b3J5IiwicHJvcHMiLCJpbnZhcmlhbnRfYnJvd3Nlcl9kZWZhdWx0IiwiZ2xvYmFsSGlzdG9yeSIsImhpc3RvcnkiLCJjYW5Hb1dpdGhvdXRSZWxvYWQiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJfcHJvcHMkZ2V0VXNlckNvbmZpcm0iLCJfcHJvcHMkaGFzaFR5cGUiLCJoYXNoVHlwZSIsImJhc2VuYW1lIiwiX0hhc2hQYXRoQ29kZXJzJGhhc2hUIiwiZ2V0RE9NTG9jYXRpb24iLCJ0cmFuc2l0aW9uTWFuYWdlciIsInNldFN0YXRlIiwibmV4dFN0YXRlIiwiZm9yY2VOZXh0UG9wIiwiaWdub3JlUGF0aCIsImhhbmRsZUhhc2hDaGFuZ2UiLCJlbmNvZGVkUGF0aCIsInByZXZMb2NhdGlvbiIsImhhbmRsZVBvcCIsIm9rIiwicmV2ZXJ0UG9wIiwiZnJvbUxvY2F0aW9uIiwidG9Mb2NhdGlvbiIsInRvSW5kZXgiLCJhbGxQYXRocyIsImxhc3RJbmRleE9mIiwiZnJvbUluZGV4IiwiZGVsdGEiLCJnbyIsImluaXRpYWxMb2NhdGlvbiIsImxpc3RlbmVyQ291bnQiLCJjaGVja0RPTUxpc3RlbmVycyIsImlzQmxvY2tlZCIsImNyZWF0ZUhyZWYiLCJwdXNoSGFzaFBhdGgiLCJwcmV2SW5kZXgiLCJuZXh0UGF0aHMiLCJnb0JhY2siLCJnb0ZvcndhcmQiLCJibG9jayIsInVuYmxvY2siLCJsaXN0ZW4iLCJ1bmxpc3RlbiIsIlJvdXRlcl9leHRlbmRzIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJzZWxmIiwiUmVmZXJlbmNlRXJyb3IiLCJSb3V0ZXJfUm91dGVyIiwiX1JlYWN0JENvbXBvbmVudCIsIlJvdXRlciIsIl90ZW1wIiwiX3RoaXMiLCJpbnN0YW5jZSIsIkNvbnN0cnVjdG9yIiwiX2NsYXNzQ2FsbENoZWNrIiwiY29tcHV0ZU1hdGNoIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwid3JpdGFibGUiLCJjb25maWd1cmFibGUiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIl9pbmhlcml0cyIsImdldENoaWxkQ29udGV4dCIsInJvdXRlciIsImNvbnRleHQiLCJ1cmwiLCJwYXJhbXMiLCJpc0V4YWN0IiwiY29tcG9uZW50V2lsbE1vdW50IiwiX3RoaXMyIiwiX3Byb3BzIiwiY2hpbGRyZW4iLCJyZWFjdF9kZWZhdWx0IiwiQ2hpbGRyZW4iLCJjb3VudCIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJuZXh0UHJvcHMiLCJ3YXJuaW5nX2RlZmF1bHQiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsInJlbmRlciIsIm9ubHkiLCJDb21wb25lbnQiLCJwcm9wX3R5cGVzX2RlZmF1bHQiLCJpc1JlcXVpcmVkIiwicmVhY3Rfcm91dGVyX2RvbV9lc19Sb3V0ZXIiLCJIYXNoUm91dGVyX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJIYXNoUm91dGVyX0hhc2hSb3V0ZXIiLCJIYXNoUm91dGVyIiwiSGFzaFJvdXRlcl9jbGFzc0NhbGxDaGVjayIsIkhhc2hSb3V0ZXJfaW5oZXJpdHMiLCJzdHJpbmciLCJmdW5jIiwib25lT2YiLCJlc19IYXNoUm91dGVyIiwicGF0dGVybkNhY2hlIiwiY2FjaGVDb3VudCIsImVzX21hdGNoUGF0aCIsInBhcmVudCIsIl9vcHRpb25zIiwiX29wdGlvbnMkZXhhY3QiLCJleGFjdCIsIl9vcHRpb25zJHN0cmljdCIsIl9vcHRpb25zJHNlbnNpdGl2ZSIsIl9jb21waWxlUGF0aCIsImNhY2hlS2V5IiwiY2FjaGUiLCJjb21waWxlZFBhdHRlcm4iLCJwYXRoX3RvX3JlZ2V4cF9kZWZhdWx0IiwibWF0Y2hQYXRoX2NvbXBpbGVQYXRoIiwidmFsdWVzIiwicmVkdWNlIiwiU3dpdGNoX1N3aXRjaCIsIlN3aXRjaCIsIlN3aXRjaF9jbGFzc0NhbGxDaGVjayIsIlN3aXRjaF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiU3dpdGNoX2luaGVyaXRzIiwiY2hpbGQiLCJlbGVtZW50IiwiaXNWYWxpZEVsZW1lbnQiLCJfZWxlbWVudCRwcm9wcyIsInBhdGhQcm9wIiwiY2xvbmVFbGVtZW50IiwiY29tcHV0ZWRNYXRjaCIsInNoYXBlIiwicmVhY3Rfcm91dGVyX2RvbV9lc19Td2l0Y2giLCJSb3V0ZV9leHRlbmRzIiwiUm91dGVfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIlJvdXRlX2lzRW1wdHlDaGlsZHJlbiIsIlJvdXRlX1JvdXRlIiwiUm91dGUiLCJSb3V0ZV9jbGFzc0NhbGxDaGVjayIsIlJvdXRlX2luaGVyaXRzIiwiX3JlZiIsImNvbXBvbmVudCIsIm5leHRDb250ZXh0IiwiX2NvbnRleHQkcm91dGVyIiwic3RhdGljQ29udGV4dCIsImJvb2wiLCJvbmVPZlR5cGUiLCJlc19Sb3V0ZSIsInJlYWN0X3JvdXRlcl9kb21fZXNfUm91dGUiLCJnZW5lcmF0ZVBhdGhfcGF0dGVybkNhY2hlIiwiZ2VuZXJhdGVQYXRoX2NhY2hlQ291bnQiLCJlc19nZW5lcmF0ZVBhdGgiLCJjb21waWxlZEdlbmVyYXRvciIsImdlbmVyYXRlUGF0aF9jb21waWxlR2VuZXJhdG9yIiwiZ2VuZXJhdG9yIiwiUmVkaXJlY3RfZXh0ZW5kcyIsIlJlZGlyZWN0X1JlZGlyZWN0IiwiUmVkaXJlY3QiLCJSZWRpcmVjdF9jbGFzc0NhbGxDaGVjayIsIlJlZGlyZWN0X3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJSZWRpcmVjdF9pbmhlcml0cyIsImlzU3RhdGljIiwicGVyZm9ybSIsImNvbXBvbmVudERpZE1vdW50IiwiY29tcG9uZW50RGlkVXBkYXRlIiwicHJldlByb3BzIiwicHJldlRvIiwibmV4dFRvIiwiY29tcHV0ZVRvIiwicmVhY3Rfcm91dGVyX2RvbV9lc19SZWRpcmVjdCIsIndpdGhSb3V0ZXJfZXh0ZW5kcyIsInJlYWN0X3JvdXRlcl9kb21fZXNfd2l0aFJvdXRlciIsIkMiLCJ3cmFwcGVkQ29tcG9uZW50UmVmIiwicmVtYWluaW5nUHJvcHMiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJyb3V0ZUNvbXBvbmVudFByb3BzIiwicmVmIiwiV3JhcHBlZENvbXBvbmVudCIsImhvaXN0X25vbl9yZWFjdF9zdGF0aWNzX2Nqc19kZWZhdWx0IiwiR2FsbGVyeV9HYWxsZXJ5IiwicmVhY3QiLCJpbWFnZUFycmF5IiwiY2xhc3NOYW1lIiwiaW1hZ2UiLCJzcmMiLCJhbHQiLCJhcnJheSIsIkxpbmtfZXh0ZW5kcyIsIkxpbmtfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsImlzTW9kaWZpZWRFdmVudCIsIm1ldGFLZXkiLCJhbHRLZXkiLCJjdHJsS2V5Iiwic2hpZnRLZXkiLCJMaW5rX0xpbmsiLCJMaW5rIiwiTGlua19jbGFzc0NhbGxDaGVjayIsImhhbmRsZUNsaWNrIiwib25DbGljayIsImRlZmF1bHRQcmV2ZW50ZWQiLCJidXR0b24iLCJwcmV2ZW50RGVmYXVsdCIsIl90aGlzJHByb3BzIiwiTGlua19pbmhlcml0cyIsImlubmVyUmVmIiwiTGlua19vYmplY3RXaXRob3V0UHJvcGVydGllcyIsImVzX0xpbmsiLCJGZWVkYmFja19GZWVkYmFjayIsInNyY19GZWVkYmFjayIsIlJvdXRlc19pbWFnZUFycmF5IiwiZ2lhbnRfZGVmYXVsdCIsImFzc2V0c19naWFudF9kZWZhdWx0Iiwic3JjX2Fzc2V0c19naWFudF9kZWZhdWx0IiwibGFyZ2VfZGVmYXVsdCIsImFzc2V0c19sYXJnZV9kZWZhdWx0Iiwic21hbGxfZGVmYXVsdCIsImFzc2V0c19zbWFsbF9kZWZhdWx0IiwiaWNvbl9kZWZhdWx0IiwiUm91dGVzX1JvdXRlcyIsImNvcmRvdmEiLCJGaXJlYmFzZVBsdWdpbiIsIm9uTm90aWZpY2F0aW9uT3BlbiIsIm5vdGlmaWNhdGlvbiIsImxvZyIsImlzUmUiLCJzcmNfUm91dGVzIiwiQXBwX0FwcCIsIltvYmplY3QgT2JqZWN0XSIsInN1cGVyIiwiaGFuZGxlR3JhbnRQZXJtaXNzaW9uIiwiZ3JhbnRQZXJtaXNzaW9uIiwiaGFuZGxlR2V0VG9rZW4iLCJnZXRUb2tlbiIsInN0YXJ0QXBwIiwicmVhY3RfZG9tX2RlZmF1bHQiLCJnZXRFbGVtZW50QnlJZCIsInZlcnNpb24iLCJuYW1lcyIsIm1hcHBpbmdzIiwiZmlsZSIsInNvdXJjZXNDb250ZW50IiwiaG1yIiwibG9jYWxzIiwiYXJyIiwiYmFzZVVybCIsInByb3RvY29sIiwiaG9zdCIsImN1cnJlbnREaXIiLCJmdWxsTWF0Y2giLCJvcmlnVXJsIiwibmV3VXJsIiwidW5xdW90ZWRPcmlnVXJsIiwidHJpbSIsIiQxIiwiUmVhY3RQcm9wVHlwZXNTZWNyZXQiLCJzaGltIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwicHJvcEZ1bGxOYW1lIiwic2VjcmV0IiwiZ2V0U2hpbSIsIlJlYWN0UHJvcFR5cGVzIiwibnVtYmVyIiwic3ltYm9sIiwiYW55IiwiYXJyYXlPZiIsImluc3RhbmNlT2YiLCJvYmplY3RPZiIsImNoZWNrUHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiZGVmYXVsdFZpZXciLCJvd25lckRvY3VtZW50IiwiTm9kZSIsIm5vZGVUeXBlIiwibm9kZU5hbWUiLCJpc05vZGUiLCJpc1RleHROb2RlIiwiY29udGFpbnNOb2RlIiwib3V0ZXJOb2RlIiwiaW5uZXJOb2RlIiwiY29udGFpbnMiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsImlzIiwieCIsInkiLCJvYmpBIiwib2JqQiIsImtleXNBIiwia2V5c0IiLCJkb2MiLCJhY3RpdmVFbGVtZW50IiwiYm9keSIsIkV4ZWN1dGlvbkVudmlyb25tZW50IiwiY2FuVXNlV29ya2VycyIsIldvcmtlciIsImNhblVzZUV2ZW50TGlzdGVuZXJzIiwiY2FuVXNlVmlld3BvcnQiLCJzY3JlZW4iLCJpc0luV29ya2VyIiwiYWEiLCJiYSIsInYiLCJkYSIsImVhIiwiZmEiLCJoYSIsIkEiLCJCIiwiX2NhdWdodEVycm9yIiwiX2hhc0NhdWdodEVycm9yIiwiX3JldGhyb3dFcnJvciIsIl9oYXNSZXRocm93RXJyb3IiLCJpbnZva2VHdWFyZGVkQ2FsbGJhY2siLCJnIiwiaCIsImludm9rZUd1YXJkZWRDYWxsYmFja0FuZENhdGNoRmlyc3RFcnJvciIsImhhc0NhdWdodEVycm9yIiwiY2xlYXJDYXVnaHRFcnJvciIsInJldGhyb3dDYXVnaHRFcnJvciIsImxhIiwibWEiLCJuYSIsIm9hIiwiZXh0cmFjdEV2ZW50cyIsImV2ZW50VHlwZXMiLCJwYSIsInBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzIiwicWEiLCJyZWdpc3RyYXRpb25OYW1lIiwicmEiLCJzYSIsImRlcGVuZGVuY2llcyIsInRhIiwidWEiLCJ2YSIsInBsdWdpbnMiLCJldmVudE5hbWVEaXNwYXRjaENvbmZpZ3MiLCJyZWdpc3RyYXRpb25OYW1lTW9kdWxlcyIsInJlZ2lzdHJhdGlvbk5hbWVEZXBlbmRlbmNpZXMiLCJwb3NzaWJsZVJlZ2lzdHJhdGlvbk5hbWVzIiwiaW5qZWN0RXZlbnRQbHVnaW5PcmRlciIsImluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSIsIndhIiwieGEiLCJ5YSIsInphIiwiY3VycmVudFRhcmdldCIsIkFhIiwiQmEiLCJDYSIsIkRhIiwiX2Rpc3BhdGNoTGlzdGVuZXJzIiwiX2Rpc3BhdGNoSW5zdGFuY2VzIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJpc1BlcnNpc3RlbnQiLCJyZWxlYXNlIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJzdGF0ZU5vZGUiLCJkaXNhYmxlZCIsIklhIiwiSmEiLCJLYSIsImluamVjdGlvbiIsImdldExpc3RlbmVyIiwicnVuRXZlbnRzSW5CYXRjaCIsInJ1bkV4dHJhY3RlZEV2ZW50c0luQmF0Y2giLCJMYSIsIk1hdGgiLCJyYW5kb20iLCJNYSIsIk5hIiwidGFnIiwiT2EiLCJQYSIsIlFhIiwicHJlY2FjaGVGaWJlck5vZGUiLCJnZXRDbG9zZXN0SW5zdGFuY2VGcm9tTm9kZSIsImdldEluc3RhbmNlRnJvbU5vZGUiLCJnZXROb2RlRnJvbUluc3RhbmNlIiwiZ2V0RmliZXJDdXJyZW50UHJvcHNGcm9tTm9kZSIsInVwZGF0ZUZpYmVyUHJvcHMiLCJGIiwicmV0dXJuIiwiUmEiLCJTYSIsImRpc3BhdGNoQ29uZmlnIiwiVGEiLCJfdGFyZ2V0SW5zdCIsIlVhIiwiVmEiLCJYYSIsIllhIiwiWmEiLCJhbHRlcm5hdGUiLCIkYSIsImFjY3VtdWxhdGVUd29QaGFzZURpc3BhdGNoZXMiLCJhY2N1bXVsYXRlVHdvUGhhc2VEaXNwYXRjaGVzU2tpcFRhcmdldCIsImFjY3VtdWxhdGVFbnRlckxlYXZlRGlzcGF0Y2hlcyIsImFjY3VtdWxhdGVEaXJlY3REaXNwYXRjaGVzIiwiYWIiLCJ0b0xvd2VyQ2FzZSIsImJiIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiY2IiLCJkYiIsImViIiwiYW5pbWF0aW9uIiwidHJhbnNpdGlvbiIsImZiIiwiZ2IiLCJoYiIsImliIiwiamIiLCJrYiIsImxiIiwiZG9jdW1lbnRFbGVtZW50IiwiRyIsIl9yb290IiwiX3N0YXJ0VGV4dCIsIl9mYWxsYmFja1RleHQiLCJtYiIsIm5iIiwib2IiLCJwYiIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsIkRhdGUiLCJub3ciLCJpc1RydXN0ZWQiLCJIIiwibmF0aXZlRXZlbnQiLCJJbnRlcmZhY2UiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsInJiIiwiZXZlbnRQb29sIiwic2IiLCJkZXN0cnVjdG9yIiwicWIiLCJnZXRQb29sZWQiLCJzdG9wUHJvcGFnYXRpb24iLCJjYW5jZWxCdWJibGUiLCJwZXJzaXN0IiwiZXh0ZW5kIiwidGIiLCJ1YiIsInZiIiwid2IiLCJ4YiIsImRvY3VtZW50TW9kZSIsInliIiwiemIiLCJBYiIsIkJiIiwiYmVmb3JlSW5wdXQiLCJidWJibGVkIiwiY2FwdHVyZWQiLCJjb21wb3NpdGlvbkVuZCIsImNvbXBvc2l0aW9uU3RhcnQiLCJjb21wb3NpdGlvblVwZGF0ZSIsIkNiIiwiRGIiLCJrZXlDb2RlIiwiRWIiLCJkZXRhaWwiLCJGYiIsIkliIiwid2hpY2giLCJHYiIsImNoYXIiLCJIYiIsIkpiIiwiS2IiLCJpbmplY3RGaWJlckNvbnRyb2xsZWRIb3N0Q29tcG9uZW50IiwiTGIiLCJNYiIsIk5iIiwicmVzdG9yZUNvbnRyb2xsZWRTdGF0ZSIsIk9iIiwiUGIiLCJRYiIsIlJiIiwiZW5xdWV1ZVN0YXRlUmVzdG9yZSIsIm5lZWRzU3RhdGVSZXN0b3JlIiwicmVzdG9yZVN0YXRlSWZOZWVkZWQiLCJTYiIsIlRiIiwiVWIiLCJWYiIsIldiIiwiWGIiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImRhdGV0aW1lLWxvY2FsIiwiZW1haWwiLCJtb250aCIsInBhc3N3b3JkIiwicmFuZ2UiLCJ0ZWwiLCJ0ZXh0IiwidGltZSIsIndlZWsiLCJZYiIsIlpiIiwic3JjRWxlbWVudCIsImNvcnJlc3BvbmRpbmdVc2VFbGVtZW50IiwiJGIiLCJhYyIsImNjIiwiX3ZhbHVlVHJhY2tlciIsInNldCIsImdldFZhbHVlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJiYyIsImRjIiwiY2hlY2tlZCIsImVjIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJSZWFjdEN1cnJlbnRPd25lciIsImZjIiwiZm9yIiwiZ2MiLCJoYyIsImljIiwiamMiLCJrYyIsImxjIiwibWMiLCJwYyIsInFjIiwicmMiLCJzYyIsInRjIiwidWMiLCJwZW5kaW5nUHJvcHMiLCIkJHR5cGVvZiIsInZjIiwiX2RlYnVnT3duZXIiLCJfZGVidWdTb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJ3YyIsInhjIiwiemMiLCJJIiwiYWNjZXB0c0Jvb2xlYW5zIiwiYXR0cmlidXRlTmFtZSIsImF0dHJpYnV0ZU5hbWVzcGFjZSIsIm11c3RVc2VQcm9wZXJ0eSIsInByb3BlcnR5TmFtZSIsIkoiLCJEYyIsIkVjIiwiRmMiLCJCYyIsImlzTmFOIiwiQ2MiLCJBYyIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZU5TIiwiR2MiLCJkZWZhdWx0Q2hlY2tlZCIsImRlZmF1bHRWYWx1ZSIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIkhjIiwiSWMiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiSmMiLCJLYyIsIkxjIiwiTWMiLCJ0YWJJbmRleCIsIk5jIiwiY2hhbmdlIiwiT2MiLCJQYyIsIlFjIiwiUmMiLCJTYyIsIlRjIiwiVWMiLCJWYyIsIldjIiwiWGMiLCJZYyIsIlpjIiwiJGMiLCJhZCIsIl9pc0lucHV0RXZlbnRTdXBwb3J0ZWQiLCJiZCIsInZpZXciLCJjZCIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJkZCIsImdldE1vZGlmaWVyU3RhdGUiLCJlZCIsImZkIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwiZ2QiLCJwb2ludGVySWQiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInBvaW50ZXJUeXBlIiwiaXNQcmltYXJ5IiwiaGQiLCJtb3VzZUVudGVyIiwibW91c2VMZWF2ZSIsInBvaW50ZXJFbnRlciIsInBvaW50ZXJMZWF2ZSIsInBhcmVudFdpbmRvdyIsImpkIiwiZWZmZWN0VGFnIiwia2QiLCJsZCIsInNpYmxpbmciLCJjdXJyZW50IiwibWQiLCJvZCIsImFuaW1hdGlvbk5hbWUiLCJlbGFwc2VkVGltZSIsInBzZXVkb0VsZW1lbnQiLCJwZCIsImNsaXBib2FyZERhdGEiLCJxZCIsInJkIiwiY2hhckNvZGUiLCJzZCIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJ0ZCIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJ1ZCIsImxvY2FsZSIsInZkIiwiZGF0YVRyYW5zZmVyIiwid2QiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwieGQiLCJ5ZCIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwiemQiLCJBZCIsIkJkIiwiQ2QiLCJpc0ludGVyYWN0aXZlIiwiRGQiLCJpc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGUiLCJFZCIsIkZkIiwiR2QiLCJ0YXJnZXRJbnN0IiwiYW5jZXN0b3JzIiwiY29udGFpbmVySW5mbyIsInRvcExldmVsVHlwZSIsIkhkIiwiSWQiLCJLIiwiS2QiLCJMZCIsIk1kIiwiTmQiLCJfZW5hYmxlZCIsInNldEVuYWJsZWQiLCJpc0VuYWJsZWQiLCJ0cmFwQnViYmxlZEV2ZW50IiwidHJhcENhcHR1cmVkRXZlbnQiLCJkaXNwYXRjaEV2ZW50IiwiT2QiLCJQZCIsIlFkIiwiUmQiLCJTZCIsIlRkIiwidGV4dENvbnRlbnQiLCJVZCIsImNvbnRlbnRFZGl0YWJsZSIsIlZkIiwiV2QiLCJzZWxlY3QiLCJYZCIsIllkIiwiWmQiLCIkZCIsImFlIiwic3RhcnQiLCJzZWxlY3Rpb25TdGFydCIsInNlbGVjdGlvbkVuZCIsImdldFNlbGVjdGlvbiIsImFuY2hvck5vZGUiLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsImJlIiwib25TZWxlY3QiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwiY2UiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJkZSIsImVlIiwic2V0VGltZW91dCIsImZlIiwiY2xlYXJUaW1lb3V0IiwiZ2UiLCJwZXJmb3JtYW5jZSIsImhlIiwiaWUiLCJqZSIsImtlIiwiTCIsImxlIiwibWUiLCJuZSIsIm9lIiwicGUiLCJxZSIsInNlIiwiZGlkVGltZW91dCIsInRpbWVSZW1haW5pbmciLCJ1ZSIsInNjaGVkdWxlZENhbGxiYWNrIiwicG9zdE1lc3NhZ2UiLCJ0ZSIsInRpbWVvdXRUaW1lIiwidmUiLCJ0aW1lb3V0IiwicHJldiIsIndlIiwiTWFwIiwiSW5maW5pdHkiLCJkZWxldGUiLCJ5ZSIsInhlIiwiemUiLCJzZWxlY3RlZCIsImRlZmF1bHRTZWxlY3RlZCIsIkFlIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsIkJlIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJDZSIsIkRlIiwiRWUiLCJGZSIsImh0bWwiLCJtYXRobWwiLCJzdmciLCJHZSIsIkhlIiwiSWUiLCJKZSIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJuYW1lc3BhY2VVUkkiLCJpbm5lckhUTUwiLCJLZSIsImxhc3RDaGlsZCIsIm5vZGVWYWx1ZSIsIkxlIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkUm93IiwiZ3JpZFJvd0VuZCIsImdyaWRSb3dTcGFuIiwiZ3JpZFJvd1N0YXJ0IiwiZ3JpZENvbHVtbiIsImdyaWRDb2x1bW5FbmQiLCJncmlkQ29sdW1uU3BhbiIsImdyaWRDb2x1bW5TdGFydCIsImZvbnRXZWlnaHQiLCJsaW5lQ2xhbXAiLCJsaW5lSGVpZ2h0Iiwib3BhY2l0eSIsIm9yZGVyIiwib3JwaGFucyIsInRhYlNpemUiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwiTWUiLCJOZSIsInNldFByb3BlcnR5IiwiT2UiLCJtZW51aXRlbSIsImFyZWEiLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJpbnB1dCIsImtleWdlbiIsIm1ldGEiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwiUGUiLCJRZSIsIlJlIiwiU2UiLCJibHVyIiwiZm9jdXMiLCJUZSIsImNyZWF0ZUVsZW1lbnROUyIsIlVlIiwiVmUiLCJfX2h0bWwiLCJvbmNsaWNrIiwiV2UiLCJYZSIsIlllIiwiWmUiLCIkZSIsInNldEluaXRpYWxQcm9wZXJ0aWVzIiwiZGlmZlByb3BlcnRpZXMiLCJ1cGRhdGVQcm9wZXJ0aWVzIiwiZGlmZkh5ZHJhdGVkUHJvcGVydGllcyIsImRpZmZIeWRyYXRlZFRleHQiLCJ3YXJuRm9yVW5tYXRjaGVkVGV4dCIsIndhcm5Gb3JEZWxldGVkSHlkcmF0YWJsZUVsZW1lbnQiLCJ3YXJuRm9yRGVsZXRlZEh5ZHJhdGFibGVUZXh0Iiwid2FybkZvckluc2VydGVkSHlkcmF0ZWRFbGVtZW50Iiwid2FybkZvckluc2VydGVkSHlkcmF0ZWRUZXh0IiwicXVlcnlTZWxlY3RvckFsbCIsImZvcm0iLCJhZiIsImJmIiwiY2YiLCJhdXRvRm9jdXMiLCJkZiIsImVmIiwiZmYiLCJnZiIsImhmIiwiamYiLCJTZXQiLCJrZiIsImxmIiwibWYiLCJNIiwiTiIsIm5mIiwiTyIsIm9mIiwicGYiLCJxZiIsInJmIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0Iiwic2YiLCJ0ZiIsInVmIiwidmYiLCJ3ZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwieGYiLCJ5ZiIsIm1lbW9pemVkU3RhdGUiLCJ1cGRhdGVRdWV1ZSIsIm1lbW9pemVkUHJvcHMiLCJsYXN0RWZmZWN0IiwiZmlyc3RFZmZlY3QiLCJuZXh0RWZmZWN0IiwiZXhwaXJhdGlvblRpbWUiLCJ6ZiIsIkFmIiwiaXNSZWFjdENvbXBvbmVudCIsIkJmIiwiQ2YiLCJEZiIsInBlbmRpbmdDaGlsZHJlbiIsImltcGxlbWVudGF0aW9uIiwiRWYiLCJlYXJsaWVzdFBlbmRpbmdUaW1lIiwibGF0ZXN0UGVuZGluZ1RpbWUiLCJlYXJsaWVzdFN1c3BlbmRlZFRpbWUiLCJsYXRlc3RTdXNwZW5kZWRUaW1lIiwibGF0ZXN0UGluZ2VkVGltZSIsInBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZSIsImZpbmlzaGVkV29yayIsInBlbmRpbmdDb250ZXh0IiwiaHlkcmF0ZSIsInJlbWFpbmluZ0V4cGlyYXRpb25UaW1lIiwiZmlyc3RCYXRjaCIsIm5leHRTY2hlZHVsZWRSb290IiwiRmYiLCJHZiIsIkhmIiwiSmYiLCJLZiIsIkxmIiwiTWYiLCJiYXNlU3RhdGUiLCJmaXJzdFVwZGF0ZSIsImxhc3RVcGRhdGUiLCJmaXJzdENhcHR1cmVkVXBkYXRlIiwibGFzdENhcHR1cmVkVXBkYXRlIiwiZmlyc3RDYXB0dXJlZEVmZmVjdCIsImxhc3RDYXB0dXJlZEVmZmVjdCIsIk5mIiwiT2YiLCJwYXlsb2FkIiwiUGYiLCJRZiIsIlJmIiwiU2YiLCJUZiIsIlVmIiwidyIsIlZmIiwiV2YiLCJYZiIsInN0YWNrIiwiWWYiLCJaZiIsIiRmIiwiYWciLCJfY29udGV4dCIsIl9jaGFuZ2VkQml0cyIsIl9jdXJyZW50VmFsdWUiLCJiZyIsImNnIiwiZGciLCJlZyIsImZnIiwiZ2ciLCJpZyIsInRhZ05hbWUiLCJqZyIsImtnIiwibGciLCJwZyIsImlzTW91bnRlZCIsIl9yZWFjdEludGVybmFsRmliZXIiLCJlbnF1ZXVlU2V0U3RhdGUiLCJtZyIsIm5nIiwib2ciLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwicWciLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsInJnIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJzZyIsImdldFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCIsInRnIiwidWciLCJfb3duZXIiLCJfc3RyaW5nUmVmIiwidmciLCJ3ZyIsIlAiLCJuYyIsIkpkIiwidSIsInEiLCJFIiwiZG9uZSIsInhnIiwieWciLCJ6ZyIsIkFnIiwiQmciLCJDZyIsIkRnIiwiRWciLCJGZyIsIkdnIiwiSGciLCJRIiwiSWciLCJKZyIsIktnIiwiUiIsIkxnIiwiTWciLCJSZyIsInVwZGF0ZXIiLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJoaWRkZW4iLCJfY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJRZyIsInVuc3RhYmxlX29ic2VydmVkQml0cyIsIlNnIiwiVGciLCJVZyIsIlZnIiwiV2ciLCJYZyIsInN1cHByZXNzUmVhY3RFcnJvckxvZ2dpbmciLCJZZyIsIlpnIiwiJGciLCJhaCIsImJoIiwiY2giLCJkaCIsImVoIiwiZmgiLCJnaCIsImNvbXBvbmVudERpZENhdGNoIiwiaGgiLCJhZGQiLCJjb21wb25lbnRTdGFjayIsImloIiwiaGFzIiwiamgiLCJraCIsImxoIiwibWgiLCJuaCIsIm9oIiwicGgiLCJTIiwicWgiLCJUIiwicmgiLCJzaCIsIlUiLCJ0aCIsInVoIiwidmgiLCJ3aCIsInhoIiwieWgiLCJ6aCIsIkFoIiwiWCIsIkJoIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUNhdGNoIiwiQ2giLCJEaCIsIkVoIiwiRmgiLCJHaCIsIkhoIiwiSWgiLCJKaCIsIlYiLCJLaCIsIkxoIiwiVyIsIlkiLCJNaCIsIk5oIiwiT2giLCJQaCIsIloiLCJRaCIsIlJoIiwiU2giLCJUaCIsIlVoIiwiVmgiLCJXaCIsIlhoIiwiWWgiLCJaaCIsIiRoIiwiX29uQ29tcGxldGUiLCJhaSIsIl9leHBpcmF0aW9uVGltZSIsIl9kZWZlciIsInJhbmdlQ291bnQiLCJXYSIsImZvY3VzZWRFbGVtIiwic2VsZWN0aW9uUmFuZ2UiLCJEIiwiamEiLCJtaSIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwieiIsIm1pbiIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsInNldEVuZCIsImxlZnQiLCJzY3JvbGxMZWZ0IiwidG9wIiwic2Nyb2xsVG9wIiwiaGciLCJvYyIsImNhIiwid2kiLCJ4aSIsIk5nIiwiT2ciLCJ5aSIsInljIiwiUGciLCJ6aSIsImJpIiwiY2kiLCJkaSIsImVpIiwiZmkiLCJnaSIsImhpIiwiaWkiLCJqaSIsImtpIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsImluamVjdCIsIm9uQ29tbWl0RmliZXJSb290Iiwib25Db21taXRGaWJlclVubW91bnQiLCJJZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwibGkiLCJvaSIsIl9jYWxsYmFja3MiLCJfbmV4dCIsIl9oYXNDaGlsZHJlbiIsIl9kaWRDb21wbGV0ZSIsIl9jaGlsZHJlbiIsInBpIiwiX2RpZENvbW1pdCIsIl9vbkNvbW1pdCIsInFpIiwiX2ludGVybmFsUm9vdCIsInJpIiwidGkiLCJfcmVhY3RSb290Q29udGFpbmVyIiwibGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiaGFzQXR0cmlidXRlIiwic2kiLCJ1aSIsIm5pIiwidGhlbiIsImNvbW1pdCIsInVubW91bnQiLCJjcmVhdGVCYXRjaCIsInZpIiwiY3JlYXRlUG9ydGFsIiwiZmluZERPTU5vZGUiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9jcmVhdGVQb3J0YWwiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsInVuc3RhYmxlX2RlZmVycmVkVXBkYXRlcyIsInVuc3RhYmxlX2ludGVyYWN0aXZlVXBkYXRlcyIsImZsdXNoU3luYyIsInVuc3RhYmxlX2ZsdXNoQ29udHJvbGxlZCIsIkV2ZW50UGx1Z2luSHViIiwiRXZlbnRQbHVnaW5SZWdpc3RyeSIsIkV2ZW50UHJvcGFnYXRvcnMiLCJSZWFjdENvbnRyb2xsZWRDb21wb25lbnQiLCJSZWFjdERPTUNvbXBvbmVudFRyZWUiLCJSZWFjdERPTUV2ZW50TGlzdGVuZXIiLCJ1bnN0YWJsZV9jcmVhdGVSb290IiwiYnVuZGxlVHlwZSIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJBaSIsImRlZmF1bHQiLCJCaSIsImZvcmNlVXBkYXRlIiwiX19zZWxmIiwiX19zb3VyY2UiLCJrZXlQcmVmaXgiLCI9IiwiOiIsImVzY2FwZSIsInRvQXJyYXkiLCJjcmVhdGVSZWYiLCJQdXJlQ29tcG9uZW50IiwiY3JlYXRlQ29udGV4dCIsIl9kZWZhdWx0VmFsdWUiLCJfY3VycmVudFZhbHVlMiIsIl9jaGFuZ2VkQml0czIiLCJQcm92aWRlciIsIkNvbnN1bWVyIiwiZm9yd2FyZFJlZiIsIkZyYWdtZW50IiwiU3RyaWN0TW9kZSIsInVuc3RhYmxlX0FzeW5jTW9kZSIsInVuc3RhYmxlX1Byb2ZpbGVyIiwiY3JlYXRlRmFjdG9yeSJdLCJtYXBwaW5ncyI6ImFBQ0EsSUFBQUEsS0FHQSxTQUFBQyxFQUFBQyxHQUdBLEdBQUFGLEVBQUFFLEdBQ0EsT0FBQUYsRUFBQUUsR0FBQUMsUUFHQSxJQUFBQyxFQUFBSixFQUFBRSxJQUNBRyxFQUFBSCxFQUNBSSxHQUFBLEVBQ0FILFlBVUEsT0FOQUksRUFBQUwsR0FBQU0sS0FBQUosRUFBQUQsUUFBQUMsSUFBQUQsUUFBQUYsR0FHQUcsRUFBQUUsR0FBQSxFQUdBRixFQUFBRCxRQUtBRixFQUFBUSxFQUFBRixFQUdBTixFQUFBUyxFQUFBVixFQUdBQyxFQUFBVSxFQUFBLFNBQUFSLEVBQUFTLEVBQUFDLEdBQ0FaLEVBQUFhLEVBQUFYLEVBQUFTLElBQ0FHLE9BQUFDLGVBQUFiLEVBQUFTLEdBQTBDSyxZQUFBLEVBQUFDLElBQUFMLEtBSzFDWixFQUFBa0IsRUFBQSxTQUFBaEIsR0FDQSxvQkFBQWlCLGVBQUFDLGFBQ0FOLE9BQUFDLGVBQUFiLEVBQUFpQixPQUFBQyxhQUF3REMsTUFBQSxXQUV4RFAsT0FBQUMsZUFB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QkEsRUFBQXdILFVBQUExRCxPQUFBLEdBQXFCN0QsRUFBQW9iLFNBQUF0WixPQUFzQixLQUFBL0IsRUFBQSxDQUFhSixFQUFBd0YsTUFBQXBGLEdBQVcsUUFBQUQsRUFBQSxFQUFZQSxFQUFBQyxFQUFJRCxJQUFBSCxFQUFBRyxHQUFBeUgsVUFBQXpILEVBQUEsR0FBd0JFLEVBQUFvYixTQUFBemIsRUFBYSxPQUFPNDRCLFNBQUEzM0IsRUFBQThKLEtBQUE5SSxFQUFBOEksS0FBQXpKLElBQUE4b0IsRUFBQXpJLElBQUEwSSxFQUFBdlQsTUFBQXpXLEVBQUFxNEMsT0FBQXQyQyxJQUFxRCtrRCxjQUFBLFNBQUFsbEQsR0FBMkIsSUFBQUMsRUFBQXl2QyxFQUFBcHdDLEtBQUEsS0FBQVUsR0FBOEIsT0FBVEMsRUFBQTZJLEtBQUE5SSxFQUFTQyxHQUFTc2MsZUFBQW96QixFQUFBcnNCLFFBQUEsU0FBQW1TLG9EQUF1RkMsa0JBQUFnQyxFQUM1ZjNxQixPQUFBNkMsSUFBVTZzQyxHQUFJa0gsUUFBQWpJLEdBQVVvQixFQUFBTCxHQUFBZixHQUFBZSxFQUFXNStDLEVBQUFELFFBQUFrL0MsRUFBQTZHLFFBQUE3RyxFQUFBNkcsUUFBQTdHIiwiZmlsZSI6ImJ1bmRsZS5hMmIxNGJlNzVmMjQ1MmFjOTBkNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAyMyk7XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSRUFDVF9FTEVNRU5UX1RZUEUgPSAodHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJlxuICAgIFN5bWJvbC5mb3IgJiZcbiAgICBTeW1ib2wuZm9yKCdyZWFjdC5lbGVtZW50JykpIHx8XG4gICAgMHhlYWM3O1xuXG4gIHZhciBpc1ZhbGlkRWxlbWVudCA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIHJldHVybiB0eXBlb2Ygb2JqZWN0ID09PSAnb2JqZWN0JyAmJlxuICAgICAgb2JqZWN0ICE9PSBudWxsICYmXG4gICAgICBvYmplY3QuJCR0eXBlb2YgPT09IFJFQUNUX0VMRU1FTlRfVFlQRTtcbiAgfTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKGlzVmFsaWRFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IDIwMTQtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBTaW1pbGFyIHRvIGludmFyaWFudCBidXQgb25seSBsb2dzIGEgd2FybmluZyBpZiB0aGUgY29uZGl0aW9uIGlzIG5vdCBtZXQuXG4gKiBUaGlzIGNhbiBiZSB1c2VkIHRvIGxvZyBpc3N1ZXMgaW4gZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnRzIGluIGNyaXRpY2FsXG4gKiBwYXRocy4gUmVtb3ZpbmcgdGhlIGxvZ2dpbmcgY29kZSBmb3IgcHJvZHVjdGlvbiBlbnZpcm9ubWVudHMgd2lsbCBrZWVwIHRoZVxuICogc2FtZSBsb2dpYyBhbmQgZm9sbG93IHRoZSBzYW1lIGNvZGUgcGF0aHMuXG4gKi9cblxudmFyIHdhcm5pbmcgPSBmdW5jdGlvbigpIHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB3YXJuaW5nID0gZnVuY3Rpb24oY29uZGl0aW9uLCBmb3JtYXQsIGFyZ3MpIHtcbiAgICB2YXIgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICBhcmdzID0gbmV3IEFycmF5KGxlbiA+IDIgPyBsZW4gLSAyIDogMCk7XG4gICAgZm9yICh2YXIga2V5ID0gMjsga2V5IDwgbGVuOyBrZXkrKykge1xuICAgICAgYXJnc1trZXkgLSAyXSA9IGFyZ3VtZW50c1trZXldO1xuICAgIH1cbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ2B3YXJuaW5nKGNvbmRpdGlvbiwgZm9ybWF0LCAuLi5hcmdzKWAgcmVxdWlyZXMgYSB3YXJuaW5nICcgK1xuICAgICAgICAnbWVzc2FnZSBhcmd1bWVudCdcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKGZvcm1hdC5sZW5ndGggPCAxMCB8fCAoL15bc1xcV10qJC8pLnRlc3QoZm9ybWF0KSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAnVGhlIHdhcm5pbmcgZm9ybWF0IHNob3VsZCBiZSBhYmxlIHRvIHVuaXF1ZWx5IGlkZW50aWZ5IHRoaXMgJyArXG4gICAgICAgICd3YXJuaW5nLiBQbGVhc2UsIHVzZSBhIG1vcmUgZGVzY3JpcHRpdmUgZm9ybWF0IHRoYW46ICcgKyBmb3JtYXRcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKCFjb25kaXRpb24pIHtcbiAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICB2YXIgbWVzc2FnZSA9ICdXYXJuaW5nOiAnICtcbiAgICAgICAgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHJldHVybiBhcmdzW2FyZ0luZGV4KytdO1xuICAgICAgICB9KTtcbiAgICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgICAgIH1cbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgeW91IGNhbiB1c2UgdGhpcyBzdGFja1xuICAgICAgICAvLyB0byBmaW5kIHRoZSBjYWxsc2l0ZSB0aGF0IGNhdXNlZCB0aGlzIHdhcm5pbmcgdG8gZmlyZS5cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgICAgfSBjYXRjaCh4KSB7fVxuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB3YXJuaW5nO1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogVXNlIGludmFyaWFudCgpIHRvIGFzc2VydCBzdGF0ZSB3aGljaCB5b3VyIHByb2dyYW0gYXNzdW1lcyB0byBiZSB0cnVlLlxuICpcbiAqIFByb3ZpZGUgc3ByaW50Zi1zdHlsZSBmb3JtYXQgKG9ubHkgJXMgaXMgc3VwcG9ydGVkKSBhbmQgYXJndW1lbnRzXG4gKiB0byBwcm92aWRlIGluZm9ybWF0aW9uIGFib3V0IHdoYXQgYnJva2UgYW5kIHdoYXQgeW91IHdlcmVcbiAqIGV4cGVjdGluZy5cbiAqXG4gKiBUaGUgaW52YXJpYW50IG1lc3NhZ2Ugd2lsbCBiZSBzdHJpcHBlZCBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGludmFyaWFudFxuICogd2lsbCByZW1haW4gdG8gZW5zdXJlIGxvZ2ljIGRvZXMgbm90IGRpZmZlciBpbiBwcm9kdWN0aW9uLlxuICovXG5cbnZhciBpbnZhcmlhbnQgPSBmdW5jdGlvbihjb25kaXRpb24sIGZvcm1hdCwgYSwgYiwgYywgZCwgZSwgZikge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhcmlhbnQgcmVxdWlyZXMgYW4gZXJyb3IgbWVzc2FnZSBhcmd1bWVudCcpO1xuICAgIH1cbiAgfVxuXG4gIGlmICghY29uZGl0aW9uKSB7XG4gICAgdmFyIGVycm9yO1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoXG4gICAgICAgICdNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCAnICtcbiAgICAgICAgJ2ZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuJ1xuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFyZ3MgPSBbYSwgYiwgYywgZCwgZSwgZl07XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoXG4gICAgICAgIGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbigpIHsgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107IH0pXG4gICAgICApO1xuICAgICAgZXJyb3IubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB9XG5cbiAgICBlcnJvci5mcmFtZXNUb1BvcCA9IDE7IC8vIHdlIGRvbid0IGNhcmUgYWJvdXQgaW52YXJpYW50J3Mgb3duIGZyYW1lXG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gaW52YXJpYW50O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAcHJvdmlkZXNNb2R1bGUgd2FybmluZ1xuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBTaW1pbGFyIHRvIGludmFyaWFudCBidXQgb25seSBsb2dzIGEgd2FybmluZyBpZiB0aGUgY29uZGl0aW9uIGlzIG5vdCBtZXQuXG4gKiBUaGlzIGNhbiBiZSB1c2VkIHRvIGxvZyBpc3N1ZXMgaW4gZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnRzIGluIGNyaXRpY2FsXG4gKiBwYXRocy4gUmVtb3ZpbmcgdGhlIGxvZ2dpbmcgY29kZSBmb3IgcHJvZHVjdGlvbiBlbnZpcm9ubWVudHMgd2lsbCBrZWVwIHRoZVxuICogc2FtZSBsb2dpYyBhbmQgZm9sbG93IHRoZSBzYW1lIGNvZGUgcGF0aHMuXG4gKi9cblxudmFyIF9fREVWX18gPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nO1xuXG52YXIgd2FybmluZyA9IGZ1bmN0aW9uKCkge307XG5cbmlmIChfX0RFVl9fKSB7XG4gIHZhciBwcmludFdhcm5pbmcgPSBmdW5jdGlvbiBwcmludFdhcm5pbmcoZm9ybWF0LCBhcmdzKSB7XG4gICAgdmFyIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgYXJncyA9IG5ldyBBcnJheShsZW4gPiAyID8gbGVuIC0gMiA6IDApO1xuICAgIGZvciAodmFyIGtleSA9IDI7IGtleSA8IGxlbjsga2V5KyspIHtcbiAgICAgIGFyZ3Nba2V5IC0gMl0gPSBhcmd1bWVudHNba2V5XTtcbiAgICB9XG4gICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICB2YXIgbWVzc2FnZSA9ICdXYXJuaW5nOiAnICtcbiAgICAgIGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107XG4gICAgICB9KTtcbiAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb25zb2xlLmVycm9yKG1lc3NhZ2UpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgLy8gLS0tIFdlbGNvbWUgdG8gZGVidWdnaW5nIFJlYWN0IC0tLVxuICAgICAgLy8gVGhpcyBlcnJvciB3YXMgdGhyb3duIGFzIGEgY29udmVuaWVuY2Ugc28gdGhhdCB5b3UgY2FuIHVzZSB0aGlzIHN0YWNrXG4gICAgICAvLyB0byBmaW5kIHRoZSBjYWxsc2l0ZSB0aGF0IGNhdXNlZCB0aGlzIHdhcm5pbmcgdG8gZmlyZS5cbiAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICB9IGNhdGNoICh4KSB7fVxuICB9XG5cbiAgd2FybmluZyA9IGZ1bmN0aW9uKGNvbmRpdGlvbiwgZm9ybWF0LCBhcmdzKSB7XG4gICAgdmFyIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgYXJncyA9IG5ldyBBcnJheShsZW4gPiAyID8gbGVuIC0gMiA6IDApO1xuICAgIGZvciAodmFyIGtleSA9IDI7IGtleSA8IGxlbjsga2V5KyspIHtcbiAgICAgIGFyZ3Nba2V5IC0gMl0gPSBhcmd1bWVudHNba2V5XTtcbiAgICB9XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgJ2B3YXJuaW5nKGNvbmRpdGlvbiwgZm9ybWF0LCAuLi5hcmdzKWAgcmVxdWlyZXMgYSB3YXJuaW5nICcgK1xuICAgICAgICAgICdtZXNzYWdlIGFyZ3VtZW50J1xuICAgICAgKTtcbiAgICB9XG4gICAgaWYgKCFjb25kaXRpb24pIHtcbiAgICAgIHByaW50V2FybmluZy5hcHBseShudWxsLCBbZm9ybWF0XS5jb25jYXQoYXJncykpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB3YXJuaW5nO1xuIiwidmFyIGlzYXJyYXkgPSByZXF1aXJlKCdpc2FycmF5JylcblxuLyoqXG4gKiBFeHBvc2UgYHBhdGhUb1JlZ2V4cGAuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gcGF0aFRvUmVnZXhwXG5tb2R1bGUuZXhwb3J0cy5wYXJzZSA9IHBhcnNlXG5tb2R1bGUuZXhwb3J0cy5jb21waWxlID0gY29tcGlsZVxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9GdW5jdGlvbiA9IHRva2Vuc1RvRnVuY3Rpb25cbm1vZHVsZS5leHBvcnRzLnRva2Vuc1RvUmVnRXhwID0gdG9rZW5zVG9SZWdFeHBcblxuLyoqXG4gKiBUaGUgbWFpbiBwYXRoIG1hdGNoaW5nIHJlZ2V4cCB1dGlsaXR5LlxuICpcbiAqIEB0eXBlIHtSZWdFeHB9XG4gKi9cbnZhciBQQVRIX1JFR0VYUCA9IG5ldyBSZWdFeHAoW1xuICAvLyBNYXRjaCBlc2NhcGVkIGNoYXJhY3RlcnMgdGhhdCB3b3VsZCBvdGhlcndpc2UgYXBwZWFyIGluIGZ1dHVyZSBtYXRjaGVzLlxuICAvLyBUaGlzIGFsbG93cyB0aGUgdXNlciB0byBlc2NhcGUgc3BlY2lhbCBjaGFyYWN0ZXJzIHRoYXQgd29uJ3QgdHJhbnNmb3JtLlxuICAnKFxcXFxcXFxcLiknLFxuICAvLyBNYXRjaCBFeHByZXNzLXN0eWxlIHBhcmFtZXRlcnMgYW5kIHVuLW5hbWVkIHBhcmFtZXRlcnMgd2l0aCBhIHByZWZpeFxuICAvLyBhbmQgb3B0aW9uYWwgc3VmZml4ZXMuIE1hdGNoZXMgYXBwZWFyIGFzOlxuICAvL1xuICAvLyBcIi86dGVzdChcXFxcZCspP1wiID0+IFtcIi9cIiwgXCJ0ZXN0XCIsIFwiXFxkK1wiLCB1bmRlZmluZWQsIFwiP1wiLCB1bmRlZmluZWRdXG4gIC8vIFwiL3JvdXRlKFxcXFxkKylcIiAgPT4gW3VuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFwiXFxkK1wiLCB1bmRlZmluZWQsIHVuZGVmaW5lZF1cbiAgLy8gXCIvKlwiICAgICAgICAgICAgPT4gW1wiL1wiLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFwiKlwiXVxuICAnKFtcXFxcLy5dKT8oPzooPzpcXFxcOihcXFxcdyspKD86XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSk/fFxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpKFsrKj9dKT98KFxcXFwqKSknXG5dLmpvaW4oJ3wnKSwgJ2cnKVxuXG4vKipcbiAqIFBhcnNlIGEgc3RyaW5nIGZvciB0aGUgcmF3IHRva2Vucy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBzdHJcbiAqIEBwYXJhbSAge09iamVjdD19IG9wdGlvbnNcbiAqIEByZXR1cm4geyFBcnJheX1cbiAqL1xuZnVuY3Rpb24gcGFyc2UgKHN0ciwgb3B0aW9ucykge1xuICB2YXIgdG9rZW5zID0gW11cbiAgdmFyIGtleSA9IDBcbiAgdmFyIGluZGV4ID0gMFxuICB2YXIgcGF0aCA9ICcnXG4gIHZhciBkZWZhdWx0RGVsaW1pdGVyID0gb3B0aW9ucyAmJiBvcHRpb25zLmRlbGltaXRlciB8fCAnLydcbiAgdmFyIHJlc1xuXG4gIHdoaWxlICgocmVzID0gUEFUSF9SRUdFWFAuZXhlYyhzdHIpKSAhPSBudWxsKSB7XG4gICAgdmFyIG0gPSByZXNbMF1cbiAgICB2YXIgZXNjYXBlZCA9IHJlc1sxXVxuICAgIHZhciBvZmZzZXQgPSByZXMuaW5kZXhcbiAgICBwYXRoICs9IHN0ci5zbGljZShpbmRleCwgb2Zmc2V0KVxuICAgIGluZGV4ID0gb2Zmc2V0ICsgbS5sZW5ndGhcblxuICAgIC8vIElnbm9yZSBhbHJlYWR5IGVzY2FwZWQgc2VxdWVuY2VzLlxuICAgIGlmIChlc2NhcGVkKSB7XG4gICAgICBwYXRoICs9IGVzY2FwZWRbMV1cbiAgICAgIGNvbnRpbnVlXG4gICAgfVxuXG4gICAgdmFyIG5leHQgPSBzdHJbaW5kZXhdXG4gICAgdmFyIHByZWZpeCA9IHJlc1syXVxuICAgIHZhciBuYW1lID0gcmVzWzNdXG4gICAgdmFyIGNhcHR1cmUgPSByZXNbNF1cbiAgICB2YXIgZ3JvdXAgPSByZXNbNV1cbiAgICB2YXIgbW9kaWZpZXIgPSByZXNbNl1cbiAgICB2YXIgYXN0ZXJpc2sgPSByZXNbN11cblxuICAgIC8vIFB1c2ggdGhlIGN1cnJlbnQgcGF0aCBvbnRvIHRoZSB0b2tlbnMuXG4gICAgaWYgKHBhdGgpIHtcbiAgICAgIHRva2Vucy5wdXNoKHBhdGgpXG4gICAgICBwYXRoID0gJydcbiAgICB9XG5cbiAgICB2YXIgcGFydGlhbCA9IHByZWZpeCAhPSBudWxsICYmIG5leHQgIT0gbnVsbCAmJiBuZXh0ICE9PSBwcmVmaXhcbiAgICB2YXIgcmVwZWF0ID0gbW9kaWZpZXIgPT09ICcrJyB8fCBtb2RpZmllciA9PT0gJyonXG4gICAgdmFyIG9wdGlvbmFsID0gbW9kaWZpZXIgPT09ICc/JyB8fCBtb2RpZmllciA9PT0gJyonXG4gICAgdmFyIGRlbGltaXRlciA9IHJlc1syXSB8fCBkZWZhdWx0RGVsaW1pdGVyXG4gICAgdmFyIHBhdHRlcm4gPSBjYXB0dXJlIHx8IGdyb3VwXG5cbiAgICB0b2tlbnMucHVzaCh7XG4gICAgICBuYW1lOiBuYW1lIHx8IGtleSsrLFxuICAgICAgcHJlZml4OiBwcmVmaXggfHwgJycsXG4gICAgICBkZWxpbWl0ZXI6IGRlbGltaXRlcixcbiAgICAgIG9wdGlvbmFsOiBvcHRpb25hbCxcbiAgICAgIHJlcGVhdDogcmVwZWF0LFxuICAgICAgcGFydGlhbDogcGFydGlhbCxcbiAgICAgIGFzdGVyaXNrOiAhIWFzdGVyaXNrLFxuICAgICAgcGF0dGVybjogcGF0dGVybiA/IGVzY2FwZUdyb3VwKHBhdHRlcm4pIDogKGFzdGVyaXNrID8gJy4qJyA6ICdbXicgKyBlc2NhcGVTdHJpbmcoZGVsaW1pdGVyKSArICddKz8nKVxuICAgIH0pXG4gIH1cblxuICAvLyBNYXRjaCBhbnkgY2hhcmFjdGVycyBzdGlsbCByZW1haW5pbmcuXG4gIGlmIChpbmRleCA8IHN0ci5sZW5ndGgpIHtcbiAgICBwYXRoICs9IHN0ci5zdWJzdHIoaW5kZXgpXG4gIH1cblxuICAvLyBJZiB0aGUgcGF0aCBleGlzdHMsIHB1c2ggaXQgb250byB0aGUgZW5kLlxuICBpZiAocGF0aCkge1xuICAgIHRva2Vucy5wdXNoKHBhdGgpXG4gIH1cblxuICByZXR1cm4gdG9rZW5zXG59XG5cbi8qKlxuICogQ29tcGlsZSBhIHN0cmluZyB0byBhIHRlbXBsYXRlIGZ1bmN0aW9uIGZvciB0aGUgcGF0aC5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICAgICAgICAgICAgIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshZnVuY3Rpb24oT2JqZWN0PSwgT2JqZWN0PSl9XG4gKi9cbmZ1bmN0aW9uIGNvbXBpbGUgKHN0ciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9rZW5zVG9GdW5jdGlvbihwYXJzZShzdHIsIG9wdGlvbnMpKVxufVxuXG4vKipcbiAqIFByZXR0aWVyIGVuY29kaW5nIG9mIFVSSSBwYXRoIHNlZ21lbnRzLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ31cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IChzdHIpIHtcbiAgcmV0dXJuIGVuY29kZVVSSShzdHIpLnJlcGxhY2UoL1tcXC8/I10vZywgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gJyUnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpXG4gIH0pXG59XG5cbi8qKlxuICogRW5jb2RlIHRoZSBhc3RlcmlzayBwYXJhbWV0ZXIuIFNpbWlsYXIgdG8gYHByZXR0eWAsIGJ1dCBhbGxvd3Mgc2xhc2hlcy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVuY29kZUFzdGVyaXNrIChzdHIpIHtcbiAgcmV0dXJuIGVuY29kZVVSSShzdHIpLnJlcGxhY2UoL1s/I10vZywgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gJyUnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpXG4gIH0pXG59XG5cbi8qKlxuICogRXhwb3NlIGEgbWV0aG9kIGZvciB0cmFuc2Zvcm1pbmcgdG9rZW5zIGludG8gdGhlIHBhdGggZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIHRva2Vuc1RvRnVuY3Rpb24gKHRva2Vucykge1xuICAvLyBDb21waWxlIGFsbCB0aGUgdG9rZW5zIGludG8gcmVnZXhwcy5cbiAgdmFyIG1hdGNoZXMgPSBuZXcgQXJyYXkodG9rZW5zLmxlbmd0aClcblxuICAvLyBDb21waWxlIGFsbCB0aGUgcGF0dGVybnMgYmVmb3JlIGNvbXBpbGF0aW9uLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgIGlmICh0eXBlb2YgdG9rZW5zW2ldID09PSAnb2JqZWN0Jykge1xuICAgICAgbWF0Y2hlc1tpXSA9IG5ldyBSZWdFeHAoJ14oPzonICsgdG9rZW5zW2ldLnBhdHRlcm4gKyAnKSQnKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAob2JqLCBvcHRzKSB7XG4gICAgdmFyIHBhdGggPSAnJ1xuICAgIHZhciBkYXRhID0gb2JqIHx8IHt9XG4gICAgdmFyIG9wdGlvbnMgPSBvcHRzIHx8IHt9XG4gICAgdmFyIGVuY29kZSA9IG9wdGlvbnMucHJldHR5ID8gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IDogZW5jb2RlVVJJQ29tcG9uZW50XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG5cbiAgICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHBhdGggKz0gdG9rZW5cblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICB2YXIgdmFsdWUgPSBkYXRhW3Rva2VuLm5hbWVdXG4gICAgICB2YXIgc2VnbWVudFxuXG4gICAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAvLyBQcmVwZW5kIHBhcnRpYWwgc2VnbWVudCBwcmVmaXhlcy5cbiAgICAgICAgICBpZiAodG9rZW4ucGFydGlhbCkge1xuICAgICAgICAgICAgcGF0aCArPSB0b2tlbi5wcmVmaXhcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gYmUgZGVmaW5lZCcpXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGlzYXJyYXkodmFsdWUpKSB7XG4gICAgICAgIGlmICghdG9rZW4ucmVwZWF0KSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBub3QgcmVwZWF0LCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeSh2YWx1ZSkgKyAnYCcpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAodmFsdWUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCBiZSBlbXB0eScpXG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB2YWx1ZS5sZW5ndGg7IGorKykge1xuICAgICAgICAgIHNlZ21lbnQgPSBlbmNvZGUodmFsdWVbal0pXG5cbiAgICAgICAgICBpZiAoIW1hdGNoZXNbaV0udGVzdChzZWdtZW50KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgYWxsIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIGAnICsgSlNPTi5zdHJpbmdpZnkoc2VnbWVudCkgKyAnYCcpXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcGF0aCArPSAoaiA9PT0gMCA/IHRva2VuLnByZWZpeCA6IHRva2VuLmRlbGltaXRlcikgKyBzZWdtZW50XG4gICAgICAgIH1cblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICBzZWdtZW50ID0gdG9rZW4uYXN0ZXJpc2sgPyBlbmNvZGVBc3Rlcmlzayh2YWx1ZSkgOiBlbmNvZGUodmFsdWUpXG5cbiAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIFwiJyArIHNlZ21lbnQgKyAnXCInKVxuICAgICAgfVxuXG4gICAgICBwYXRoICs9IHRva2VuLnByZWZpeCArIHNlZ21lbnRcbiAgICB9XG5cbiAgICByZXR1cm4gcGF0aFxuICB9XG59XG5cbi8qKlxuICogRXNjYXBlIGEgcmVndWxhciBleHByZXNzaW9uIHN0cmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IHN0clxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlc2NhcGVTdHJpbmcgKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoLyhbLisqPz1eIToke30oKVtcXF18XFwvXFxcXF0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEVzY2FwZSB0aGUgY2FwdHVyaW5nIGdyb3VwIGJ5IGVzY2FwaW5nIHNwZWNpYWwgY2hhcmFjdGVycyBhbmQgbWVhbmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IGdyb3VwXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZUdyb3VwIChncm91cCkge1xuICByZXR1cm4gZ3JvdXAucmVwbGFjZSgvKFs9ITokXFwvKCldKS9nLCAnXFxcXCQxJylcbn1cblxuLyoqXG4gKiBBdHRhY2ggdGhlIGtleXMgYXMgYSBwcm9wZXJ0eSBvZiB0aGUgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHJlXG4gKiBAcGFyYW0gIHtBcnJheX0gICBrZXlzXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBhdHRhY2hLZXlzIChyZSwga2V5cykge1xuICByZS5rZXlzID0ga2V5c1xuICByZXR1cm4gcmVcbn1cblxuLyoqXG4gKiBHZXQgdGhlIGZsYWdzIGZvciBhIHJlZ2V4cCBmcm9tIHRoZSBvcHRpb25zLlxuICpcbiAqIEBwYXJhbSAge09iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBmbGFncyAob3B0aW9ucykge1xuICByZXR1cm4gb3B0aW9ucy5zZW5zaXRpdmUgPyAnJyA6ICdpJ1xufVxuXG4vKipcbiAqIFB1bGwgb3V0IGtleXMgZnJvbSBhIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshUmVnRXhwfSBwYXRoXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBrZXlzXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiByZWdleHBUb1JlZ2V4cCAocGF0aCwga2V5cykge1xuICAvLyBVc2UgYSBuZWdhdGl2ZSBsb29rYWhlYWQgdG8gbWF0Y2ggb25seSBjYXB0dXJpbmcgZ3JvdXBzLlxuICB2YXIgZ3JvdXBzID0gcGF0aC5zb3VyY2UubWF0Y2goL1xcKCg/IVxcPykvZylcblxuICBpZiAoZ3JvdXBzKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBncm91cHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGtleXMucHVzaCh7XG4gICAgICAgIG5hbWU6IGksXG4gICAgICAgIHByZWZpeDogbnVsbCxcbiAgICAgICAgZGVsaW1pdGVyOiBudWxsLFxuICAgICAgICBvcHRpb25hbDogZmFsc2UsXG4gICAgICAgIHJlcGVhdDogZmFsc2UsXG4gICAgICAgIHBhcnRpYWw6IGZhbHNlLFxuICAgICAgICBhc3RlcmlzazogZmFsc2UsXG4gICAgICAgIHBhdHRlcm46IG51bGxcbiAgICAgIH0pXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGF0dGFjaEtleXMocGF0aCwga2V5cylcbn1cblxuLyoqXG4gKiBUcmFuc2Zvcm0gYW4gYXJyYXkgaW50byBhIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBwYXRoXG4gKiBAcGFyYW0gIHtBcnJheX0gICBrZXlzXG4gKiBAcGFyYW0gIHshT2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBhcnJheVRvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIHZhciBwYXJ0cyA9IFtdXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXRoLmxlbmd0aDsgaSsrKSB7XG4gICAgcGFydHMucHVzaChwYXRoVG9SZWdleHAocGF0aFtpXSwga2V5cywgb3B0aW9ucykuc291cmNlKVxuICB9XG5cbiAgdmFyIHJlZ2V4cCA9IG5ldyBSZWdFeHAoJyg/OicgKyBwYXJ0cy5qb2luKCd8JykgKyAnKScsIGZsYWdzKG9wdGlvbnMpKVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKHJlZ2V4cCwga2V5cylcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBwYXRoIHJlZ2V4cCBmcm9tIHN0cmluZyBpbnB1dC5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBwYXRoXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBrZXlzXG4gKiBAcGFyYW0gIHshT2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBzdHJpbmdUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICByZXR1cm4gdG9rZW5zVG9SZWdFeHAocGFyc2UocGF0aCwgb3B0aW9ucyksIGtleXMsIG9wdGlvbnMpXG59XG5cbi8qKlxuICogRXhwb3NlIGEgZnVuY3Rpb24gZm9yIHRha2luZyB0b2tlbnMgYW5kIHJldHVybmluZyBhIFJlZ0V4cC5cbiAqXG4gKiBAcGFyYW0gIHshQXJyYXl9ICAgICAgICAgIHRva2Vuc1xuICogQHBhcmFtICB7KEFycmF5fE9iamVjdCk9fSBrZXlzXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHRva2Vuc1RvUmVnRXhwICh0b2tlbnMsIGtleXMsIG9wdGlvbnMpIHtcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XG4gICAgb3B0aW9ucyA9IC8qKiBAdHlwZSB7IU9iamVjdH0gKi8gKGtleXMgfHwgb3B0aW9ucylcbiAgICBrZXlzID0gW11cbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgdmFyIHN0cmljdCA9IG9wdGlvbnMuc3RyaWN0XG4gIHZhciBlbmQgPSBvcHRpb25zLmVuZCAhPT0gZmFsc2VcbiAgdmFyIHJvdXRlID0gJydcblxuICAvLyBJdGVyYXRlIG92ZXIgdGhlIHRva2VucyBhbmQgY3JlYXRlIG91ciByZWdleHAgc3RyaW5nLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgIHZhciB0b2tlbiA9IHRva2Vuc1tpXVxuXG4gICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHJvdXRlICs9IGVzY2FwZVN0cmluZyh0b2tlbilcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHByZWZpeCA9IGVzY2FwZVN0cmluZyh0b2tlbi5wcmVmaXgpXG4gICAgICB2YXIgY2FwdHVyZSA9ICcoPzonICsgdG9rZW4ucGF0dGVybiArICcpJ1xuXG4gICAgICBrZXlzLnB1c2godG9rZW4pXG5cbiAgICAgIGlmICh0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgY2FwdHVyZSArPSAnKD86JyArIHByZWZpeCArIGNhcHR1cmUgKyAnKSonXG4gICAgICB9XG5cbiAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICBpZiAoIXRva2VuLnBhcnRpYWwpIHtcbiAgICAgICAgICBjYXB0dXJlID0gJyg/OicgKyBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJykpPydcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjYXB0dXJlID0gcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpPydcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2FwdHVyZSA9IHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSdcbiAgICAgIH1cblxuICAgICAgcm91dGUgKz0gY2FwdHVyZVxuICAgIH1cbiAgfVxuXG4gIHZhciBkZWxpbWl0ZXIgPSBlc2NhcGVTdHJpbmcob3B0aW9ucy5kZWxpbWl0ZXIgfHwgJy8nKVxuICB2YXIgZW5kc1dpdGhEZWxpbWl0ZXIgPSByb3V0ZS5zbGljZSgtZGVsaW1pdGVyLmxlbmd0aCkgPT09IGRlbGltaXRlclxuXG4gIC8vIEluIG5vbi1zdHJpY3QgbW9kZSB3ZSBhbGxvdyBhIHNsYXNoIGF0IHRoZSBlbmQgb2YgbWF0Y2guIElmIHRoZSBwYXRoIHRvXG4gIC8vIG1hdGNoIGFscmVhZHkgZW5kcyB3aXRoIGEgc2xhc2gsIHdlIHJlbW92ZSBpdCBmb3IgY29uc2lzdGVuY3kuIFRoZSBzbGFzaFxuICAvLyBpcyB2YWxpZCBhdCB0aGUgZW5kIG9mIGEgcGF0aCBtYXRjaCwgbm90IGluIHRoZSBtaWRkbGUuIFRoaXMgaXMgaW1wb3J0YW50XG4gIC8vIGluIG5vbi1lbmRpbmcgbW9kZSwgd2hlcmUgXCIvdGVzdC9cIiBzaG91bGRuJ3QgbWF0Y2ggXCIvdGVzdC8vcm91dGVcIi5cbiAgaWYgKCFzdHJpY3QpIHtcbiAgICByb3V0ZSA9IChlbmRzV2l0aERlbGltaXRlciA/IHJvdXRlLnNsaWNlKDAsIC1kZWxpbWl0ZXIubGVuZ3RoKSA6IHJvdXRlKSArICcoPzonICsgZGVsaW1pdGVyICsgJyg/PSQpKT8nXG4gIH1cblxuICBpZiAoZW5kKSB7XG4gICAgcm91dGUgKz0gJyQnXG4gIH0gZWxzZSB7XG4gICAgLy8gSW4gbm9uLWVuZGluZyBtb2RlLCB3ZSBuZWVkIHRoZSBjYXB0dXJpbmcgZ3JvdXBzIHRvIG1hdGNoIGFzIG11Y2ggYXNcbiAgICAvLyBwb3NzaWJsZSBieSB1c2luZyBhIHBvc2l0aXZlIGxvb2thaGVhZCB0byB0aGUgZW5kIG9yIG5leHQgcGF0aCBzZWdtZW50LlxuICAgIHJvdXRlICs9IHN0cmljdCAmJiBlbmRzV2l0aERlbGltaXRlciA/ICcnIDogJyg/PScgKyBkZWxpbWl0ZXIgKyAnfCQpJ1xuICB9XG5cbiAgcmV0dXJuIGF0dGFjaEtleXMobmV3IFJlZ0V4cCgnXicgKyByb3V0ZSwgZmxhZ3Mob3B0aW9ucykpLCBrZXlzKVxufVxuXG4vKipcbiAqIE5vcm1hbGl6ZSB0aGUgZ2l2ZW4gcGF0aCBzdHJpbmcsIHJldHVybmluZyBhIHJlZ3VsYXIgZXhwcmVzc2lvbi5cbiAqXG4gKiBBbiBlbXB0eSBhcnJheSBjYW4gYmUgcGFzc2VkIGluIGZvciB0aGUga2V5cywgd2hpY2ggd2lsbCBob2xkIHRoZVxuICogcGxhY2Vob2xkZXIga2V5IGRlc2NyaXB0aW9ucy4gRm9yIGV4YW1wbGUsIHVzaW5nIGAvdXNlci86aWRgLCBga2V5c2Agd2lsbFxuICogY29udGFpbiBgW3sgbmFtZTogJ2lkJywgZGVsaW1pdGVyOiAnLycsIG9wdGlvbmFsOiBmYWxzZSwgcmVwZWF0OiBmYWxzZSB9XWAuXG4gKlxuICogQHBhcmFtICB7KHN0cmluZ3xSZWdFeHB8QXJyYXkpfSBwYXRoXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19ICAgICAgIGtleXNcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gcGF0aFRvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIGlmICghaXNhcnJheShrZXlzKSkge1xuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpXG4gICAga2V5cyA9IFtdXG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuXG4gIGlmIChwYXRoIGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgcmV0dXJuIHJlZ2V4cFRvUmVnZXhwKHBhdGgsIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cykpXG4gIH1cblxuICBpZiAoaXNhcnJheShwYXRoKSkge1xuICAgIHJldHVybiBhcnJheVRvUmVnZXhwKC8qKiBAdHlwZSB7IUFycmF5fSAqLyAocGF0aCksIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cyksIG9wdGlvbnMpXG4gIH1cblxuICByZXR1cm4gc3RyaW5nVG9SZWdleHAoLyoqIEB0eXBlIHtzdHJpbmd9ICovIChwYXRoKSwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSwgb3B0aW9ucylcbn1cbiIsIi8qXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5cbnZhciBzdHlsZXNJbkRvbSA9IHt9O1xuXG52YXJcdG1lbW9pemUgPSBmdW5jdGlvbiAoZm4pIHtcblx0dmFyIG1lbW87XG5cblx0cmV0dXJuIGZ1bmN0aW9uICgpIHtcblx0XHRpZiAodHlwZW9mIG1lbW8gPT09IFwidW5kZWZpbmVkXCIpIG1lbW8gPSBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXHRcdHJldHVybiBtZW1vO1xuXHR9O1xufTtcblxudmFyIGlzT2xkSUUgPSBtZW1vaXplKGZ1bmN0aW9uICgpIHtcblx0Ly8gVGVzdCBmb3IgSUUgPD0gOSBhcyBwcm9wb3NlZCBieSBCcm93c2VyaGFja3Ncblx0Ly8gQHNlZSBodHRwOi8vYnJvd3NlcmhhY2tzLmNvbS8jaGFjay1lNzFkODY5MmY2NTMzNDE3M2ZlZTcxNWMyMjJjYjgwNVxuXHQvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG5cdC8vIHRvIG9wZXJhdGUgY29ycmVjdGx5IGludG8gbm9uLXN0YW5kYXJkIGVudmlyb25tZW50c1xuXHQvLyBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyL2lzc3Vlcy8xNzdcblx0cmV0dXJuIHdpbmRvdyAmJiBkb2N1bWVudCAmJiBkb2N1bWVudC5hbGwgJiYgIXdpbmRvdy5hdG9iO1xufSk7XG5cbnZhciBnZXRUYXJnZXQgPSBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG59O1xuXG52YXIgZ2V0RWxlbWVudCA9IChmdW5jdGlvbiAoZm4pIHtcblx0dmFyIG1lbW8gPSB7fTtcblxuXHRyZXR1cm4gZnVuY3Rpb24odGFyZ2V0KSB7XG4gICAgICAgICAgICAgICAgLy8gSWYgcGFzc2luZyBmdW5jdGlvbiBpbiBvcHRpb25zLCB0aGVuIHVzZSBpdCBmb3IgcmVzb2x2ZSBcImhlYWRcIiBlbGVtZW50LlxuICAgICAgICAgICAgICAgIC8vIFVzZWZ1bCBmb3IgU2hhZG93IFJvb3Qgc3R5bGUgaS5lXG4gICAgICAgICAgICAgICAgLy8ge1xuICAgICAgICAgICAgICAgIC8vICAgaW5zZXJ0SW50bzogZnVuY3Rpb24gKCkgeyByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNmb29cIikuc2hhZG93Um9vdCB9XG4gICAgICAgICAgICAgICAgLy8gfVxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdGFyZ2V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGFyZ2V0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG5cdFx0XHR2YXIgc3R5bGVUYXJnZXQgPSBnZXRUYXJnZXQuY2FsbCh0aGlzLCB0YXJnZXQpO1xuXHRcdFx0Ly8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblx0XHRcdGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHQvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuXHRcdFx0XHRcdC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcblx0XHRcdFx0fSBjYXRjaChlKSB7XG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBudWxsO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcblx0XHR9XG5cdFx0cmV0dXJuIG1lbW9bdGFyZ2V0XVxuXHR9O1xufSkoKTtcblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXJcdHNpbmdsZXRvbkNvdW50ZXIgPSAwO1xudmFyXHRzdHlsZXNJbnNlcnRlZEF0VG9wID0gW107XG5cbnZhclx0Zml4VXJscyA9IHJlcXVpcmUoXCIuL3VybHNcIik7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obGlzdCwgb3B0aW9ucykge1xuXHRpZiAodHlwZW9mIERFQlVHICE9PSBcInVuZGVmaW5lZFwiICYmIERFQlVHKSB7XG5cdFx0aWYgKHR5cGVvZiBkb2N1bWVudCAhPT0gXCJvYmplY3RcIikgdGhyb3cgbmV3IEVycm9yKFwiVGhlIHN0eWxlLWxvYWRlciBjYW5ub3QgYmUgdXNlZCBpbiBhIG5vbi1icm93c2VyIGVudmlyb25tZW50XCIpO1xuXHR9XG5cblx0b3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cblx0b3B0aW9ucy5hdHRycyA9IHR5cGVvZiBvcHRpb25zLmF0dHJzID09PSBcIm9iamVjdFwiID8gb3B0aW9ucy5hdHRycyA6IHt9O1xuXG5cdC8vIEZvcmNlIHNpbmdsZS10YWcgc29sdXRpb24gb24gSUU2LTksIHdoaWNoIGhhcyBhIGhhcmQgbGltaXQgb24gdGhlICMgb2YgPHN0eWxlPlxuXHQvLyB0YWdzIGl0IHdpbGwgYWxsb3cgb24gYSBwYWdlXG5cdGlmICghb3B0aW9ucy5zaW5nbGV0b24gJiYgdHlwZW9mIG9wdGlvbnMuc2luZ2xldG9uICE9PSBcImJvb2xlYW5cIikgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG5cblx0Ly8gQnkgZGVmYXVsdCwgYWRkIDxzdHlsZT4gdGFncyB0byB0aGUgPGhlYWQ+IGVsZW1lbnRcbiAgICAgICAgaWYgKCFvcHRpb25zLmluc2VydEludG8pIG9wdGlvbnMuaW5zZXJ0SW50byA9IFwiaGVhZFwiO1xuXG5cdC8vIEJ5IGRlZmF1bHQsIGFkZCA8c3R5bGU+IHRhZ3MgdG8gdGhlIGJvdHRvbSBvZiB0aGUgdGFyZ2V0XG5cdGlmICghb3B0aW9ucy5pbnNlcnRBdCkgb3B0aW9ucy5pbnNlcnRBdCA9IFwiYm90dG9tXCI7XG5cblx0dmFyIHN0eWxlcyA9IGxpc3RUb1N0eWxlcyhsaXN0LCBvcHRpb25zKTtcblxuXHRhZGRTdHlsZXNUb0RvbShzdHlsZXMsIG9wdGlvbnMpO1xuXG5cdHJldHVybiBmdW5jdGlvbiB1cGRhdGUgKG5ld0xpc3QpIHtcblx0XHR2YXIgbWF5UmVtb3ZlID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XG5cdFx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcblxuXHRcdFx0ZG9tU3R5bGUucmVmcy0tO1xuXHRcdFx0bWF5UmVtb3ZlLnB1c2goZG9tU3R5bGUpO1xuXHRcdH1cblxuXHRcdGlmKG5ld0xpc3QpIHtcblx0XHRcdHZhciBuZXdTdHlsZXMgPSBsaXN0VG9TdHlsZXMobmV3TGlzdCwgb3B0aW9ucyk7XG5cdFx0XHRhZGRTdHlsZXNUb0RvbShuZXdTdHlsZXMsIG9wdGlvbnMpO1xuXHRcdH1cblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbWF5UmVtb3ZlLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgZG9tU3R5bGUgPSBtYXlSZW1vdmVbaV07XG5cblx0XHRcdGlmKGRvbVN0eWxlLnJlZnMgPT09IDApIHtcblx0XHRcdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykgZG9tU3R5bGUucGFydHNbal0oKTtcblxuXHRcdFx0XHRkZWxldGUgc3R5bGVzSW5Eb21bZG9tU3R5bGUuaWRdO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcbn07XG5cbmZ1bmN0aW9uIGFkZFN0eWxlc1RvRG9tIChzdHlsZXMsIG9wdGlvbnMpIHtcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgaXRlbSA9IHN0eWxlc1tpXTtcblx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcblxuXHRcdGlmKGRvbVN0eWxlKSB7XG5cdFx0XHRkb21TdHlsZS5yZWZzKys7XG5cblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRkb21TdHlsZS5wYXJ0c1tqXShpdGVtLnBhcnRzW2pdKTtcblx0XHRcdH1cblxuXHRcdFx0Zm9yKDsgaiA8IGl0ZW0ucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0ZG9tU3R5bGUucGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdHZhciBwYXJ0cyA9IFtdO1xuXG5cdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgaXRlbS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRwYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0sIG9wdGlvbnMpKTtcblx0XHRcdH1cblxuXHRcdFx0c3R5bGVzSW5Eb21baXRlbS5pZF0gPSB7aWQ6IGl0ZW0uaWQsIHJlZnM6IDEsIHBhcnRzOiBwYXJ0c307XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGxpc3RUb1N0eWxlcyAobGlzdCwgb3B0aW9ucykge1xuXHR2YXIgc3R5bGVzID0gW107XG5cdHZhciBuZXdTdHlsZXMgPSB7fTtcblxuXHRmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgaXRlbSA9IGxpc3RbaV07XG5cdFx0dmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG5cdFx0dmFyIGNzcyA9IGl0ZW1bMV07XG5cdFx0dmFyIG1lZGlhID0gaXRlbVsyXTtcblx0XHR2YXIgc291cmNlTWFwID0gaXRlbVszXTtcblx0XHR2YXIgcGFydCA9IHtjc3M6IGNzcywgbWVkaWE6IG1lZGlhLCBzb3VyY2VNYXA6IHNvdXJjZU1hcH07XG5cblx0XHRpZighbmV3U3R5bGVzW2lkXSkgc3R5bGVzLnB1c2gobmV3U3R5bGVzW2lkXSA9IHtpZDogaWQsIHBhcnRzOiBbcGFydF19KTtcblx0XHRlbHNlIG5ld1N0eWxlc1tpZF0ucGFydHMucHVzaChwYXJ0KTtcblx0fVxuXG5cdHJldHVybiBzdHlsZXM7XG59XG5cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudCAob3B0aW9ucywgc3R5bGUpIHtcblx0dmFyIHRhcmdldCA9IGdldEVsZW1lbnQob3B0aW9ucy5pbnNlcnRJbnRvKVxuXG5cdGlmICghdGFyZ2V0KSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnRJbnRvJyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG5cdH1cblxuXHR2YXIgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AgPSBzdHlsZXNJbnNlcnRlZEF0VG9wW3N0eWxlc0luc2VydGVkQXRUb3AubGVuZ3RoIC0gMV07XG5cblx0aWYgKG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwidG9wXCIpIHtcblx0XHRpZiAoIWxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wKSB7XG5cdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCB0YXJnZXQuZmlyc3RDaGlsZCk7XG5cdFx0fSBlbHNlIGlmIChsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcC5uZXh0U2libGluZykge1xuXHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AubmV4dFNpYmxpbmcpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXHRcdH1cblx0XHRzdHlsZXNJbnNlcnRlZEF0VG9wLnB1c2goc3R5bGUpO1xuXHR9IGVsc2UgaWYgKG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwiYm90dG9tXCIpIHtcblx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBvcHRpb25zLmluc2VydEF0ID09PSBcIm9iamVjdFwiICYmIG9wdGlvbnMuaW5zZXJ0QXQuYmVmb3JlKSB7XG5cdFx0dmFyIG5leHRTaWJsaW5nID0gZ2V0RWxlbWVudChvcHRpb25zLmluc2VydEludG8gKyBcIiBcIiArIG9wdGlvbnMuaW5zZXJ0QXQuYmVmb3JlKTtcblx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCBuZXh0U2libGluZyk7XG5cdH0gZWxzZSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiW1N0eWxlIExvYWRlcl1cXG5cXG4gSW52YWxpZCB2YWx1ZSBmb3IgcGFyYW1ldGVyICdpbnNlcnRBdCcgKCdvcHRpb25zLmluc2VydEF0JykgZm91bmQuXFxuIE11c3QgYmUgJ3RvcCcsICdib3R0b20nLCBvciBPYmplY3QuXFxuIChodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlciNpbnNlcnRhdClcXG5cIik7XG5cdH1cbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50IChzdHlsZSkge1xuXHRpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuXHRzdHlsZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlKTtcblxuXHR2YXIgaWR4ID0gc3R5bGVzSW5zZXJ0ZWRBdFRvcC5pbmRleE9mKHN0eWxlKTtcblx0aWYoaWR4ID49IDApIHtcblx0XHRzdHlsZXNJbnNlcnRlZEF0VG9wLnNwbGljZShpZHgsIDEpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVN0eWxlRWxlbWVudCAob3B0aW9ucykge1xuXHR2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG5cblx0aWYob3B0aW9ucy5hdHRycy50eXBlID09PSB1bmRlZmluZWQpIHtcblx0XHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cdH1cblxuXHRhZGRBdHRycyhzdHlsZSwgb3B0aW9ucy5hdHRycyk7XG5cdGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zLCBzdHlsZSk7XG5cblx0cmV0dXJuIHN0eWxlO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVMaW5rRWxlbWVudCAob3B0aW9ucykge1xuXHR2YXIgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIpO1xuXG5cdGlmKG9wdGlvbnMuYXR0cnMudHlwZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0b3B0aW9ucy5hdHRycy50eXBlID0gXCJ0ZXh0L2Nzc1wiO1xuXHR9XG5cdG9wdGlvbnMuYXR0cnMucmVsID0gXCJzdHlsZXNoZWV0XCI7XG5cblx0YWRkQXR0cnMobGluaywgb3B0aW9ucy5hdHRycyk7XG5cdGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zLCBsaW5rKTtcblxuXHRyZXR1cm4gbGluaztcbn1cblxuZnVuY3Rpb24gYWRkQXR0cnMgKGVsLCBhdHRycykge1xuXHRPYmplY3Qua2V5cyhhdHRycykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG5cdFx0ZWwuc2V0QXR0cmlidXRlKGtleSwgYXR0cnNba2V5XSk7XG5cdH0pO1xufVxuXG5mdW5jdGlvbiBhZGRTdHlsZSAob2JqLCBvcHRpb25zKSB7XG5cdHZhciBzdHlsZSwgdXBkYXRlLCByZW1vdmUsIHJlc3VsdDtcblxuXHQvLyBJZiBhIHRyYW5zZm9ybSBmdW5jdGlvbiB3YXMgZGVmaW5lZCwgcnVuIGl0IG9uIHRoZSBjc3Ncblx0aWYgKG9wdGlvbnMudHJhbnNmb3JtICYmIG9iai5jc3MpIHtcblx0ICAgIHJlc3VsdCA9IG9wdGlvbnMudHJhbnNmb3JtKG9iai5jc3MpO1xuXG5cdCAgICBpZiAocmVzdWx0KSB7XG5cdCAgICBcdC8vIElmIHRyYW5zZm9ybSByZXR1cm5zIGEgdmFsdWUsIHVzZSB0aGF0IGluc3RlYWQgb2YgdGhlIG9yaWdpbmFsIGNzcy5cblx0ICAgIFx0Ly8gVGhpcyBhbGxvd3MgcnVubmluZyBydW50aW1lIHRyYW5zZm9ybWF0aW9ucyBvbiB0aGUgY3NzLlxuXHQgICAgXHRvYmouY3NzID0gcmVzdWx0O1xuXHQgICAgfSBlbHNlIHtcblx0ICAgIFx0Ly8gSWYgdGhlIHRyYW5zZm9ybSBmdW5jdGlvbiByZXR1cm5zIGEgZmFsc3kgdmFsdWUsIGRvbid0IGFkZCB0aGlzIGNzcy5cblx0ICAgIFx0Ly8gVGhpcyBhbGxvd3MgY29uZGl0aW9uYWwgbG9hZGluZyBvZiBjc3Ncblx0ICAgIFx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHQgICAgXHRcdC8vIG5vb3Bcblx0ICAgIFx0fTtcblx0ICAgIH1cblx0fVxuXG5cdGlmIChvcHRpb25zLnNpbmdsZXRvbikge1xuXHRcdHZhciBzdHlsZUluZGV4ID0gc2luZ2xldG9uQ291bnRlcisrO1xuXG5cdFx0c3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKSk7XG5cblx0XHR1cGRhdGUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIGZhbHNlKTtcblx0XHRyZW1vdmUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIHRydWUpO1xuXG5cdH0gZWxzZSBpZiAoXG5cdFx0b2JqLnNvdXJjZU1hcCAmJlxuXHRcdHR5cGVvZiBVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwuY3JlYXRlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgVVJMLnJldm9rZU9iamVjdFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIEJsb2IgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCJcblx0KSB7XG5cdFx0c3R5bGUgPSBjcmVhdGVMaW5rRWxlbWVudChvcHRpb25zKTtcblx0XHR1cGRhdGUgPSB1cGRhdGVMaW5rLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG5cblx0XHRcdGlmKHN0eWxlLmhyZWYpIFVSTC5yZXZva2VPYmplY3RVUkwoc3R5bGUuaHJlZik7XG5cdFx0fTtcblx0fSBlbHNlIHtcblx0XHRzdHlsZSA9IGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKTtcblx0XHR1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUpO1xuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG5cdFx0fTtcblx0fVxuXG5cdHVwZGF0ZShvYmopO1xuXG5cdHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZSAobmV3T2JqKSB7XG5cdFx0aWYgKG5ld09iaikge1xuXHRcdFx0aWYgKFxuXHRcdFx0XHRuZXdPYmouY3NzID09PSBvYmouY3NzICYmXG5cdFx0XHRcdG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmXG5cdFx0XHRcdG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXBcblx0XHRcdCkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdHVwZGF0ZShvYmogPSBuZXdPYmopO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZW1vdmUoKTtcblx0XHR9XG5cdH07XG59XG5cbnZhciByZXBsYWNlVGV4dCA9IChmdW5jdGlvbiAoKSB7XG5cdHZhciB0ZXh0U3RvcmUgPSBbXTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gKGluZGV4LCByZXBsYWNlbWVudCkge1xuXHRcdHRleHRTdG9yZVtpbmRleF0gPSByZXBsYWNlbWVudDtcblxuXHRcdHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuXHR9O1xufSkoKTtcblxuZnVuY3Rpb24gYXBwbHlUb1NpbmdsZXRvblRhZyAoc3R5bGUsIGluZGV4LCByZW1vdmUsIG9iaikge1xuXHR2YXIgY3NzID0gcmVtb3ZlID8gXCJcIiA6IG9iai5jc3M7XG5cblx0aWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSByZXBsYWNlVGV4dChpbmRleCwgY3NzKTtcblx0fSBlbHNlIHtcblx0XHR2YXIgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcyk7XG5cdFx0dmFyIGNoaWxkTm9kZXMgPSBzdHlsZS5jaGlsZE5vZGVzO1xuXG5cdFx0aWYgKGNoaWxkTm9kZXNbaW5kZXhdKSBzdHlsZS5yZW1vdmVDaGlsZChjaGlsZE5vZGVzW2luZGV4XSk7XG5cblx0XHRpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcblx0XHRcdHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnIChzdHlsZSwgb2JqKSB7XG5cdHZhciBjc3MgPSBvYmouY3NzO1xuXHR2YXIgbWVkaWEgPSBvYmoubWVkaWE7XG5cblx0aWYobWVkaWEpIHtcblx0XHRzdHlsZS5zZXRBdHRyaWJ1dGUoXCJtZWRpYVwiLCBtZWRpYSlcblx0fVxuXG5cdGlmKHN0eWxlLnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG5cdH0gZWxzZSB7XG5cdFx0d2hpbGUoc3R5bGUuZmlyc3RDaGlsZCkge1xuXHRcdFx0c3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG5cdFx0fVxuXG5cdFx0c3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gdXBkYXRlTGluayAobGluaywgb3B0aW9ucywgb2JqKSB7XG5cdHZhciBjc3MgPSBvYmouY3NzO1xuXHR2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuXHQvKlxuXHRcdElmIGNvbnZlcnRUb0Fic29sdXRlVXJscyBpc24ndCBkZWZpbmVkLCBidXQgc291cmNlbWFwcyBhcmUgZW5hYmxlZFxuXHRcdGFuZCB0aGVyZSBpcyBubyBwdWJsaWNQYXRoIGRlZmluZWQgdGhlbiBsZXRzIHR1cm4gY29udmVydFRvQWJzb2x1dGVVcmxzXG5cdFx0b24gYnkgZGVmYXVsdC4gIE90aGVyd2lzZSBkZWZhdWx0IHRvIHRoZSBjb252ZXJ0VG9BYnNvbHV0ZVVybHMgb3B0aW9uXG5cdFx0ZGlyZWN0bHlcblx0Ki9cblx0dmFyIGF1dG9GaXhVcmxzID0gb3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgPT09IHVuZGVmaW5lZCAmJiBzb3VyY2VNYXA7XG5cblx0aWYgKG9wdGlvbnMuY29udmVydFRvQWJzb2x1dGVVcmxzIHx8IGF1dG9GaXhVcmxzKSB7XG5cdFx0Y3NzID0gZml4VXJscyhjc3MpO1xuXHR9XG5cblx0aWYgKHNvdXJjZU1hcCkge1xuXHRcdC8vIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzI2NjAzODc1XG5cdFx0Y3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIiArIGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSkgKyBcIiAqL1wiO1xuXHR9XG5cblx0dmFyIGJsb2IgPSBuZXcgQmxvYihbY3NzXSwgeyB0eXBlOiBcInRleHQvY3NzXCIgfSk7XG5cblx0dmFyIG9sZFNyYyA9IGxpbmsuaHJlZjtcblxuXHRsaW5rLmhyZWYgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xuXG5cdGlmKG9sZFNyYykgVVJMLnJldm9rZU9iamVjdFVSTChvbGRTcmMpO1xufVxuIiwiLypcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHVzZVNvdXJjZU1hcCkge1xuXHR2YXIgbGlzdCA9IFtdO1xuXG5cdC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblx0bGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuXHRcdFx0dmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG5cdFx0XHRpZihpdGVtWzJdKSB7XG5cdFx0XHRcdHJldHVybiBcIkBtZWRpYSBcIiArIGl0ZW1bMl0gKyBcIntcIiArIGNvbnRlbnQgKyBcIn1cIjtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJldHVybiBjb250ZW50O1xuXHRcdFx0fVxuXHRcdH0pLmpvaW4oXCJcIik7XG5cdH07XG5cblx0Ly8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3Rcblx0bGlzdC5pID0gZnVuY3Rpb24obW9kdWxlcywgbWVkaWFRdWVyeSkge1xuXHRcdGlmKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKVxuXHRcdFx0bW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgXCJcIl1dO1xuXHRcdHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpZCA9IHRoaXNbaV1bMF07XG5cdFx0XHRpZih0eXBlb2YgaWQgPT09IFwibnVtYmVyXCIpXG5cdFx0XHRcdGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcblx0XHR9XG5cdFx0Zm9yKGkgPSAwOyBpIDwgbW9kdWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSBtb2R1bGVzW2ldO1xuXHRcdFx0Ly8gc2tpcCBhbHJlYWR5IGltcG9ydGVkIG1vZHVsZVxuXHRcdFx0Ly8gdGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBub3QgMTAwJSBwZXJmZWN0IGZvciB3ZWlyZCBtZWRpYSBxdWVyeSBjb21iaW5hdGlvbnNcblx0XHRcdC8vICB3aGVuIGEgbW9kdWxlIGlzIGltcG9ydGVkIG11bHRpcGxlIHRpbWVzIHdpdGggZGlmZmVyZW50IG1lZGlhIHF1ZXJpZXMuXG5cdFx0XHQvLyAgSSBob3BlIHRoaXMgd2lsbCBuZXZlciBvY2N1ciAoSGV5IHRoaXMgd2F5IHdlIGhhdmUgc21hbGxlciBidW5kbGVzKVxuXHRcdFx0aWYodHlwZW9mIGl0ZW1bMF0gIT09IFwibnVtYmVyXCIgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcblx0XHRcdFx0aWYobWVkaWFRdWVyeSAmJiAhaXRlbVsyXSkge1xuXHRcdFx0XHRcdGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuXHRcdFx0XHR9IGVsc2UgaWYobWVkaWFRdWVyeSkge1xuXHRcdFx0XHRcdGl0ZW1bMl0gPSBcIihcIiArIGl0ZW1bMl0gKyBcIikgYW5kIChcIiArIG1lZGlhUXVlcnkgKyBcIilcIjtcblx0XHRcdFx0fVxuXHRcdFx0XHRsaXN0LnB1c2goaXRlbSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXHRyZXR1cm4gbGlzdDtcbn07XG5cbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG5cdHZhciBjb250ZW50ID0gaXRlbVsxXSB8fCAnJztcblx0dmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXHRpZiAoIWNzc01hcHBpbmcpIHtcblx0XHRyZXR1cm4gY29udGVudDtcblx0fVxuXG5cdGlmICh1c2VTb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgPT09ICdmdW5jdGlvbicpIHtcblx0XHR2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKTtcblx0XHR2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuXHRcdFx0cmV0dXJuICcvKiMgc291cmNlVVJMPScgKyBjc3NNYXBwaW5nLnNvdXJjZVJvb3QgKyBzb3VyY2UgKyAnICovJ1xuXHRcdH0pO1xuXG5cdFx0cmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG5cdH1cblxuXHRyZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufVxuXG4vLyBBZGFwdGVkIGZyb20gY29udmVydC1zb3VyY2UtbWFwIChNSVQpXG5mdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuXHR2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcblx0dmFyIGRhdGEgPSAnc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsJyArIGJhc2U2NDtcblxuXHRyZXR1cm4gJy8qIyAnICsgZGF0YSArICcgKi8nO1xufVxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogXG4gKi9cblxuZnVuY3Rpb24gbWFrZUVtcHR5RnVuY3Rpb24oYXJnKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGFyZztcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGlzIGZ1bmN0aW9uIGFjY2VwdHMgYW5kIGRpc2NhcmRzIGlucHV0czsgaXQgaGFzIG5vIHNpZGUgZWZmZWN0cy4gVGhpcyBpc1xuICogcHJpbWFyaWx5IHVzZWZ1bCBpZGlvbWF0aWNhbGx5IGZvciBvdmVycmlkYWJsZSBmdW5jdGlvbiBlbmRwb2ludHMgd2hpY2hcbiAqIGFsd2F5cyBuZWVkIHRvIGJlIGNhbGxhYmxlLCBzaW5jZSBKUyBsYWNrcyBhIG51bGwtY2FsbCBpZGlvbSBhbGEgQ29jb2EuXG4gKi9cbnZhciBlbXB0eUZ1bmN0aW9uID0gZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9O1xuXG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zID0gbWFrZUVtcHR5RnVuY3Rpb247XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zRmFsc2UgPSBtYWtlRW1wdHlGdW5jdGlvbihmYWxzZSk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zVHJ1ZSA9IG1ha2VFbXB0eUZ1bmN0aW9uKHRydWUpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc051bGwgPSBtYWtlRW1wdHlGdW5jdGlvbihudWxsKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNUaGlzID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdGhpcztcbn07XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zQXJndW1lbnQgPSBmdW5jdGlvbiAoYXJnKSB7XG4gIHJldHVybiBhcmc7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGVtcHR5RnVuY3Rpb247IiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgZW1wdHlPYmplY3QgPSB7fTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgT2JqZWN0LmZyZWV6ZShlbXB0eU9iamVjdCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZW1wdHlPYmplY3Q7IiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFVzZSBpbnZhcmlhbnQoKSB0byBhc3NlcnQgc3RhdGUgd2hpY2ggeW91ciBwcm9ncmFtIGFzc3VtZXMgdG8gYmUgdHJ1ZS5cbiAqXG4gKiBQcm92aWRlIHNwcmludGYtc3R5bGUgZm9ybWF0IChvbmx5ICVzIGlzIHN1cHBvcnRlZCkgYW5kIGFyZ3VtZW50c1xuICogdG8gcHJvdmlkZSBpbmZvcm1hdGlvbiBhYm91dCB3aGF0IGJyb2tlIGFuZCB3aGF0IHlvdSB3ZXJlXG4gKiBleHBlY3RpbmcuXG4gKlxuICogVGhlIGludmFyaWFudCBtZXNzYWdlIHdpbGwgYmUgc3RyaXBwZWQgaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBpbnZhcmlhbnRcbiAqIHdpbGwgcmVtYWluIHRvIGVuc3VyZSBsb2dpYyBkb2VzIG5vdCBkaWZmZXIgaW4gcHJvZHVjdGlvbi5cbiAqL1xuXG52YXIgdmFsaWRhdGVGb3JtYXQgPSBmdW5jdGlvbiB2YWxpZGF0ZUZvcm1hdChmb3JtYXQpIHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YWxpZGF0ZUZvcm1hdCA9IGZ1bmN0aW9uIHZhbGlkYXRlRm9ybWF0KGZvcm1hdCkge1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhcmlhbnQgcmVxdWlyZXMgYW4gZXJyb3IgbWVzc2FnZSBhcmd1bWVudCcpO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gaW52YXJpYW50KGNvbmRpdGlvbiwgZm9ybWF0LCBhLCBiLCBjLCBkLCBlLCBmKSB7XG4gIHZhbGlkYXRlRm9ybWF0KGZvcm1hdCk7XG5cbiAgaWYgKCFjb25kaXRpb24pIHtcbiAgICB2YXIgZXJyb3I7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcignTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgJyArICdmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLicpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYXJncyA9IFthLCBiLCBjLCBkLCBlLCBmXTtcbiAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gYXJnc1thcmdJbmRleCsrXTtcbiAgICAgIH0pKTtcbiAgICAgIGVycm9yLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgfVxuXG4gICAgZXJyb3IuZnJhbWVzVG9Qb3AgPSAxOyAvLyB3ZSBkb24ndCBjYXJlIGFib3V0IGludmFyaWFudCdzIG93biBmcmFtZVxuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW52YXJpYW50OyIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCI1MjNmOWQ0ZjFkNGM4MzI4NTEzODk2M2Q5MDJhNWQ4Yy5pY29cIjsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJlNmVkZGIzZDBmMDI3Mjk2Y2ZkYTM1Mzk5MGEyNDc1YS5wbmdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCIyM2E3ZmZkMzJlNzc2OTYwMmE2ZmZlYzM2NzczNDc1Mi5qcGdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCI1NGQ1OWJmM2M0YTY2NDUxNjllZTJjNWM1NWI3MzdlNy5wbmdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCIzYjMyYjYzM2JiOGU5OGFjNDlkOTliYWRmNzMxODM1MS5qcGdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJiYzJlZTM0NjRkYmZjOWQ4MjExZWQ3YTI1NGUwNmYwNi5zdmdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCI4MGQyNDVjNTI1ZWFjODA2NjAwODAwYjIxZWMxMmM5Ni5wbmdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJlMDIyOWI2MjhhMjFhNWE0MjQzYjU0ZWQwMThhMzhjYi5qcGdcIjsiLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMTUsIFlhaG9vISBJbmMuXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXG4gKi9cbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICAgIGNoaWxkQ29udGV4dFR5cGVzOiB0cnVlLFxuICAgIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gICAgZGlzcGxheU5hbWU6IHRydWUsXG4gICAgZ2V0RGVmYXVsdFByb3BzOiB0cnVlLFxuICAgIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgICBtaXhpbnM6IHRydWUsXG4gICAgcHJvcFR5cGVzOiB0cnVlLFxuICAgIHR5cGU6IHRydWVcbn07XG5cbnZhciBLTk9XTl9TVEFUSUNTID0ge1xuICAgIG5hbWU6IHRydWUsXG4gICAgbGVuZ3RoOiB0cnVlLFxuICAgIHByb3RvdHlwZTogdHJ1ZSxcbiAgICBjYWxsZXI6IHRydWUsXG4gICAgY2FsbGVlOiB0cnVlLFxuICAgIGFyZ3VtZW50czogdHJ1ZSxcbiAgICBhcml0eTogdHJ1ZVxufTtcblxudmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIGdldE93blByb3BlcnR5TmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG52YXIgb2JqZWN0UHJvdG90eXBlID0gZ2V0UHJvdG90eXBlT2YgJiYgZ2V0UHJvdG90eXBlT2YoT2JqZWN0KTtcblxuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICAgIGlmICh0eXBlb2Ygc291cmNlQ29tcG9uZW50ICE9PSAnc3RyaW5nJykgeyAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuXG4gICAgICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgICAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuICAgICAgICAgICAgaWYgKGluaGVyaXRlZENvbXBvbmVudCAmJiBpbmhlcml0ZWRDb21wb25lbnQgIT09IG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgICAgICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGtleXMgPSBnZXRPd25Qcm9wZXJ0eU5hbWVzKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICAgICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAgICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgICAgICAgdmFyIGtleSA9IGtleXNbaV07XG4gICAgICAgICAgICBpZiAoIVJFQUNUX1NUQVRJQ1Nba2V5XSAmJiAhS05PV05fU1RBVElDU1trZXldICYmICghYmxhY2tsaXN0IHx8ICFibGFja2xpc3Rba2V5XSkpIHtcbiAgICAgICAgICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG4gICAgICAgICAgICAgICAgdHJ5IHsgLy8gQXZvaWQgZmFpbHVyZXMgZnJvbSByZWFkLW9ubHkgcHJvcGVydGllc1xuICAgICAgICAgICAgICAgICAgICBkZWZpbmVQcm9wZXJ0eSh0YXJnZXRDb21wb25lbnQsIGtleSwgZGVzY3JpcHRvcik7XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBob2lzdE5vblJlYWN0U3RhdGljcztcbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsImZ1bmN0aW9uIGlzQWJzb2x1dGUocGF0aG5hbWUpIHtcbiAgcmV0dXJuIHBhdGhuYW1lLmNoYXJBdCgwKSA9PT0gJy8nO1xufVxuXG4vLyBBYm91dCAxLjV4IGZhc3RlciB0aGFuIHRoZSB0d28tYXJnIHZlcnNpb24gb2YgQXJyYXkjc3BsaWNlKClcbmZ1bmN0aW9uIHNwbGljZU9uZShsaXN0LCBpbmRleCkge1xuICBmb3IgKHZhciBpID0gaW5kZXgsIGsgPSBpICsgMSwgbiA9IGxpc3QubGVuZ3RoOyBrIDwgbjsgaSArPSAxLCBrICs9IDEpIHtcbiAgICBsaXN0W2ldID0gbGlzdFtrXTtcbiAgfVxuXG4gIGxpc3QucG9wKCk7XG59XG5cbi8vIFRoaXMgaW1wbGVtZW50YXRpb24gaXMgYmFzZWQgaGVhdmlseSBvbiBub2RlJ3MgdXJsLnBhcnNlXG5mdW5jdGlvbiByZXNvbHZlUGF0aG5hbWUodG8pIHtcbiAgdmFyIGZyb20gPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6ICcnO1xuXG4gIHZhciB0b1BhcnRzID0gdG8gJiYgdG8uc3BsaXQoJy8nKSB8fCBbXTtcbiAgdmFyIGZyb21QYXJ0cyA9IGZyb20gJiYgZnJvbS5zcGxpdCgnLycpIHx8IFtdO1xuXG4gIHZhciBpc1RvQWJzID0gdG8gJiYgaXNBYnNvbHV0ZSh0byk7XG4gIHZhciBpc0Zyb21BYnMgPSBmcm9tICYmIGlzQWJzb2x1dGUoZnJvbSk7XG4gIHZhciBtdXN0RW5kQWJzID0gaXNUb0FicyB8fCBpc0Zyb21BYnM7XG5cbiAgaWYgKHRvICYmIGlzQWJzb2x1dGUodG8pKSB7XG4gICAgLy8gdG8gaXMgYWJzb2x1dGVcbiAgICBmcm9tUGFydHMgPSB0b1BhcnRzO1xuICB9IGVsc2UgaWYgKHRvUGFydHMubGVuZ3RoKSB7XG4gICAgLy8gdG8gaXMgcmVsYXRpdmUsIGRyb3AgdGhlIGZpbGVuYW1lXG4gICAgZnJvbVBhcnRzLnBvcCgpO1xuICAgIGZyb21QYXJ0cyA9IGZyb21QYXJ0cy5jb25jYXQodG9QYXJ0cyk7XG4gIH1cblxuICBpZiAoIWZyb21QYXJ0cy5sZW5ndGgpIHJldHVybiAnLyc7XG5cbiAgdmFyIGhhc1RyYWlsaW5nU2xhc2ggPSB2b2lkIDA7XG4gIGlmIChmcm9tUGFydHMubGVuZ3RoKSB7XG4gICAgdmFyIGxhc3QgPSBmcm9tUGFydHNbZnJvbVBhcnRzLmxlbmd0aCAtIDFdO1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBsYXN0ID09PSAnLicgfHwgbGFzdCA9PT0gJy4uJyB8fCBsYXN0ID09PSAnJztcbiAgfSBlbHNlIHtcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gZmFsc2U7XG4gIH1cblxuICB2YXIgdXAgPSAwO1xuICBmb3IgKHZhciBpID0gZnJvbVBhcnRzLmxlbmd0aDsgaSA+PSAwOyBpLS0pIHtcbiAgICB2YXIgcGFydCA9IGZyb21QYXJ0c1tpXTtcblxuICAgIGlmIChwYXJ0ID09PSAnLicpIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgIH0gZWxzZSBpZiAocGFydCA9PT0gJy4uJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cCsrO1xuICAgIH0gZWxzZSBpZiAodXApIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgICAgdXAtLTtcbiAgICB9XG4gIH1cblxuICBpZiAoIW11c3RFbmRBYnMpIGZvciAoOyB1cC0tOyB1cCkge1xuICAgIGZyb21QYXJ0cy51bnNoaWZ0KCcuLicpO1xuICB9aWYgKG11c3RFbmRBYnMgJiYgZnJvbVBhcnRzWzBdICE9PSAnJyAmJiAoIWZyb21QYXJ0c1swXSB8fCAhaXNBYnNvbHV0ZShmcm9tUGFydHNbMF0pKSkgZnJvbVBhcnRzLnVuc2hpZnQoJycpO1xuXG4gIHZhciByZXN1bHQgPSBmcm9tUGFydHMuam9pbignLycpO1xuXG4gIGlmIChoYXNUcmFpbGluZ1NsYXNoICYmIHJlc3VsdC5zdWJzdHIoLTEpICE9PSAnLycpIHJlc3VsdCArPSAnLyc7XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgcmVzb2x2ZVBhdGhuYW1lOyIsInZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxuZnVuY3Rpb24gdmFsdWVFcXVhbChhLCBiKSB7XG4gIGlmIChhID09PSBiKSByZXR1cm4gdHJ1ZTtcblxuICBpZiAoYSA9PSBudWxsIHx8IGIgPT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuXG4gIGlmIChBcnJheS5pc0FycmF5KGEpKSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoYikgJiYgYS5sZW5ndGggPT09IGIubGVuZ3RoICYmIGEuZXZlcnkoZnVuY3Rpb24gKGl0ZW0sIGluZGV4KSB7XG4gICAgICByZXR1cm4gdmFsdWVFcXVhbChpdGVtLCBiW2luZGV4XSk7XG4gICAgfSk7XG4gIH1cblxuICB2YXIgYVR5cGUgPSB0eXBlb2YgYSA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YoYSk7XG4gIHZhciBiVHlwZSA9IHR5cGVvZiBiID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihiKTtcblxuICBpZiAoYVR5cGUgIT09IGJUeXBlKSByZXR1cm4gZmFsc2U7XG5cbiAgaWYgKGFUeXBlID09PSAnb2JqZWN0Jykge1xuICAgIHZhciBhVmFsdWUgPSBhLnZhbHVlT2YoKTtcbiAgICB2YXIgYlZhbHVlID0gYi52YWx1ZU9mKCk7XG5cbiAgICBpZiAoYVZhbHVlICE9PSBhIHx8IGJWYWx1ZSAhPT0gYikgcmV0dXJuIHZhbHVlRXF1YWwoYVZhbHVlLCBiVmFsdWUpO1xuXG4gICAgdmFyIGFLZXlzID0gT2JqZWN0LmtleXMoYSk7XG4gICAgdmFyIGJLZXlzID0gT2JqZWN0LmtleXMoYik7XG5cbiAgICBpZiAoYUtleXMubGVuZ3RoICE9PSBiS2V5cy5sZW5ndGgpIHJldHVybiBmYWxzZTtcblxuICAgIHJldHVybiBhS2V5cy5ldmVyeShmdW5jdGlvbiAoa2V5KSB7XG4gICAgICByZXR1cm4gdmFsdWVFcXVhbChhW2tleV0sIGJba2V5XSk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHZhbHVlRXF1YWw7IiwiZXhwb3J0IHZhciBhZGRMZWFkaW5nU2xhc2ggPSBmdW5jdGlvbiBhZGRMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICcvJyA/IHBhdGggOiAnLycgKyBwYXRoO1xufTtcblxuZXhwb3J0IHZhciBzdHJpcExlYWRpbmdTbGFzaCA9IGZ1bmN0aW9uIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLycgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XG59O1xuXG5leHBvcnQgdmFyIGhhc0Jhc2VuYW1lID0gZnVuY3Rpb24gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBuZXcgUmVnRXhwKCdeJyArIHByZWZpeCArICcoXFxcXC98XFxcXD98I3wkKScsICdpJykudGVzdChwYXRoKTtcbn07XG5cbmV4cG9ydCB2YXIgc3RyaXBCYXNlbmFtZSA9IGZ1bmN0aW9uIHN0cmlwQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpID8gcGF0aC5zdWJzdHIocHJlZml4Lmxlbmd0aCkgOiBwYXRoO1xufTtcblxuZXhwb3J0IHZhciBzdHJpcFRyYWlsaW5nU2xhc2ggPSBmdW5jdGlvbiBzdHJpcFRyYWlsaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQocGF0aC5sZW5ndGggLSAxKSA9PT0gJy8nID8gcGF0aC5zbGljZSgwLCAtMSkgOiBwYXRoO1xufTtcblxuZXhwb3J0IHZhciBwYXJzZVBhdGggPSBmdW5jdGlvbiBwYXJzZVBhdGgocGF0aCkge1xuICB2YXIgcGF0aG5hbWUgPSBwYXRoIHx8ICcvJztcbiAgdmFyIHNlYXJjaCA9ICcnO1xuICB2YXIgaGFzaCA9ICcnO1xuXG4gIHZhciBoYXNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCcjJyk7XG4gIGlmIChoYXNoSW5kZXggIT09IC0xKSB7XG4gICAgaGFzaCA9IHBhdGhuYW1lLnN1YnN0cihoYXNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIGhhc2hJbmRleCk7XG4gIH1cblxuICB2YXIgc2VhcmNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCc/Jyk7XG4gIGlmIChzZWFyY2hJbmRleCAhPT0gLTEpIHtcbiAgICBzZWFyY2ggPSBwYXRobmFtZS5zdWJzdHIoc2VhcmNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIHNlYXJjaEluZGV4KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcGF0aG5hbWU6IHBhdGhuYW1lLFxuICAgIHNlYXJjaDogc2VhcmNoID09PSAnPycgPyAnJyA6IHNlYXJjaCxcbiAgICBoYXNoOiBoYXNoID09PSAnIycgPyAnJyA6IGhhc2hcbiAgfTtcbn07XG5cbmV4cG9ydCB2YXIgY3JlYXRlUGF0aCA9IGZ1bmN0aW9uIGNyZWF0ZVBhdGgobG9jYXRpb24pIHtcbiAgdmFyIHBhdGhuYW1lID0gbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICBzZWFyY2ggPSBsb2NhdGlvbi5zZWFyY2gsXG4gICAgICBoYXNoID0gbG9jYXRpb24uaGFzaDtcblxuXG4gIHZhciBwYXRoID0gcGF0aG5hbWUgfHwgJy8nO1xuXG4gIGlmIChzZWFyY2ggJiYgc2VhcmNoICE9PSAnPycpIHBhdGggKz0gc2VhcmNoLmNoYXJBdCgwKSA9PT0gJz8nID8gc2VhcmNoIDogJz8nICsgc2VhcmNoO1xuXG4gIGlmIChoYXNoICYmIGhhc2ggIT09ICcjJykgcGF0aCArPSBoYXNoLmNoYXJBdCgwKSA9PT0gJyMnID8gaGFzaCA6ICcjJyArIGhhc2g7XG5cbiAgcmV0dXJuIHBhdGg7XG59OyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmltcG9ydCByZXNvbHZlUGF0aG5hbWUgZnJvbSAncmVzb2x2ZS1wYXRobmFtZSc7XG5pbXBvcnQgdmFsdWVFcXVhbCBmcm9tICd2YWx1ZS1lcXVhbCc7XG5pbXBvcnQgeyBwYXJzZVBhdGggfSBmcm9tICcuL1BhdGhVdGlscyc7XG5cbmV4cG9ydCB2YXIgY3JlYXRlTG9jYXRpb24gPSBmdW5jdGlvbiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5LCBjdXJyZW50TG9jYXRpb24pIHtcbiAgdmFyIGxvY2F0aW9uID0gdm9pZCAwO1xuICBpZiAodHlwZW9mIHBhdGggPT09ICdzdHJpbmcnKSB7XG4gICAgLy8gVHdvLWFyZyBmb3JtOiBwdXNoKHBhdGgsIHN0YXRlKVxuICAgIGxvY2F0aW9uID0gcGFyc2VQYXRoKHBhdGgpO1xuICAgIGxvY2F0aW9uLnN0YXRlID0gc3RhdGU7XG4gIH0gZWxzZSB7XG4gICAgLy8gT25lLWFyZyBmb3JtOiBwdXNoKGxvY2F0aW9uKVxuICAgIGxvY2F0aW9uID0gX2V4dGVuZHMoe30sIHBhdGgpO1xuXG4gICAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnBhdGhuYW1lID0gJyc7XG5cbiAgICBpZiAobG9jYXRpb24uc2VhcmNoKSB7XG4gICAgICBpZiAobG9jYXRpb24uc2VhcmNoLmNoYXJBdCgwKSAhPT0gJz8nKSBsb2NhdGlvbi5zZWFyY2ggPSAnPycgKyBsb2NhdGlvbi5zZWFyY2g7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvY2F0aW9uLnNlYXJjaCA9ICcnO1xuICAgIH1cblxuICAgIGlmIChsb2NhdGlvbi5oYXNoKSB7XG4gICAgICBpZiAobG9jYXRpb24uaGFzaC5jaGFyQXQoMCkgIT09ICcjJykgbG9jYXRpb24uaGFzaCA9ICcjJyArIGxvY2F0aW9uLmhhc2g7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvY2F0aW9uLmhhc2ggPSAnJztcbiAgICB9XG5cbiAgICBpZiAoc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBsb2NhdGlvbi5zdGF0ZSA9PT0gdW5kZWZpbmVkKSBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGRlY29kZVVSSShsb2NhdGlvbi5wYXRobmFtZSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIFVSSUVycm9yKSB7XG4gICAgICB0aHJvdyBuZXcgVVJJRXJyb3IoJ1BhdGhuYW1lIFwiJyArIGxvY2F0aW9uLnBhdGhuYW1lICsgJ1wiIGNvdWxkIG5vdCBiZSBkZWNvZGVkLiAnICsgJ1RoaXMgaXMgbGlrZWx5IGNhdXNlZCBieSBhbiBpbnZhbGlkIHBlcmNlbnQtZW5jb2RpbmcuJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IGU7XG4gICAgfVxuICB9XG5cbiAgaWYgKGtleSkgbG9jYXRpb24ua2V5ID0ga2V5O1xuXG4gIGlmIChjdXJyZW50TG9jYXRpb24pIHtcbiAgICAvLyBSZXNvbHZlIGluY29tcGxldGUvcmVsYXRpdmUgcGF0aG5hbWUgcmVsYXRpdmUgdG8gY3VycmVudCBsb2NhdGlvbi5cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZTtcbiAgICB9IGVsc2UgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmNoYXJBdCgwKSAhPT0gJy8nKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IHJlc29sdmVQYXRobmFtZShsb2NhdGlvbi5wYXRobmFtZSwgY3VycmVudExvY2F0aW9uLnBhdGhuYW1lKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gV2hlbiB0aGVyZSBpcyBubyBwcmlvciBsb2NhdGlvbiBhbmQgcGF0aG5hbWUgaXMgZW1wdHksIHNldCBpdCB0byAvXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSAnLyc7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGxvY2F0aW9uO1xufTtcblxuZXhwb3J0IHZhciBsb2NhdGlvbnNBcmVFcXVhbCA9IGZ1bmN0aW9uIGxvY2F0aW9uc0FyZUVxdWFsKGEsIGIpIHtcbiAgcmV0dXJuIGEucGF0aG5hbWUgPT09IGIucGF0aG5hbWUgJiYgYS5zZWFyY2ggPT09IGIuc2VhcmNoICYmIGEuaGFzaCA9PT0gYi5oYXNoICYmIGEua2V5ID09PSBiLmtleSAmJiB2YWx1ZUVxdWFsKGEuc3RhdGUsIGIuc3RhdGUpO1xufTsiLCJpbXBvcnQgd2FybmluZyBmcm9tICd3YXJuaW5nJztcblxudmFyIGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyID0gZnVuY3Rpb24gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKSB7XG4gIHZhciBwcm9tcHQgPSBudWxsO1xuXG4gIHZhciBzZXRQcm9tcHQgPSBmdW5jdGlvbiBzZXRQcm9tcHQobmV4dFByb21wdCkge1xuICAgIHdhcm5pbmcocHJvbXB0ID09IG51bGwsICdBIGhpc3Rvcnkgc3VwcG9ydHMgb25seSBvbmUgcHJvbXB0IGF0IGEgdGltZScpO1xuXG4gICAgcHJvbXB0ID0gbmV4dFByb21wdDtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAocHJvbXB0ID09PSBuZXh0UHJvbXB0KSBwcm9tcHQgPSBudWxsO1xuICAgIH07XG4gIH07XG5cbiAgdmFyIGNvbmZpcm1UcmFuc2l0aW9uVG8gPSBmdW5jdGlvbiBjb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGNhbGxiYWNrKSB7XG4gICAgLy8gVE9ETzogSWYgYW5vdGhlciB0cmFuc2l0aW9uIHN0YXJ0cyB3aGlsZSB3ZSdyZSBzdGlsbCBjb25maXJtaW5nXG4gICAgLy8gdGhlIHByZXZpb3VzIG9uZSwgd2UgbWF5IGVuZCB1cCBpbiBhIHdlaXJkIHN0YXRlLiBGaWd1cmUgb3V0IHRoZVxuICAgIC8vIGJlc3Qgd2F5IHRvIGhhbmRsZSB0aGlzLlxuICAgIGlmIChwcm9tcHQgIT0gbnVsbCkge1xuICAgICAgdmFyIHJlc3VsdCA9IHR5cGVvZiBwcm9tcHQgPT09ICdmdW5jdGlvbicgPyBwcm9tcHQobG9jYXRpb24sIGFjdGlvbikgOiBwcm9tcHQ7XG5cbiAgICAgIGlmICh0eXBlb2YgcmVzdWx0ID09PSAnc3RyaW5nJykge1xuICAgICAgICBpZiAodHlwZW9mIGdldFVzZXJDb25maXJtYXRpb24gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICBnZXRVc2VyQ29uZmlybWF0aW9uKHJlc3VsdCwgY2FsbGJhY2spO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHdhcm5pbmcoZmFsc2UsICdBIGhpc3RvcnkgbmVlZHMgYSBnZXRVc2VyQ29uZmlybWF0aW9uIGZ1bmN0aW9uIGluIG9yZGVyIHRvIHVzZSBhIHByb21wdCBtZXNzYWdlJyk7XG5cbiAgICAgICAgICBjYWxsYmFjayh0cnVlKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gUmV0dXJuIGZhbHNlIGZyb20gYSB0cmFuc2l0aW9uIGhvb2sgdG8gY2FuY2VsIHRoZSB0cmFuc2l0aW9uLlxuICAgICAgICBjYWxsYmFjayhyZXN1bHQgIT09IGZhbHNlKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY2FsbGJhY2sodHJ1ZSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciBsaXN0ZW5lcnMgPSBbXTtcblxuICB2YXIgYXBwZW5kTGlzdGVuZXIgPSBmdW5jdGlvbiBhcHBlbmRMaXN0ZW5lcihmbikge1xuICAgIHZhciBpc0FjdGl2ZSA9IHRydWU7XG5cbiAgICB2YXIgbGlzdGVuZXIgPSBmdW5jdGlvbiBsaXN0ZW5lcigpIHtcbiAgICAgIGlmIChpc0FjdGl2ZSkgZm4uYXBwbHkodW5kZWZpbmVkLCBhcmd1bWVudHMpO1xuICAgIH07XG5cbiAgICBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaXNBY3RpdmUgPSBmYWxzZTtcbiAgICAgIGxpc3RlbmVycyA9IGxpc3RlbmVycy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuIGl0ZW0gIT09IGxpc3RlbmVyO1xuICAgICAgfSk7XG4gICAgfTtcbiAgfTtcblxuICB2YXIgbm90aWZ5TGlzdGVuZXJzID0gZnVuY3Rpb24gbm90aWZ5TGlzdGVuZXJzKCkge1xuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIGxpc3RlbmVycy5mb3JFYWNoKGZ1bmN0aW9uIChsaXN0ZW5lcikge1xuICAgICAgcmV0dXJuIGxpc3RlbmVyLmFwcGx5KHVuZGVmaW5lZCwgYXJncyk7XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBzZXRQcm9tcHQ6IHNldFByb21wdCxcbiAgICBjb25maXJtVHJhbnNpdGlvblRvOiBjb25maXJtVHJhbnNpdGlvblRvLFxuICAgIGFwcGVuZExpc3RlbmVyOiBhcHBlbmRMaXN0ZW5lcixcbiAgICBub3RpZnlMaXN0ZW5lcnM6IG5vdGlmeUxpc3RlbmVyc1xuICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXI7IiwiZXhwb3J0IHZhciBjYW5Vc2VET00gPSAhISh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgJiYgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xuXG5leHBvcnQgdmFyIGFkZEV2ZW50TGlzdGVuZXIgPSBmdW5jdGlvbiBhZGRFdmVudExpc3RlbmVyKG5vZGUsIGV2ZW50LCBsaXN0ZW5lcikge1xuICByZXR1cm4gbm9kZS5hZGRFdmVudExpc3RlbmVyID8gbm9kZS5hZGRFdmVudExpc3RlbmVyKGV2ZW50LCBsaXN0ZW5lciwgZmFsc2UpIDogbm9kZS5hdHRhY2hFdmVudCgnb24nICsgZXZlbnQsIGxpc3RlbmVyKTtcbn07XG5cbmV4cG9ydCB2YXIgcmVtb3ZlRXZlbnRMaXN0ZW5lciA9IGZ1bmN0aW9uIHJlbW92ZUV2ZW50TGlzdGVuZXIobm9kZSwgZXZlbnQsIGxpc3RlbmVyKSB7XG4gIHJldHVybiBub2RlLnJlbW92ZUV2ZW50TGlzdGVuZXIgPyBub2RlLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVyLCBmYWxzZSkgOiBub2RlLmRldGFjaEV2ZW50KCdvbicgKyBldmVudCwgbGlzdGVuZXIpO1xufTtcblxuZXhwb3J0IHZhciBnZXRDb25maXJtYXRpb24gPSBmdW5jdGlvbiBnZXRDb25maXJtYXRpb24obWVzc2FnZSwgY2FsbGJhY2spIHtcbiAgcmV0dXJuIGNhbGxiYWNrKHdpbmRvdy5jb25maXJtKG1lc3NhZ2UpKTtcbn07IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tYWxlcnRcblxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGlzIHN1cHBvcnRlZC4gVGFrZW4gZnJvbSBNb2Rlcm5penIuXG4gKlxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvZmVhdHVyZS1kZXRlY3RzL2hpc3RvcnkuanNcbiAqIGNoYW5nZWQgdG8gYXZvaWQgZmFsc2UgbmVnYXRpdmVzIGZvciBXaW5kb3dzIFBob25lczogaHR0cHM6Ly9naXRodWIuY29tL3JlYWN0anMvcmVhY3Qtcm91dGVyL2lzc3Vlcy81ODZcbiAqL1xuZXhwb3J0IHZhciBzdXBwb3J0c0hpc3RvcnkgPSBmdW5jdGlvbiBzdXBwb3J0c0hpc3RvcnkoKSB7XG4gIHZhciB1YSA9IHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50O1xuXG4gIGlmICgodWEuaW5kZXhPZignQW5kcm9pZCAyLicpICE9PSAtMSB8fCB1YS5pbmRleE9mKCdBbmRyb2lkIDQuMCcpICE9PSAtMSkgJiYgdWEuaW5kZXhPZignTW9iaWxlIFNhZmFyaScpICE9PSAtMSAmJiB1YS5pbmRleE9mKCdDaHJvbWUnKSA9PT0gLTEgJiYgdWEuaW5kZXhPZignV2luZG93cyBQaG9uZScpID09PSAtMSkgcmV0dXJuIGZhbHNlO1xuXG4gIHJldHVybiB3aW5kb3cuaGlzdG9yeSAmJiAncHVzaFN0YXRlJyBpbiB3aW5kb3cuaGlzdG9yeTtcbn07XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGJyb3dzZXIgZmlyZXMgcG9wc3RhdGUgb24gaGFzaCBjaGFuZ2UuXG4gKiBJRTEwIGFuZCBJRTExIGRvIG5vdC5cbiAqL1xuZXhwb3J0IHZhciBzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlID0gZnVuY3Rpb24gc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpIHtcbiAgcmV0dXJuIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ1RyaWRlbnQnKSA9PT0gLTE7XG59O1xuXG4vKipcbiAqIFJldHVybnMgZmFsc2UgaWYgdXNpbmcgZ28obikgd2l0aCBoYXNoIGhpc3RvcnkgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZC5cbiAqL1xuZXhwb3J0IHZhciBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCA9IGZ1bmN0aW9uIHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignRmlyZWZveCcpID09PSAtMTtcbn07XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGEgZ2l2ZW4gcG9wc3RhdGUgZXZlbnQgaXMgYW4gZXh0cmFuZW91cyBXZWJLaXQgZXZlbnQuXG4gKiBBY2NvdW50cyBmb3IgdGhlIGZhY3QgdGhhdCBDaHJvbWUgb24gaU9TIGZpcmVzIHJlYWwgcG9wc3RhdGUgZXZlbnRzXG4gKiBjb250YWluaW5nIHVuZGVmaW5lZCBzdGF0ZSB3aGVuIHByZXNzaW5nIHRoZSBiYWNrIGJ1dHRvbi5cbiAqL1xuZXhwb3J0IHZhciBpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50ID0gZnVuY3Rpb24gaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkge1xuICByZXR1cm4gZXZlbnQuc3RhdGUgPT09IHVuZGVmaW5lZCAmJiBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0NyaU9TJykgPT09IC0xO1xufTsiLCJ2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5pbXBvcnQgd2FybmluZyBmcm9tICd3YXJuaW5nJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAnaW52YXJpYW50JztcbmltcG9ydCB7IGNyZWF0ZUxvY2F0aW9uLCBsb2NhdGlvbnNBcmVFcXVhbCB9IGZyb20gJy4vTG9jYXRpb25VdGlscyc7XG5pbXBvcnQgeyBhZGRMZWFkaW5nU2xhc2gsIHN0cmlwTGVhZGluZ1NsYXNoLCBzdHJpcFRyYWlsaW5nU2xhc2gsIGhhc0Jhc2VuYW1lLCBzdHJpcEJhc2VuYW1lLCBjcmVhdGVQYXRoIH0gZnJvbSAnLi9QYXRoVXRpbHMnO1xuaW1wb3J0IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyIGZyb20gJy4vY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXInO1xuaW1wb3J0IHsgY2FuVXNlRE9NLCBhZGRFdmVudExpc3RlbmVyLCByZW1vdmVFdmVudExpc3RlbmVyLCBnZXRDb25maXJtYXRpb24sIHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoIH0gZnJvbSAnLi9ET01VdGlscyc7XG5cbnZhciBIYXNoQ2hhbmdlRXZlbnQgPSAnaGFzaGNoYW5nZSc7XG5cbnZhciBIYXNoUGF0aENvZGVycyA9IHtcbiAgaGFzaGJhbmc6IHtcbiAgICBlbmNvZGVQYXRoOiBmdW5jdGlvbiBlbmNvZGVQYXRoKHBhdGgpIHtcbiAgICAgIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJyEnID8gcGF0aCA6ICchLycgKyBzdHJpcExlYWRpbmdTbGFzaChwYXRoKTtcbiAgICB9LFxuICAgIGRlY29kZVBhdGg6IGZ1bmN0aW9uIGRlY29kZVBhdGgocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XG4gICAgfVxuICB9LFxuICBub3NsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogc3RyaXBMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXG4gIH0sXG4gIHNsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoLFxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxuICB9XG59O1xuXG52YXIgZ2V0SGFzaFBhdGggPSBmdW5jdGlvbiBnZXRIYXNoUGF0aCgpIHtcbiAgLy8gV2UgY2FuJ3QgdXNlIHdpbmRvdy5sb2NhdGlvbi5oYXNoIGhlcmUgYmVjYXVzZSBpdCdzIG5vdFxuICAvLyBjb25zaXN0ZW50IGFjcm9zcyBicm93c2VycyAtIEZpcmVmb3ggd2lsbCBwcmUtZGVjb2RlIGl0IVxuICB2YXIgaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuICB2YXIgaGFzaEluZGV4ID0gaHJlZi5pbmRleE9mKCcjJyk7XG4gIHJldHVybiBoYXNoSW5kZXggPT09IC0xID8gJycgOiBocmVmLnN1YnN0cmluZyhoYXNoSW5kZXggKyAxKTtcbn07XG5cbnZhciBwdXNoSGFzaFBhdGggPSBmdW5jdGlvbiBwdXNoSGFzaFBhdGgocGF0aCkge1xuICByZXR1cm4gd2luZG93LmxvY2F0aW9uLmhhc2ggPSBwYXRoO1xufTtcblxudmFyIHJlcGxhY2VIYXNoUGF0aCA9IGZ1bmN0aW9uIHJlcGxhY2VIYXNoUGF0aChwYXRoKSB7XG4gIHZhciBoYXNoSW5kZXggPSB3aW5kb3cubG9jYXRpb24uaHJlZi5pbmRleE9mKCcjJyk7XG5cbiAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2Uod2luZG93LmxvY2F0aW9uLmhyZWYuc2xpY2UoMCwgaGFzaEluZGV4ID49IDAgPyBoYXNoSW5kZXggOiAwKSArICcjJyArIHBhdGgpO1xufTtcblxudmFyIGNyZWF0ZUhhc2hIaXN0b3J5ID0gZnVuY3Rpb24gY3JlYXRlSGFzaEhpc3RvcnkoKSB7XG4gIHZhciBwcm9wcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG5cbiAgaW52YXJpYW50KGNhblVzZURPTSwgJ0hhc2ggaGlzdG9yeSBuZWVkcyBhIERPTScpO1xuXG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG4gIHZhciBjYW5Hb1dpdGhvdXRSZWxvYWQgPSBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpO1xuXG4gIHZhciBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBwcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9PT0gdW5kZWZpbmVkID8gZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxuICAgICAgX3Byb3BzJGhhc2hUeXBlID0gcHJvcHMuaGFzaFR5cGUsXG4gICAgICBoYXNoVHlwZSA9IF9wcm9wcyRoYXNoVHlwZSA9PT0gdW5kZWZpbmVkID8gJ3NsYXNoJyA6IF9wcm9wcyRoYXNoVHlwZTtcblxuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6ICcnO1xuXG4gIHZhciBfSGFzaFBhdGhDb2RlcnMkaGFzaFQgPSBIYXNoUGF0aENvZGVyc1toYXNoVHlwZV0sXG4gICAgICBlbmNvZGVQYXRoID0gX0hhc2hQYXRoQ29kZXJzJGhhc2hULmVuY29kZVBhdGgsXG4gICAgICBkZWNvZGVQYXRoID0gX0hhc2hQYXRoQ29kZXJzJGhhc2hULmRlY29kZVBhdGg7XG5cblxuICB2YXIgZ2V0RE9NTG9jYXRpb24gPSBmdW5jdGlvbiBnZXRET01Mb2NhdGlvbigpIHtcbiAgICB2YXIgcGF0aCA9IGRlY29kZVBhdGgoZ2V0SGFzaFBhdGgoKSk7XG5cbiAgICB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpO1xuXG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XG5cbiAgICByZXR1cm4gY3JlYXRlTG9jYXRpb24ocGF0aCk7XG4gIH07XG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICB2YXIgc2V0U3RhdGUgPSBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH07XG5cbiAgdmFyIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICB2YXIgaWdub3JlUGF0aCA9IG51bGw7XG5cbiAgdmFyIGhhbmRsZUhhc2hDaGFuZ2UgPSBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xuICAgIHZhciBwYXRoID0gZ2V0SGFzaFBhdGgoKTtcbiAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuXG4gICAgaWYgKHBhdGggIT09IGVuY29kZWRQYXRoKSB7XG4gICAgICAvLyBFbnN1cmUgd2UgYWx3YXlzIGhhdmUgYSBwcm9wZXJseS1lbmNvZGVkIGhhc2guXG4gICAgICByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgbG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbigpO1xuICAgICAgdmFyIHByZXZMb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247XG5cbiAgICAgIGlmICghZm9yY2VOZXh0UG9wICYmIGxvY2F0aW9uc0FyZUVxdWFsKHByZXZMb2NhdGlvbiwgbG9jYXRpb24pKSByZXR1cm47IC8vIEEgaGFzaGNoYW5nZSBkb2Vzbid0IGFsd2F5cyA9PSBsb2NhdGlvbiBjaGFuZ2UuXG5cbiAgICAgIGlmIChpZ25vcmVQYXRoID09PSBjcmVhdGVQYXRoKGxvY2F0aW9uKSkgcmV0dXJuOyAvLyBJZ25vcmUgdGhpcyBjaGFuZ2U7IHdlIGFscmVhZHkgc2V0U3RhdGUgaW4gcHVzaC9yZXBsYWNlLlxuXG4gICAgICBpZ25vcmVQYXRoID0gbnVsbDtcblxuICAgICAgaGFuZGxlUG9wKGxvY2F0aW9uKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGhhbmRsZVBvcCA9IGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuXG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciByZXZlcnRQb3AgPSBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uO1xuXG4gICAgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBwYXRocyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBwYXRocyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKHRvTG9jYXRpb24pKTtcblxuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG5cbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aChmcm9tTG9jYXRpb24pKTtcblxuICAgIGlmIChmcm9tSW5kZXggPT09IC0xKSBmcm9tSW5kZXggPSAwO1xuXG4gICAgdmFyIGRlbHRhID0gdG9JbmRleCAtIGZyb21JbmRleDtcblxuICAgIGlmIChkZWx0YSkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gdHJ1ZTtcbiAgICAgIGdvKGRlbHRhKTtcbiAgICB9XG4gIH07XG5cbiAgLy8gRW5zdXJlIHRoZSBoYXNoIGlzIGVuY29kZWQgcHJvcGVybHkgYmVmb3JlIGRvaW5nIGFueXRoaW5nIGVsc2UuXG4gIHZhciBwYXRoID0gZ2V0SGFzaFBhdGgoKTtcbiAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcblxuICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG5cbiAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XG4gIHZhciBhbGxQYXRocyA9IFtjcmVhdGVQYXRoKGluaXRpYWxMb2NhdGlvbildO1xuXG4gIC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICB2YXIgY3JlYXRlSHJlZiA9IGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcbiAgICByZXR1cm4gJyMnICsgZW5jb2RlUGF0aChiYXNlbmFtZSArIGNyZWF0ZVBhdGgobG9jYXRpb24pKTtcbiAgfTtcblxuICB2YXIgcHVzaCA9IGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdIYXNoIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGU7IGl0IGlzIGlnbm9yZWQnKTtcblxuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGhpc3RvcnkubG9jYXRpb24pO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcblxuICAgICAgdmFyIHBhdGggPSBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgoYmFzZW5hbWUgKyBwYXRoKTtcbiAgICAgIHZhciBoYXNoQ2hhbmdlZCA9IGdldEhhc2hQYXRoKCkgIT09IGVuY29kZWRQYXRoO1xuXG4gICAgICBpZiAoaGFzaENoYW5nZWQpIHtcbiAgICAgICAgLy8gV2UgY2Fubm90IHRlbGwgaWYgYSBoYXNoY2hhbmdlIHdhcyBjYXVzZWQgYnkgYSBQVVNILCBzbyB3ZSdkXG4gICAgICAgIC8vIHJhdGhlciBzZXRTdGF0ZSBoZXJlIGFuZCBpZ25vcmUgdGhlIGhhc2hjaGFuZ2UuIFRoZSBjYXZlYXQgaGVyZVxuICAgICAgICAvLyBpcyB0aGF0IG90aGVyIGhhc2ggaGlzdG9yaWVzIGluIHRoZSBwYWdlIHdpbGwgY29uc2lkZXIgaXQgYSBQT1AuXG4gICAgICAgIGlnbm9yZVBhdGggPSBwYXRoO1xuICAgICAgICBwdXNoSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuXG4gICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGhpc3RvcnkubG9jYXRpb24pKTtcbiAgICAgICAgdmFyIG5leHRQYXRocyA9IGFsbFBhdGhzLnNsaWNlKDAsIHByZXZJbmRleCA9PT0gLTEgPyAwIDogcHJldkluZGV4ICsgMSk7XG5cbiAgICAgICAgbmV4dFBhdGhzLnB1c2gocGF0aCk7XG4gICAgICAgIGFsbFBhdGhzID0gbmV4dFBhdGhzO1xuXG4gICAgICAgIHNldFN0YXRlKHsgYWN0aW9uOiBhY3Rpb24sIGxvY2F0aW9uOiBsb2NhdGlvbiB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdhcm5pbmcoZmFsc2UsICdIYXNoIGhpc3RvcnkgY2Fubm90IFBVU0ggdGhlIHNhbWUgcGF0aDsgYSBuZXcgZW50cnkgd2lsbCBub3QgYmUgYWRkZWQgdG8gdGhlIGhpc3Rvcnkgc3RhY2snKTtcblxuICAgICAgICBzZXRTdGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIHZhciByZXBsYWNlID0gZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuXG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XG5cbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFJFUExBQ0UsIHNvIHdlJ2RcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XG4gICAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgICB9XG5cbiAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5pbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuXG4gICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsUGF0aHNbcHJldkluZGV4XSA9IHBhdGg7XG5cbiAgICAgIHNldFN0YXRlKHsgYWN0aW9uOiBhY3Rpb24sIGxvY2F0aW9uOiBsb2NhdGlvbiB9KTtcbiAgICB9KTtcbiAgfTtcblxuICB2YXIgZ28gPSBmdW5jdGlvbiBnbyhuKSB7XG4gICAgd2FybmluZyhjYW5Hb1dpdGhvdXRSZWxvYWQsICdIYXNoIGhpc3RvcnkgZ28obikgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZCBpbiB0aGlzIGJyb3dzZXInKTtcblxuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XG4gIH07XG5cbiAgdmFyIGdvQmFjayA9IGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICByZXR1cm4gZ28oLTEpO1xuICB9O1xuXG4gIHZhciBnb0ZvcndhcmQgPSBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgcmV0dXJuIGdvKDEpO1xuICB9O1xuXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMDtcblxuICB2YXIgY2hlY2tET01MaXN0ZW5lcnMgPSBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xuICAgIGxpc3RlbmVyQ291bnQgKz0gZGVsdGE7XG5cbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSkge1xuICAgICAgYWRkRXZlbnRMaXN0ZW5lcih3aW5kb3csIEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XG4gICAgICByZW1vdmVFdmVudExpc3RlbmVyKHdpbmRvdywgSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIHZhciBibG9jayA9IGZ1bmN0aW9uIGJsb2NrKCkge1xuICAgIHZhciBwcm9tcHQgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IGZhbHNlO1xuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBsaXN0ZW4gPSBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgdW5saXN0ZW4oKTtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcblxuICByZXR1cm4gaGlzdG9yeTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUhhc2hIaXN0b3J5OyIsInZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuaW1wb3J0IHdhcm5pbmcgZnJvbSAnd2FybmluZyc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ2ludmFyaWFudCc7XG5pbXBvcnQgeyBjcmVhdGVMb2NhdGlvbiB9IGZyb20gJy4vTG9jYXRpb25VdGlscyc7XG5pbXBvcnQgeyBhZGRMZWFkaW5nU2xhc2gsIHN0cmlwVHJhaWxpbmdTbGFzaCwgaGFzQmFzZW5hbWUsIHN0cmlwQmFzZW5hbWUsIGNyZWF0ZVBhdGggfSBmcm9tICcuL1BhdGhVdGlscyc7XG5pbXBvcnQgY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIgZnJvbSAnLi9jcmVhdGVUcmFuc2l0aW9uTWFuYWdlcic7XG5pbXBvcnQgeyBjYW5Vc2VET00sIGFkZEV2ZW50TGlzdGVuZXIsIHJlbW92ZUV2ZW50TGlzdGVuZXIsIGdldENvbmZpcm1hdGlvbiwgc3VwcG9ydHNIaXN0b3J5LCBzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlLCBpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50IH0gZnJvbSAnLi9ET01VdGlscyc7XG5cbnZhciBQb3BTdGF0ZUV2ZW50ID0gJ3BvcHN0YXRlJztcbnZhciBIYXNoQ2hhbmdlRXZlbnQgPSAnaGFzaGNoYW5nZSc7XG5cbnZhciBnZXRIaXN0b3J5U3RhdGUgPSBmdW5jdGlvbiBnZXRIaXN0b3J5U3RhdGUoKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5LnN0YXRlIHx8IHt9O1xuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gSUUgMTEgc29tZXRpbWVzIHRocm93cyB3aGVuIGFjY2Vzc2luZyB3aW5kb3cuaGlzdG9yeS5zdGF0ZVxuICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vUmVhY3RUcmFpbmluZy9oaXN0b3J5L3B1bGwvMjg5XG4gICAgcmV0dXJuIHt9O1xuICB9XG59O1xuXG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHVzZXMgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGluY2x1ZGluZ1xuICogcHVzaFN0YXRlLCByZXBsYWNlU3RhdGUsIGFuZCB0aGUgcG9wc3RhdGUgZXZlbnQuXG4gKi9cbnZhciBjcmVhdGVCcm93c2VySGlzdG9yeSA9IGZ1bmN0aW9uIGNyZWF0ZUJyb3dzZXJIaXN0b3J5KCkge1xuICB2YXIgcHJvcHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuXG4gIGludmFyaWFudChjYW5Vc2VET00sICdCcm93c2VyIGhpc3RvcnkgbmVlZHMgYSBET00nKTtcblxuICB2YXIgZ2xvYmFsSGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xuICB2YXIgY2FuVXNlSGlzdG9yeSA9IHN1cHBvcnRzSGlzdG9yeSgpO1xuICB2YXIgbmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIgPSAhc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpO1xuXG4gIHZhciBfcHJvcHMkZm9yY2VSZWZyZXNoID0gcHJvcHMuZm9yY2VSZWZyZXNoLFxuICAgICAgZm9yY2VSZWZyZXNoID0gX3Byb3BzJGZvcmNlUmVmcmVzaCA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiBfcHJvcHMkZm9yY2VSZWZyZXNoLFxuICAgICAgX3Byb3BzJGdldFVzZXJDb25maXJtID0gcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHVuZGVmaW5lZCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcbiAgICAgIF9wcm9wcyRrZXlMZW5ndGggPSBwcm9wcy5rZXlMZW5ndGgsXG4gICAgICBrZXlMZW5ndGggPSBfcHJvcHMka2V5TGVuZ3RoID09PSB1bmRlZmluZWQgPyA2IDogX3Byb3BzJGtleUxlbmd0aDtcblxuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6ICcnO1xuXG4gIHZhciBnZXRET01Mb2NhdGlvbiA9IGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKGhpc3RvcnlTdGF0ZSkge1xuICAgIHZhciBfcmVmID0gaGlzdG9yeVN0YXRlIHx8IHt9LFxuICAgICAgICBrZXkgPSBfcmVmLmtleSxcbiAgICAgICAgc3RhdGUgPSBfcmVmLnN0YXRlO1xuXG4gICAgdmFyIF93aW5kb3ckbG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb24sXG4gICAgICAgIHBhdGhuYW1lID0gX3dpbmRvdyRsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgICAgc2VhcmNoID0gX3dpbmRvdyRsb2NhdGlvbi5zZWFyY2gsXG4gICAgICAgIGhhc2ggPSBfd2luZG93JGxvY2F0aW9uLmhhc2g7XG5cblxuICAgIHZhciBwYXRoID0gcGF0aG5hbWUgKyBzZWFyY2ggKyBoYXNoO1xuXG4gICAgd2FybmluZyghYmFzZW5hbWUgfHwgaGFzQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpLCAnWW91IGFyZSBhdHRlbXB0aW5nIHRvIHVzZSBhIGJhc2VuYW1lIG9uIGEgcGFnZSB3aG9zZSBVUkwgcGF0aCBkb2VzIG5vdCBiZWdpbiAnICsgJ3dpdGggdGhlIGJhc2VuYW1lLiBFeHBlY3RlZCBwYXRoIFwiJyArIHBhdGggKyAnXCIgdG8gYmVnaW4gd2l0aCBcIicgKyBiYXNlbmFtZSArICdcIi4nKTtcblxuICAgIGlmIChiYXNlbmFtZSkgcGF0aCA9IHN0cmlwQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpO1xuXG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXkpO1xuICB9O1xuXG4gIHZhciBjcmVhdGVLZXkgPSBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCBrZXlMZW5ndGgpO1xuICB9O1xuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgdmFyIHNldFN0YXRlID0gZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gZ2xvYmFsSGlzdG9yeS5sZW5ndGg7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9O1xuXG4gIHZhciBoYW5kbGVQb3BTdGF0ZSA9IGZ1bmN0aW9uIGhhbmRsZVBvcFN0YXRlKGV2ZW50KSB7XG4gICAgLy8gSWdub3JlIGV4dHJhbmVvdXMgcG9wc3RhdGUgZXZlbnRzIGluIFdlYktpdC5cbiAgICBpZiAoaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkpIHJldHVybjtcblxuICAgIGhhbmRsZVBvcChnZXRET01Mb2NhdGlvbihldmVudC5zdGF0ZSkpO1xuICB9O1xuXG4gIHZhciBoYW5kbGVIYXNoQ2hhbmdlID0gZnVuY3Rpb24gaGFuZGxlSGFzaENoYW5nZSgpIHtcbiAgICBoYW5kbGVQb3AoZ2V0RE9NTG9jYXRpb24oZ2V0SGlzdG9yeVN0YXRlKCkpKTtcbiAgfTtcblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG5cbiAgdmFyIGhhbmRsZVBvcCA9IGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuXG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciByZXZlcnRQb3AgPSBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uO1xuXG4gICAgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBrZXlzIHdlJ3ZlIHNlZW4gaW4gc2Vzc2lvblN0b3JhZ2UuXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIGtleXMgd2UgZG9uJ3Qga25vdy5cblxuICAgIHZhciB0b0luZGV4ID0gYWxsS2V5cy5pbmRleE9mKHRvTG9jYXRpb24ua2V5KTtcblxuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG5cbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGZyb21Mb2NhdGlvbi5rZXkpO1xuXG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG5cbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oZ2V0SGlzdG9yeVN0YXRlKCkpO1xuICB2YXIgYWxsS2V5cyA9IFtpbml0aWFsTG9jYXRpb24ua2V5XTtcblxuICAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgdmFyIGNyZWF0ZUhyZWYgPSBmdW5jdGlvbiBjcmVhdGVIcmVmKGxvY2F0aW9uKSB7XG4gICAgcmV0dXJuIGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gIH07XG5cbiAgdmFyIHB1c2ggPSBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgd2FybmluZyghKCh0eXBlb2YgcGF0aCA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YocGF0aCkpID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcblxuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXksXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcblxuXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnB1c2hTdGF0ZSh7IGtleToga2V5LCBzdGF0ZTogc3RhdGUgfSwgbnVsbCwgaHJlZik7XG5cbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcbiAgICAgICAgICB2YXIgbmV4dEtleXMgPSBhbGxLZXlzLnNsaWNlKDAsIHByZXZJbmRleCA9PT0gLTEgPyAwIDogcHJldkluZGV4ICsgMSk7XG5cbiAgICAgICAgICBuZXh0S2V5cy5wdXNoKGxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgYWxsS2V5cyA9IG5leHRLZXlzO1xuXG4gICAgICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5Jyk7XG5cbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIHZhciByZXBsYWNlID0gZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHdhcm5pbmcoISgodHlwZW9mIHBhdGggPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHBhdGgpKSA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKTtcblxuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG5cbiAgICAgIHZhciBocmVmID0gY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XG5cblxuICAgICAgaWYgKGNhblVzZUhpc3RvcnkpIHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5yZXBsYWNlU3RhdGUoeyBrZXk6IGtleSwgc3RhdGU6IHN0YXRlIH0sIG51bGwsIGhyZWYpO1xuXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcblxuICAgICAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxLZXlzW3ByZXZJbmRleF0gPSBsb2NhdGlvbi5rZXk7XG5cbiAgICAgICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKTtcblxuICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICB2YXIgZ28gPSBmdW5jdGlvbiBnbyhuKSB7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfTtcblxuICB2YXIgZ29CYWNrID0gZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIHJldHVybiBnbygtMSk7XG4gIH07XG5cbiAgdmFyIGdvRm9yd2FyZCA9IGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICByZXR1cm4gZ28oMSk7XG4gIH07XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIHZhciBjaGVja0RPTUxpc3RlbmVycyA9IGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxKSB7XG4gICAgICBhZGRFdmVudExpc3RlbmVyKHdpbmRvdywgUG9wU3RhdGVFdmVudCwgaGFuZGxlUG9wU3RhdGUpO1xuXG4gICAgICBpZiAobmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIpIGFkZEV2ZW50TGlzdGVuZXIod2luZG93LCBIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH0gZWxzZSBpZiAobGlzdGVuZXJDb3VudCA9PT0gMCkge1xuICAgICAgcmVtb3ZlRXZlbnRMaXN0ZW5lcih3aW5kb3csIFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcblxuICAgICAgaWYgKG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyKSByZW1vdmVFdmVudExpc3RlbmVyKHdpbmRvdywgSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIHZhciBibG9jayA9IGZ1bmN0aW9uIGJsb2NrKCkge1xuICAgIHZhciBwcm9tcHQgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IGZhbHNlO1xuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBsaXN0ZW4gPSBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgdW5saXN0ZW4oKTtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcblxuICByZXR1cm4gaGlzdG9yeTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUJyb3dzZXJIaXN0b3J5OyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IHdhcm5pbmcgZnJvbSBcIndhcm5pbmdcIjtcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSBcImludmFyaWFudFwiO1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBwdXR0aW5nIGhpc3Rvcnkgb24gY29udGV4dC5cbiAqL1xuXG52YXIgUm91dGVyID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gUm91dGVyKCkge1xuICAgIHZhciBfdGVtcCwgX3RoaXMsIF9yZXQ7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUm91dGVyKTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHJldHVybiBfcmV0ID0gKF90ZW1wID0gKF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpKSwgX3RoaXMpLCBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIG1hdGNoOiBfdGhpcy5jb21wdXRlTWF0Y2goX3RoaXMucHJvcHMuaGlzdG9yeS5sb2NhdGlvbi5wYXRobmFtZSlcbiAgICB9LCBfdGVtcCksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgfVxuXG4gIFJvdXRlci5wcm90b3R5cGUuZ2V0Q2hpbGRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q2hpbGRDb250ZXh0KCkge1xuICAgIHJldHVybiB7XG4gICAgICByb3V0ZXI6IF9leHRlbmRzKHt9LCB0aGlzLmNvbnRleHQucm91dGVyLCB7XG4gICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSxcbiAgICAgICAgcm91dGU6IHtcbiAgICAgICAgICBsb2NhdGlvbjogdGhpcy5wcm9wcy5oaXN0b3J5LmxvY2F0aW9uLFxuICAgICAgICAgIG1hdGNoOiB0aGlzLnN0YXRlLm1hdGNoXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfTtcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXB1dGVNYXRjaCA9IGZ1bmN0aW9uIGNvbXB1dGVNYXRjaChwYXRobmFtZSkge1xuICAgIHJldHVybiB7XG4gICAgICBwYXRoOiBcIi9cIixcbiAgICAgIHVybDogXCIvXCIsXG4gICAgICBwYXJhbXM6IHt9LFxuICAgICAgaXNFeGFjdDogcGF0aG5hbWUgPT09IFwiL1wiXG4gICAgfTtcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgIHZhciBfcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICBjaGlsZHJlbiA9IF9wcm9wcy5jaGlsZHJlbixcbiAgICAgICAgaGlzdG9yeSA9IF9wcm9wcy5oaXN0b3J5O1xuXG5cbiAgICBpbnZhcmlhbnQoY2hpbGRyZW4gPT0gbnVsbCB8fCBSZWFjdC5DaGlsZHJlbi5jb3VudChjaGlsZHJlbikgPT09IDEsIFwiQSA8Um91dGVyPiBtYXkgaGF2ZSBvbmx5IG9uZSBjaGlsZCBlbGVtZW50XCIpO1xuXG4gICAgLy8gRG8gdGhpcyBoZXJlIHNvIHdlIGNhbiBzZXRTdGF0ZSB3aGVuIGEgPFJlZGlyZWN0PiBjaGFuZ2VzIHRoZVxuICAgIC8vIGxvY2F0aW9uIGluIGNvbXBvbmVudFdpbGxNb3VudC4gVGhpcyBoYXBwZW5zIGUuZy4gd2hlbiBkb2luZ1xuICAgIC8vIHNlcnZlciByZW5kZXJpbmcgdXNpbmcgYSA8U3RhdGljUm91dGVyPi5cbiAgICB0aGlzLnVubGlzdGVuID0gaGlzdG9yeS5saXN0ZW4oZnVuY3Rpb24gKCkge1xuICAgICAgX3RoaXMyLnNldFN0YXRlKHtcbiAgICAgICAgbWF0Y2g6IF90aGlzMi5jb21wdXRlTWF0Y2goaGlzdG9yeS5sb2NhdGlvbi5wYXRobmFtZSlcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgd2FybmluZyh0aGlzLnByb3BzLmhpc3RvcnkgPT09IG5leHRQcm9wcy5oaXN0b3J5LCBcIllvdSBjYW5ub3QgY2hhbmdlIDxSb3V0ZXIgaGlzdG9yeT5cIik7XG4gIH07XG5cbiAgUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIHRoaXMudW5saXN0ZW4oKTtcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLnByb3BzLmNoaWxkcmVuO1xuXG4gICAgcmV0dXJuIGNoaWxkcmVuID8gUmVhY3QuQ2hpbGRyZW4ub25seShjaGlsZHJlbikgOiBudWxsO1xuICB9O1xuXG4gIHJldHVybiBSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cblJvdXRlci5wcm9wVHlwZXMgPSB7XG4gIGhpc3Rvcnk6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlXG59O1xuUm91dGVyLmNvbnRleHRUeXBlcyA9IHtcbiAgcm91dGVyOiBQcm9wVHlwZXMub2JqZWN0XG59O1xuUm91dGVyLmNoaWxkQ29udGV4dFR5cGVzID0ge1xuICByb3V0ZXI6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZFxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBSb3V0ZXI7IiwidmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5pbXBvcnQgd2FybmluZyBmcm9tICd3YXJuaW5nJztcbmltcG9ydCB7IGNyZWF0ZVBhdGggfSBmcm9tICcuL1BhdGhVdGlscyc7XG5pbXBvcnQgeyBjcmVhdGVMb2NhdGlvbiB9IGZyb20gJy4vTG9jYXRpb25VdGlscyc7XG5pbXBvcnQgY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIgZnJvbSAnLi9jcmVhdGVUcmFuc2l0aW9uTWFuYWdlcic7XG5cbnZhciBjbGFtcCA9IGZ1bmN0aW9uIGNsYW1wKG4sIGxvd2VyQm91bmQsIHVwcGVyQm91bmQpIHtcbiAgcmV0dXJuIE1hdGgubWluKE1hdGgubWF4KG4sIGxvd2VyQm91bmQpLCB1cHBlckJvdW5kKTtcbn07XG5cbi8qKlxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgc3RvcmVzIGxvY2F0aW9ucyBpbiBtZW1vcnkuXG4gKi9cbnZhciBjcmVhdGVNZW1vcnlIaXN0b3J5ID0gZnVuY3Rpb24gY3JlYXRlTWVtb3J5SGlzdG9yeSgpIHtcbiAgdmFyIHByb3BzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcbiAgdmFyIGdldFVzZXJDb25maXJtYXRpb24gPSBwcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgX3Byb3BzJGluaXRpYWxFbnRyaWVzID0gcHJvcHMuaW5pdGlhbEVudHJpZXMsXG4gICAgICBpbml0aWFsRW50cmllcyA9IF9wcm9wcyRpbml0aWFsRW50cmllcyA9PT0gdW5kZWZpbmVkID8gWycvJ10gOiBfcHJvcHMkaW5pdGlhbEVudHJpZXMsXG4gICAgICBfcHJvcHMkaW5pdGlhbEluZGV4ID0gcHJvcHMuaW5pdGlhbEluZGV4LFxuICAgICAgaW5pdGlhbEluZGV4ID0gX3Byb3BzJGluaXRpYWxJbmRleCA9PT0gdW5kZWZpbmVkID8gMCA6IF9wcm9wcyRpbml0aWFsSW5kZXgsXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdW5kZWZpbmVkID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG5cblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIHZhciBzZXRTdGF0ZSA9IGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGhpc3RvcnkuZW50cmllcy5sZW5ndGg7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9O1xuXG4gIHZhciBjcmVhdGVLZXkgPSBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCBrZXlMZW5ndGgpO1xuICB9O1xuXG4gIHZhciBpbmRleCA9IGNsYW1wKGluaXRpYWxJbmRleCwgMCwgaW5pdGlhbEVudHJpZXMubGVuZ3RoIC0gMSk7XG4gIHZhciBlbnRyaWVzID0gaW5pdGlhbEVudHJpZXMubWFwKGZ1bmN0aW9uIChlbnRyeSkge1xuICAgIHJldHVybiB0eXBlb2YgZW50cnkgPT09ICdzdHJpbmcnID8gY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgY3JlYXRlS2V5KCkpIDogY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgZW50cnkua2V5IHx8IGNyZWF0ZUtleSgpKTtcbiAgfSk7XG5cbiAgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIHZhciBjcmVhdGVIcmVmID0gY3JlYXRlUGF0aDtcblxuICB2YXIgcHVzaCA9IGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICB3YXJuaW5nKCEoKHR5cGVvZiBwYXRoID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihwYXRoKSkgPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJyk7XG5cbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuXG4gICAgICB2YXIgcHJldkluZGV4ID0gaGlzdG9yeS5pbmRleDtcbiAgICAgIHZhciBuZXh0SW5kZXggPSBwcmV2SW5kZXggKyAxO1xuXG4gICAgICB2YXIgbmV4dEVudHJpZXMgPSBoaXN0b3J5LmVudHJpZXMuc2xpY2UoMCk7XG4gICAgICBpZiAobmV4dEVudHJpZXMubGVuZ3RoID4gbmV4dEluZGV4KSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnNwbGljZShuZXh0SW5kZXgsIG5leHRFbnRyaWVzLmxlbmd0aCAtIG5leHRJbmRleCwgbG9jYXRpb24pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV4dEVudHJpZXMucHVzaChsb2NhdGlvbik7XG4gICAgICB9XG5cbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgaW5kZXg6IG5leHRJbmRleCxcbiAgICAgICAgZW50cmllczogbmV4dEVudHJpZXNcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIHZhciByZXBsYWNlID0gZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHdhcm5pbmcoISgodHlwZW9mIHBhdGggPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHBhdGgpKSA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKTtcblxuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG5cbiAgICAgIGhpc3RvcnkuZW50cmllc1toaXN0b3J5LmluZGV4XSA9IGxvY2F0aW9uO1xuXG4gICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIGdvID0gZnVuY3Rpb24gZ28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBjbGFtcChoaXN0b3J5LmluZGV4ICsgbiwgMCwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aCAtIDEpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgIHZhciBsb2NhdGlvbiA9IGhpc3RvcnkuZW50cmllc1tuZXh0SW5kZXhdO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmIChvaykge1xuICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICAgIGluZGV4OiBuZXh0SW5kZXhcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBNaW1pYyB0aGUgYmVoYXZpb3Igb2YgRE9NIGhpc3RvcmllcyBieVxuICAgICAgICAvLyBjYXVzaW5nIGEgcmVuZGVyIGFmdGVyIGEgY2FuY2VsbGVkIFBPUC5cbiAgICAgICAgc2V0U3RhdGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICB2YXIgZ29CYWNrID0gZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIHJldHVybiBnbygtMSk7XG4gIH07XG5cbiAgdmFyIGdvRm9yd2FyZCA9IGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICByZXR1cm4gZ28oMSk7XG4gIH07XG5cbiAgdmFyIGNhbkdvID0gZnVuY3Rpb24gY2FuR28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBoaXN0b3J5LmluZGV4ICsgbjtcbiAgICByZXR1cm4gbmV4dEluZGV4ID49IDAgJiYgbmV4dEluZGV4IDwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcbiAgfTtcblxuICB2YXIgYmxvY2sgPSBmdW5jdGlvbiBibG9jaygpIHtcbiAgICB2YXIgcHJvbXB0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBmYWxzZTtcbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG4gIH07XG5cbiAgdmFyIGxpc3RlbiA9IGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHJldHVybiB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gIH07XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBlbnRyaWVzLmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBlbnRyaWVzW2luZGV4XSxcbiAgICBpbmRleDogaW5kZXgsXG4gICAgZW50cmllczogZW50cmllcyxcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgY2FuR286IGNhbkdvLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuXG4gIHJldHVybiBoaXN0b3J5O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlTWVtb3J5SGlzdG9yeTsiLCIvLyBXcml0dGVuIGluIHRoaXMgcm91bmQgYWJvdXQgd2F5IGZvciBiYWJlbC10cmFuc2Zvcm0taW1wb3J0c1xuaW1wb3J0IFJvdXRlciBmcm9tIFwicmVhY3Qtcm91dGVyL2VzL1JvdXRlclwiO1xuXG5leHBvcnQgZGVmYXVsdCBSb3V0ZXI7IiwiZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgd2FybmluZyBmcm9tIFwid2FybmluZ1wiO1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IHsgY3JlYXRlSGFzaEhpc3RvcnkgYXMgY3JlYXRlSGlzdG9yeSB9IGZyb20gXCJoaXN0b3J5XCI7XG5pbXBvcnQgUm91dGVyIGZyb20gXCIuL1JvdXRlclwiO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgdXNlcyB3aW5kb3cubG9jYXRpb24uaGFzaC5cbiAqL1xuXG52YXIgSGFzaFJvdXRlciA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhIYXNoUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBIYXNoUm91dGVyKCkge1xuICAgIHZhciBfdGVtcCwgX3RoaXMsIF9yZXQ7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSGFzaFJvdXRlcik7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3JldCA9IChfdGVtcCA9IChfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZUhpc3RvcnkoX3RoaXMucHJvcHMpLCBfdGVtcCksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgfVxuXG4gIEhhc2hSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPEhhc2hSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBIYXNoUm91dGVyIGFzIFJvdXRlciB9YC5cIik7XG4gIH07XG5cbiAgSGFzaFJvdXRlci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwgeyBoaXN0b3J5OiB0aGlzLmhpc3RvcnksIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuIH0pO1xuICB9O1xuXG4gIHJldHVybiBIYXNoUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5IYXNoUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICBoYXNoVHlwZTogUHJvcFR5cGVzLm9uZU9mKFtcImhhc2hiYW5nXCIsIFwibm9zbGFzaFwiLCBcInNsYXNoXCJdKSxcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IEhhc2hSb3V0ZXI7IiwiaW1wb3J0IHBhdGhUb1JlZ2V4cCBmcm9tIFwicGF0aC10by1yZWdleHBcIjtcblxudmFyIHBhdHRlcm5DYWNoZSA9IHt9O1xudmFyIGNhY2hlTGltaXQgPSAxMDAwMDtcbnZhciBjYWNoZUNvdW50ID0gMDtcblxudmFyIGNvbXBpbGVQYXRoID0gZnVuY3Rpb24gY29tcGlsZVBhdGgocGF0dGVybiwgb3B0aW9ucykge1xuICB2YXIgY2FjaGVLZXkgPSBcIlwiICsgb3B0aW9ucy5lbmQgKyBvcHRpb25zLnN0cmljdCArIG9wdGlvbnMuc2Vuc2l0aXZlO1xuICB2YXIgY2FjaGUgPSBwYXR0ZXJuQ2FjaGVbY2FjaGVLZXldIHx8IChwYXR0ZXJuQ2FjaGVbY2FjaGVLZXldID0ge30pO1xuXG4gIGlmIChjYWNoZVtwYXR0ZXJuXSkgcmV0dXJuIGNhY2hlW3BhdHRlcm5dO1xuXG4gIHZhciBrZXlzID0gW107XG4gIHZhciByZSA9IHBhdGhUb1JlZ2V4cChwYXR0ZXJuLCBrZXlzLCBvcHRpb25zKTtcbiAgdmFyIGNvbXBpbGVkUGF0dGVybiA9IHsgcmU6IHJlLCBrZXlzOiBrZXlzIH07XG5cbiAgaWYgKGNhY2hlQ291bnQgPCBjYWNoZUxpbWl0KSB7XG4gICAgY2FjaGVbcGF0dGVybl0gPSBjb21waWxlZFBhdHRlcm47XG4gICAgY2FjaGVDb3VudCsrO1xuICB9XG5cbiAgcmV0dXJuIGNvbXBpbGVkUGF0dGVybjtcbn07XG5cbi8qKlxuICogUHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBVUkwgcGF0aG5hbWUgdG8gYSBwYXRoIHBhdHRlcm4uXG4gKi9cbnZhciBtYXRjaFBhdGggPSBmdW5jdGlvbiBtYXRjaFBhdGgocGF0aG5hbWUpIHtcbiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuICB2YXIgcGFyZW50ID0gYXJndW1lbnRzWzJdO1xuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gXCJzdHJpbmdcIikgb3B0aW9ucyA9IHsgcGF0aDogb3B0aW9ucyB9O1xuXG4gIHZhciBfb3B0aW9ucyA9IG9wdGlvbnMsXG4gICAgICBwYXRoID0gX29wdGlvbnMucGF0aCxcbiAgICAgIF9vcHRpb25zJGV4YWN0ID0gX29wdGlvbnMuZXhhY3QsXG4gICAgICBleGFjdCA9IF9vcHRpb25zJGV4YWN0ID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IF9vcHRpb25zJGV4YWN0LFxuICAgICAgX29wdGlvbnMkc3RyaWN0ID0gX29wdGlvbnMuc3RyaWN0LFxuICAgICAgc3RyaWN0ID0gX29wdGlvbnMkc3RyaWN0ID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IF9vcHRpb25zJHN0cmljdCxcbiAgICAgIF9vcHRpb25zJHNlbnNpdGl2ZSA9IF9vcHRpb25zLnNlbnNpdGl2ZSxcbiAgICAgIHNlbnNpdGl2ZSA9IF9vcHRpb25zJHNlbnNpdGl2ZSA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiBfb3B0aW9ucyRzZW5zaXRpdmU7XG5cblxuICBpZiAocGF0aCA9PSBudWxsKSByZXR1cm4gcGFyZW50O1xuXG4gIHZhciBfY29tcGlsZVBhdGggPSBjb21waWxlUGF0aChwYXRoLCB7IGVuZDogZXhhY3QsIHN0cmljdDogc3RyaWN0LCBzZW5zaXRpdmU6IHNlbnNpdGl2ZSB9KSxcbiAgICAgIHJlID0gX2NvbXBpbGVQYXRoLnJlLFxuICAgICAga2V5cyA9IF9jb21waWxlUGF0aC5rZXlzO1xuXG4gIHZhciBtYXRjaCA9IHJlLmV4ZWMocGF0aG5hbWUpO1xuXG4gIGlmICghbWF0Y2gpIHJldHVybiBudWxsO1xuXG4gIHZhciB1cmwgPSBtYXRjaFswXSxcbiAgICAgIHZhbHVlcyA9IG1hdGNoLnNsaWNlKDEpO1xuXG4gIHZhciBpc0V4YWN0ID0gcGF0aG5hbWUgPT09IHVybDtcblxuICBpZiAoZXhhY3QgJiYgIWlzRXhhY3QpIHJldHVybiBudWxsO1xuXG4gIHJldHVybiB7XG4gICAgcGF0aDogcGF0aCwgLy8gdGhlIHBhdGggcGF0dGVybiB1c2VkIHRvIG1hdGNoXG4gICAgdXJsOiBwYXRoID09PSBcIi9cIiAmJiB1cmwgPT09IFwiXCIgPyBcIi9cIiA6IHVybCwgLy8gdGhlIG1hdGNoZWQgcG9ydGlvbiBvZiB0aGUgVVJMXG4gICAgaXNFeGFjdDogaXNFeGFjdCwgLy8gd2hldGhlciBvciBub3Qgd2UgbWF0Y2hlZCBleGFjdGx5XG4gICAgcGFyYW1zOiBrZXlzLnJlZHVjZShmdW5jdGlvbiAobWVtbywga2V5LCBpbmRleCkge1xuICAgICAgbWVtb1trZXkubmFtZV0gPSB2YWx1ZXNbaW5kZXhdO1xuICAgICAgcmV0dXJuIG1lbW87XG4gICAgfSwge30pXG4gIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBtYXRjaFBhdGg7IiwiZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgd2FybmluZyBmcm9tIFwid2FybmluZ1wiO1xuaW1wb3J0IGludmFyaWFudCBmcm9tIFwiaW52YXJpYW50XCI7XG5pbXBvcnQgbWF0Y2hQYXRoIGZyb20gXCIuL21hdGNoUGF0aFwiO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgdGhlIGZpcnN0IDxSb3V0ZT4gdGhhdCBtYXRjaGVzLlxuICovXG5cbnZhciBTd2l0Y2ggPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoU3dpdGNoLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTd2l0Y2goKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFN3aXRjaCk7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIFN3aXRjaC5wcm90b3R5cGUuY29tcG9uZW50V2lsbE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgIGludmFyaWFudCh0aGlzLmNvbnRleHQucm91dGVyLCBcIllvdSBzaG91bGQgbm90IHVzZSA8U3dpdGNoPiBvdXRzaWRlIGEgPFJvdXRlcj5cIik7XG4gIH07XG5cbiAgU3dpdGNoLnByb3RvdHlwZS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICB3YXJuaW5nKCEobmV4dFByb3BzLmxvY2F0aW9uICYmICF0aGlzLnByb3BzLmxvY2F0aW9uKSwgJzxTd2l0Y2g+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJyk7XG5cbiAgICB3YXJuaW5nKCEoIW5leHRQcm9wcy5sb2NhdGlvbiAmJiB0aGlzLnByb3BzLmxvY2F0aW9uKSwgJzxTd2l0Y2g+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKTtcbiAgfTtcblxuICBTd2l0Y2gucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgcm91dGUgPSB0aGlzLmNvbnRleHQucm91dGVyLnJvdXRlO1xuICAgIHZhciBjaGlsZHJlbiA9IHRoaXMucHJvcHMuY2hpbGRyZW47XG5cbiAgICB2YXIgbG9jYXRpb24gPSB0aGlzLnByb3BzLmxvY2F0aW9uIHx8IHJvdXRlLmxvY2F0aW9uO1xuXG4gICAgdmFyIG1hdGNoID0gdm9pZCAwLFxuICAgICAgICBjaGlsZCA9IHZvaWQgMDtcbiAgICBSZWFjdC5DaGlsZHJlbi5mb3JFYWNoKGNoaWxkcmVuLCBmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgICAgaWYgKG1hdGNoID09IG51bGwgJiYgUmVhY3QuaXNWYWxpZEVsZW1lbnQoZWxlbWVudCkpIHtcbiAgICAgICAgdmFyIF9lbGVtZW50JHByb3BzID0gZWxlbWVudC5wcm9wcyxcbiAgICAgICAgICAgIHBhdGhQcm9wID0gX2VsZW1lbnQkcHJvcHMucGF0aCxcbiAgICAgICAgICAgIGV4YWN0ID0gX2VsZW1lbnQkcHJvcHMuZXhhY3QsXG4gICAgICAgICAgICBzdHJpY3QgPSBfZWxlbWVudCRwcm9wcy5zdHJpY3QsXG4gICAgICAgICAgICBzZW5zaXRpdmUgPSBfZWxlbWVudCRwcm9wcy5zZW5zaXRpdmUsXG4gICAgICAgICAgICBmcm9tID0gX2VsZW1lbnQkcHJvcHMuZnJvbTtcblxuICAgICAgICB2YXIgcGF0aCA9IHBhdGhQcm9wIHx8IGZyb207XG5cbiAgICAgICAgY2hpbGQgPSBlbGVtZW50O1xuICAgICAgICBtYXRjaCA9IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgeyBwYXRoOiBwYXRoLCBleGFjdDogZXhhY3QsIHN0cmljdDogc3RyaWN0LCBzZW5zaXRpdmU6IHNlbnNpdGl2ZSB9LCByb3V0ZS5tYXRjaCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gbWF0Y2ggPyBSZWFjdC5jbG9uZUVsZW1lbnQoY2hpbGQsIHsgbG9jYXRpb246IGxvY2F0aW9uLCBjb21wdXRlZE1hdGNoOiBtYXRjaCB9KSA6IG51bGw7XG4gIH07XG5cbiAgcmV0dXJuIFN3aXRjaDtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuU3dpdGNoLmNvbnRleHRUeXBlcyA9IHtcbiAgcm91dGVyOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIHJvdXRlOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcbiAgfSkuaXNSZXF1aXJlZFxufTtcblN3aXRjaC5wcm9wVHlwZXMgPSB7XG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3Rcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgU3dpdGNoOyIsIi8vIFdyaXR0ZW4gaW4gdGhpcyByb3VuZCBhYm91dCB3YXkgZm9yIGJhYmVsLXRyYW5zZm9ybS1pbXBvcnRzXG5pbXBvcnQgU3dpdGNoIGZyb20gXCJyZWFjdC1yb3V0ZXIvZXMvU3dpdGNoXCI7XG5cbmV4cG9ydCBkZWZhdWx0IFN3aXRjaDsiLCJ2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbmltcG9ydCB3YXJuaW5nIGZyb20gXCJ3YXJuaW5nXCI7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gXCJpbnZhcmlhbnRcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBtYXRjaFBhdGggZnJvbSBcIi4vbWF0Y2hQYXRoXCI7XG5cbnZhciBpc0VtcHR5Q2hpbGRyZW4gPSBmdW5jdGlvbiBpc0VtcHR5Q2hpbGRyZW4oY2hpbGRyZW4pIHtcbiAgcmV0dXJuIFJlYWN0LkNoaWxkcmVuLmNvdW50KGNoaWxkcmVuKSA9PT0gMDtcbn07XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgc2luZ2xlIHBhdGggYW5kIHJlbmRlcmluZy5cbiAqL1xuXG52YXIgUm91dGUgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoUm91dGUsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFJvdXRlKCkge1xuICAgIHZhciBfdGVtcCwgX3RoaXMsIF9yZXQ7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUm91dGUpO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIF9yZXQgPSAoX3RlbXAgPSAoX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkpLCBfdGhpcyksIF90aGlzLnN0YXRlID0ge1xuICAgICAgbWF0Y2g6IF90aGlzLmNvbXB1dGVNYXRjaChfdGhpcy5wcm9wcywgX3RoaXMuY29udGV4dC5yb3V0ZXIpXG4gICAgfSwgX3RlbXApLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX3JldCk7XG4gIH1cblxuICBSb3V0ZS5wcm90b3R5cGUuZ2V0Q2hpbGRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q2hpbGRDb250ZXh0KCkge1xuICAgIHJldHVybiB7XG4gICAgICByb3V0ZXI6IF9leHRlbmRzKHt9LCB0aGlzLmNvbnRleHQucm91dGVyLCB7XG4gICAgICAgIHJvdXRlOiB7XG4gICAgICAgICAgbG9jYXRpb246IHRoaXMucHJvcHMubG9jYXRpb24gfHwgdGhpcy5jb250ZXh0LnJvdXRlci5yb3V0ZS5sb2NhdGlvbixcbiAgICAgICAgICBtYXRjaDogdGhpcy5zdGF0ZS5tYXRjaFxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH07XG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXB1dGVNYXRjaCA9IGZ1bmN0aW9uIGNvbXB1dGVNYXRjaChfcmVmLCByb3V0ZXIpIHtcbiAgICB2YXIgY29tcHV0ZWRNYXRjaCA9IF9yZWYuY29tcHV0ZWRNYXRjaCxcbiAgICAgICAgbG9jYXRpb24gPSBfcmVmLmxvY2F0aW9uLFxuICAgICAgICBwYXRoID0gX3JlZi5wYXRoLFxuICAgICAgICBzdHJpY3QgPSBfcmVmLnN0cmljdCxcbiAgICAgICAgZXhhY3QgPSBfcmVmLmV4YWN0LFxuICAgICAgICBzZW5zaXRpdmUgPSBfcmVmLnNlbnNpdGl2ZTtcblxuICAgIGlmIChjb21wdXRlZE1hdGNoKSByZXR1cm4gY29tcHV0ZWRNYXRjaDsgLy8gPFN3aXRjaD4gYWxyZWFkeSBjb21wdXRlZCB0aGUgbWF0Y2ggZm9yIHVzXG5cbiAgICBpbnZhcmlhbnQocm91dGVyLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGU+IG9yIHdpdGhSb3V0ZXIoKSBvdXRzaWRlIGEgPFJvdXRlcj5cIik7XG5cbiAgICB2YXIgcm91dGUgPSByb3V0ZXIucm91dGU7XG5cbiAgICB2YXIgcGF0aG5hbWUgPSAobG9jYXRpb24gfHwgcm91dGUubG9jYXRpb24pLnBhdGhuYW1lO1xuXG4gICAgcmV0dXJuIG1hdGNoUGF0aChwYXRobmFtZSwgeyBwYXRoOiBwYXRoLCBzdHJpY3Q6IHN0cmljdCwgZXhhY3Q6IGV4YWN0LCBzZW5zaXRpdmU6IHNlbnNpdGl2ZSB9LCByb3V0ZS5tYXRjaCk7XG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICB3YXJuaW5nKCEodGhpcy5wcm9wcy5jb21wb25lbnQgJiYgdGhpcy5wcm9wcy5yZW5kZXIpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgY29tcG9uZW50PiBhbmQgPFJvdXRlIHJlbmRlcj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSByZW5kZXI+IHdpbGwgYmUgaWdub3JlZFwiKTtcblxuICAgIHdhcm5pbmcoISh0aGlzLnByb3BzLmNvbXBvbmVudCAmJiB0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgY29tcG9uZW50PiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIGNoaWxkcmVuPiB3aWxsIGJlIGlnbm9yZWRcIik7XG5cbiAgICB3YXJuaW5nKCEodGhpcy5wcm9wcy5yZW5kZXIgJiYgdGhpcy5wcm9wcy5jaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKHRoaXMucHJvcHMuY2hpbGRyZW4pKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIHJlbmRlcj4gYW5kIDxSb3V0ZSBjaGlsZHJlbj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSBjaGlsZHJlbj4gd2lsbCBiZSBpZ25vcmVkXCIpO1xuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMsIG5leHRDb250ZXh0KSB7XG4gICAgd2FybmluZyghKG5leHRQcm9wcy5sb2NhdGlvbiAmJiAhdGhpcy5wcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJyk7XG5cbiAgICB3YXJuaW5nKCEoIW5leHRQcm9wcy5sb2NhdGlvbiAmJiB0aGlzLnByb3BzLmxvY2F0aW9uKSwgJzxSb3V0ZT4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSBjb250cm9sbGVkIHRvIHVuY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBwcm92aWRlZCBhIFwibG9jYXRpb25cIiBwcm9wIGluaXRpYWxseSBidXQgb21pdHRlZCBpdCBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpO1xuXG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBtYXRjaDogdGhpcy5jb21wdXRlTWF0Y2gobmV4dFByb3BzLCBuZXh0Q29udGV4dC5yb3V0ZXIpXG4gICAgfSk7XG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgbWF0Y2ggPSB0aGlzLnN0YXRlLm1hdGNoO1xuICAgIHZhciBfcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICBjaGlsZHJlbiA9IF9wcm9wcy5jaGlsZHJlbixcbiAgICAgICAgY29tcG9uZW50ID0gX3Byb3BzLmNvbXBvbmVudCxcbiAgICAgICAgcmVuZGVyID0gX3Byb3BzLnJlbmRlcjtcbiAgICB2YXIgX2NvbnRleHQkcm91dGVyID0gdGhpcy5jb250ZXh0LnJvdXRlcixcbiAgICAgICAgaGlzdG9yeSA9IF9jb250ZXh0JHJvdXRlci5oaXN0b3J5LFxuICAgICAgICByb3V0ZSA9IF9jb250ZXh0JHJvdXRlci5yb3V0ZSxcbiAgICAgICAgc3RhdGljQ29udGV4dCA9IF9jb250ZXh0JHJvdXRlci5zdGF0aWNDb250ZXh0O1xuXG4gICAgdmFyIGxvY2F0aW9uID0gdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCByb3V0ZS5sb2NhdGlvbjtcbiAgICB2YXIgcHJvcHMgPSB7IG1hdGNoOiBtYXRjaCwgbG9jYXRpb246IGxvY2F0aW9uLCBoaXN0b3J5OiBoaXN0b3J5LCBzdGF0aWNDb250ZXh0OiBzdGF0aWNDb250ZXh0IH07XG5cbiAgICBpZiAoY29tcG9uZW50KSByZXR1cm4gbWF0Y2ggPyBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbXBvbmVudCwgcHJvcHMpIDogbnVsbDtcblxuICAgIGlmIChyZW5kZXIpIHJldHVybiBtYXRjaCA/IHJlbmRlcihwcm9wcykgOiBudWxsO1xuXG4gICAgaWYgKHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gY2hpbGRyZW4ocHJvcHMpO1xuXG4gICAgaWYgKGNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4oY2hpbGRyZW4pKSByZXR1cm4gUmVhY3QuQ2hpbGRyZW4ub25seShjaGlsZHJlbik7XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcblxuICByZXR1cm4gUm91dGU7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cblJvdXRlLnByb3BUeXBlcyA9IHtcbiAgY29tcHV0ZWRNYXRjaDogUHJvcFR5cGVzLm9iamVjdCwgLy8gcHJpdmF0ZSwgZnJvbSA8U3dpdGNoPlxuICBwYXRoOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBleGFjdDogUHJvcFR5cGVzLmJvb2wsXG4gIHN0cmljdDogUHJvcFR5cGVzLmJvb2wsXG4gIHNlbnNpdGl2ZTogUHJvcFR5cGVzLmJvb2wsXG4gIGNvbXBvbmVudDogUHJvcFR5cGVzLmZ1bmMsXG4gIHJlbmRlcjogUHJvcFR5cGVzLmZ1bmMsXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm5vZGVdKSxcbiAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3Rcbn07XG5Sb3V0ZS5jb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBoaXN0b3J5OiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgcm91dGU6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICBzdGF0aWNDb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0XG4gIH0pXG59O1xuUm91dGUuY2hpbGRDb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IFJvdXRlOyIsIi8vIFdyaXR0ZW4gaW4gdGhpcyByb3VuZCBhYm91dCB3YXkgZm9yIGJhYmVsLXRyYW5zZm9ybS1pbXBvcnRzXG5pbXBvcnQgUm91dGUgZnJvbSBcInJlYWN0LXJvdXRlci9lcy9Sb3V0ZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBSb3V0ZTsiLCJpbXBvcnQgcGF0aFRvUmVnZXhwIGZyb20gXCJwYXRoLXRvLXJlZ2V4cFwiO1xuXG52YXIgcGF0dGVybkNhY2hlID0ge307XG52YXIgY2FjaGVMaW1pdCA9IDEwMDAwO1xudmFyIGNhY2hlQ291bnQgPSAwO1xuXG52YXIgY29tcGlsZUdlbmVyYXRvciA9IGZ1bmN0aW9uIGNvbXBpbGVHZW5lcmF0b3IocGF0dGVybikge1xuICB2YXIgY2FjaGVLZXkgPSBwYXR0ZXJuO1xuICB2YXIgY2FjaGUgPSBwYXR0ZXJuQ2FjaGVbY2FjaGVLZXldIHx8IChwYXR0ZXJuQ2FjaGVbY2FjaGVLZXldID0ge30pO1xuXG4gIGlmIChjYWNoZVtwYXR0ZXJuXSkgcmV0dXJuIGNhY2hlW3BhdHRlcm5dO1xuXG4gIHZhciBjb21waWxlZEdlbmVyYXRvciA9IHBhdGhUb1JlZ2V4cC5jb21waWxlKHBhdHRlcm4pO1xuXG4gIGlmIChjYWNoZUNvdW50IDwgY2FjaGVMaW1pdCkge1xuICAgIGNhY2hlW3BhdHRlcm5dID0gY29tcGlsZWRHZW5lcmF0b3I7XG4gICAgY2FjaGVDb3VudCsrO1xuICB9XG5cbiAgcmV0dXJuIGNvbXBpbGVkR2VuZXJhdG9yO1xufTtcblxuLyoqXG4gKiBQdWJsaWMgQVBJIGZvciBnZW5lcmF0aW5nIGEgVVJMIHBhdGhuYW1lIGZyb20gYSBwYXR0ZXJuIGFuZCBwYXJhbWV0ZXJzLlxuICovXG52YXIgZ2VuZXJhdGVQYXRoID0gZnVuY3Rpb24gZ2VuZXJhdGVQYXRoKCkge1xuICB2YXIgcGF0dGVybiA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogXCIvXCI7XG4gIHZhciBwYXJhbXMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuXG4gIGlmIChwYXR0ZXJuID09PSBcIi9cIikge1xuICAgIHJldHVybiBwYXR0ZXJuO1xuICB9XG4gIHZhciBnZW5lcmF0b3IgPSBjb21waWxlR2VuZXJhdG9yKHBhdHRlcm4pO1xuICByZXR1cm4gZ2VuZXJhdG9yKHBhcmFtcywgeyBwcmV0dHk6IHRydWUgfSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBnZW5lcmF0ZVBhdGg7IiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgd2FybmluZyBmcm9tIFwid2FybmluZ1wiO1xuaW1wb3J0IGludmFyaWFudCBmcm9tIFwiaW52YXJpYW50XCI7XG5pbXBvcnQgeyBjcmVhdGVMb2NhdGlvbiwgbG9jYXRpb25zQXJlRXF1YWwgfSBmcm9tIFwiaGlzdG9yeVwiO1xuaW1wb3J0IGdlbmVyYXRlUGF0aCBmcm9tIFwiLi9nZW5lcmF0ZVBhdGhcIjtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgdXBkYXRpbmcgdGhlIGxvY2F0aW9uIHByb2dyYW1tYXRpY2FsbHlcbiAqIHdpdGggYSBjb21wb25lbnQuXG4gKi9cblxudmFyIFJlZGlyZWN0ID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFJlZGlyZWN0LCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBSZWRpcmVjdCgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUmVkaXJlY3QpO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH1cblxuICBSZWRpcmVjdC5wcm90b3R5cGUuaXNTdGF0aWMgPSBmdW5jdGlvbiBpc1N0YXRpYygpIHtcbiAgICByZXR1cm4gdGhpcy5jb250ZXh0LnJvdXRlciAmJiB0aGlzLmNvbnRleHQucm91dGVyLnN0YXRpY0NvbnRleHQ7XG4gIH07XG5cbiAgUmVkaXJlY3QucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICBpbnZhcmlhbnQodGhpcy5jb250ZXh0LnJvdXRlciwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJlZGlyZWN0PiBvdXRzaWRlIGEgPFJvdXRlcj5cIik7XG5cbiAgICBpZiAodGhpcy5pc1N0YXRpYygpKSB0aGlzLnBlcmZvcm0oKTtcbiAgfTtcblxuICBSZWRpcmVjdC5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBpZiAoIXRoaXMuaXNTdGF0aWMoKSkgdGhpcy5wZXJmb3JtKCk7XG4gIH07XG5cbiAgUmVkaXJlY3QucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICB2YXIgcHJldlRvID0gY3JlYXRlTG9jYXRpb24ocHJldlByb3BzLnRvKTtcbiAgICB2YXIgbmV4dFRvID0gY3JlYXRlTG9jYXRpb24odGhpcy5wcm9wcy50byk7XG5cbiAgICBpZiAobG9jYXRpb25zQXJlRXF1YWwocHJldlRvLCBuZXh0VG8pKSB7XG4gICAgICB3YXJuaW5nKGZhbHNlLCBcIllvdSB0cmllZCB0byByZWRpcmVjdCB0byB0aGUgc2FtZSByb3V0ZSB5b3UncmUgY3VycmVudGx5IG9uOiBcIiArIChcIlxcXCJcIiArIG5leHRUby5wYXRobmFtZSArIG5leHRUby5zZWFyY2ggKyBcIlxcXCJcIikpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMucGVyZm9ybSgpO1xuICB9O1xuXG4gIFJlZGlyZWN0LnByb3RvdHlwZS5jb21wdXRlVG8gPSBmdW5jdGlvbiBjb21wdXRlVG8oX3JlZikge1xuICAgIHZhciBjb21wdXRlZE1hdGNoID0gX3JlZi5jb21wdXRlZE1hdGNoLFxuICAgICAgICB0byA9IF9yZWYudG87XG5cbiAgICBpZiAoY29tcHV0ZWRNYXRjaCkge1xuICAgICAgaWYgKHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4gZ2VuZXJhdGVQYXRoKHRvLCBjb21wdXRlZE1hdGNoLnBhcmFtcyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gX2V4dGVuZHMoe30sIHRvLCB7XG4gICAgICAgICAgcGF0aG5hbWU6IGdlbmVyYXRlUGF0aCh0by5wYXRobmFtZSwgY29tcHV0ZWRNYXRjaC5wYXJhbXMpXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0bztcbiAgfTtcblxuICBSZWRpcmVjdC5wcm90b3R5cGUucGVyZm9ybSA9IGZ1bmN0aW9uIHBlcmZvcm0oKSB7XG4gICAgdmFyIGhpc3RvcnkgPSB0aGlzLmNvbnRleHQucm91dGVyLmhpc3Rvcnk7XG4gICAgdmFyIHB1c2ggPSB0aGlzLnByb3BzLnB1c2g7XG5cbiAgICB2YXIgdG8gPSB0aGlzLmNvbXB1dGVUbyh0aGlzLnByb3BzKTtcblxuICAgIGlmIChwdXNoKSB7XG4gICAgICBoaXN0b3J5LnB1c2godG8pO1xuICAgIH0gZWxzZSB7XG4gICAgICBoaXN0b3J5LnJlcGxhY2UodG8pO1xuICAgIH1cbiAgfTtcblxuICBSZWRpcmVjdC5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBudWxsO1xuICB9O1xuXG4gIHJldHVybiBSZWRpcmVjdDtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuUmVkaXJlY3QucHJvcFR5cGVzID0ge1xuICBjb21wdXRlZE1hdGNoOiBQcm9wVHlwZXMub2JqZWN0LCAvLyBwcml2YXRlLCBmcm9tIDxTd2l0Y2g+XG4gIHB1c2g6IFByb3BUeXBlcy5ib29sLFxuICBmcm9tOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB0bzogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdF0pLmlzUmVxdWlyZWRcbn07XG5SZWRpcmVjdC5kZWZhdWx0UHJvcHMgPSB7XG4gIHB1c2g6IGZhbHNlXG59O1xuUmVkaXJlY3QuY29udGV4dFR5cGVzID0ge1xuICByb3V0ZXI6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgaGlzdG9yeTogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgIHB1c2g6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgICByZXBsYWNlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG4gICAgfSkuaXNSZXF1aXJlZCxcbiAgICBzdGF0aWNDb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0XG4gIH0pLmlzUmVxdWlyZWRcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgUmVkaXJlY3Q7IiwiLy8gV3JpdHRlbiBpbiB0aGlzIHJvdW5kIGFib3V0IHdheSBmb3IgYmFiZWwtdHJhbnNmb3JtLWltcG9ydHNcbmltcG9ydCBSZWRpcmVjdCBmcm9tIFwicmVhY3Qtcm91dGVyL2VzL1JlZGlyZWN0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IFJlZGlyZWN0OyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhvYmosIGtleXMpIHsgdmFyIHRhcmdldCA9IHt9OyBmb3IgKHZhciBpIGluIG9iaikgeyBpZiAoa2V5cy5pbmRleE9mKGkpID49IDApIGNvbnRpbnVlOyBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGkpKSBjb250aW51ZTsgdGFyZ2V0W2ldID0gb2JqW2ldOyB9IHJldHVybiB0YXJnZXQ7IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IGhvaXN0U3RhdGljcyBmcm9tIFwiaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3NcIjtcbmltcG9ydCBSb3V0ZSBmcm9tIFwiLi9Sb3V0ZVwiO1xuXG4vKipcbiAqIEEgcHVibGljIGhpZ2hlci1vcmRlciBjb21wb25lbnQgdG8gYWNjZXNzIHRoZSBpbXBlcmF0aXZlIEFQSVxuICovXG52YXIgd2l0aFJvdXRlciA9IGZ1bmN0aW9uIHdpdGhSb3V0ZXIoQ29tcG9uZW50KSB7XG4gIHZhciBDID0gZnVuY3Rpb24gQyhwcm9wcykge1xuICAgIHZhciB3cmFwcGVkQ29tcG9uZW50UmVmID0gcHJvcHMud3JhcHBlZENvbXBvbmVudFJlZixcbiAgICAgICAgcmVtYWluaW5nUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMocHJvcHMsIFtcIndyYXBwZWRDb21wb25lbnRSZWZcIl0pO1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHtcbiAgICAgIGNoaWxkcmVuOiBmdW5jdGlvbiBjaGlsZHJlbihyb3V0ZUNvbXBvbmVudFByb3BzKSB7XG4gICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgX2V4dGVuZHMoe30sIHJlbWFpbmluZ1Byb3BzLCByb3V0ZUNvbXBvbmVudFByb3BzLCB7XG4gICAgICAgICAgcmVmOiB3cmFwcGVkQ29tcG9uZW50UmVmXG4gICAgICAgIH0pKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICBDLmRpc3BsYXlOYW1lID0gXCJ3aXRoUm91dGVyKFwiICsgKENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBDb21wb25lbnQubmFtZSkgKyBcIilcIjtcbiAgQy5XcmFwcGVkQ29tcG9uZW50ID0gQ29tcG9uZW50O1xuICBDLnByb3BUeXBlcyA9IHtcbiAgICB3cmFwcGVkQ29tcG9uZW50UmVmOiBQcm9wVHlwZXMuZnVuY1xuICB9O1xuXG4gIHJldHVybiBob2lzdFN0YXRpY3MoQywgQ29tcG9uZW50KTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhSb3V0ZXI7IiwiLy8gV3JpdHRlbiBpbiB0aGlzIHJvdW5kIGFib3V0IHdheSBmb3IgYmFiZWwtdHJhbnNmb3JtLWltcG9ydHNcbmltcG9ydCB3aXRoUm91dGVyIGZyb20gXCJyZWFjdC1yb3V0ZXIvZXMvd2l0aFJvdXRlclwiO1xuXG5leHBvcnQgZGVmYXVsdCB3aXRoUm91dGVyOyIsImltcG9ydCBSZWFjdCwgeyBQdXJlQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCAnLi9HYWxsZXJ5LmNzcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbGxlcnkgZXh0ZW5kcyBQdXJlQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICBpbWFnZUFycmF5OiBQcm9wVHlwZXMuYXJyYXlcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBpbWFnZUFycmF5IH0gPSB0aGlzLnByb3BzO1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImdhbGxlcnlcIj5cbiAgICAgICAge2ltYWdlQXJyYXkgJiYgaW1hZ2VBcnJheS5tYXAoKGltYWdlLCBpKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYga2V5PXtpfSA+XG4gICAgICAgICAgICAgIDxoMj5pbmRleDoge2l9PC9oMj5cbiAgICAgICAgICAgICAgPGltZyBzcmM9e2ltYWdlfSBhbHQ9XCJ0ZXN0XCIgY2xhc3NOYW1lPVwiZ2FsbGVyeS1pbWFnZVwiIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApO1xuICAgICAgICB9KX1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuIiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKG9iaiwga2V5cykgeyB2YXIgdGFyZ2V0ID0ge307IGZvciAodmFyIGkgaW4gb2JqKSB7IGlmIChrZXlzLmluZGV4T2YoaSkgPj0gMCkgY29udGludWU7IGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgaSkpIGNvbnRpbnVlOyB0YXJnZXRbaV0gPSBvYmpbaV07IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSBcImludmFyaWFudFwiO1xuaW1wb3J0IHsgY3JlYXRlTG9jYXRpb24gfSBmcm9tIFwiaGlzdG9yeVwiO1xuXG52YXIgaXNNb2RpZmllZEV2ZW50ID0gZnVuY3Rpb24gaXNNb2RpZmllZEV2ZW50KGV2ZW50KSB7XG4gIHJldHVybiAhIShldmVudC5tZXRhS2V5IHx8IGV2ZW50LmFsdEtleSB8fCBldmVudC5jdHJsS2V5IHx8IGV2ZW50LnNoaWZ0S2V5KTtcbn07XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHJlbmRlcmluZyBhIGhpc3RvcnktYXdhcmUgPGE+LlxuICovXG5cbnZhciBMaW5rID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKExpbmssIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIExpbmsoKSB7XG4gICAgdmFyIF90ZW1wLCBfdGhpcywgX3JldDtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBMaW5rKTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHJldHVybiBfcmV0ID0gKF90ZW1wID0gKF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpKSwgX3RoaXMpLCBfdGhpcy5oYW5kbGVDbGljayA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgaWYgKF90aGlzLnByb3BzLm9uQ2xpY2spIF90aGlzLnByb3BzLm9uQ2xpY2soZXZlbnQpO1xuXG4gICAgICBpZiAoIWV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQgJiYgLy8gb25DbGljayBwcmV2ZW50ZWQgZGVmYXVsdFxuICAgICAgZXZlbnQuYnV0dG9uID09PSAwICYmIC8vIGlnbm9yZSBldmVyeXRoaW5nIGJ1dCBsZWZ0IGNsaWNrc1xuICAgICAgIV90aGlzLnByb3BzLnRhcmdldCAmJiAvLyBsZXQgYnJvd3NlciBoYW5kbGUgXCJ0YXJnZXQ9X2JsYW5rXCIgZXRjLlxuICAgICAgIWlzTW9kaWZpZWRFdmVudChldmVudCkgLy8gaWdub3JlIGNsaWNrcyB3aXRoIG1vZGlmaWVyIGtleXNcbiAgICAgICkge1xuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgICB2YXIgaGlzdG9yeSA9IF90aGlzLmNvbnRleHQucm91dGVyLmhpc3Rvcnk7XG4gICAgICAgICAgdmFyIF90aGlzJHByb3BzID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgICAgIHJlcGxhY2UgPSBfdGhpcyRwcm9wcy5yZXBsYWNlLFxuICAgICAgICAgICAgICB0byA9IF90aGlzJHByb3BzLnRvO1xuXG5cbiAgICAgICAgICBpZiAocmVwbGFjZSkge1xuICAgICAgICAgICAgaGlzdG9yeS5yZXBsYWNlKHRvKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaGlzdG9yeS5wdXNoKHRvKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9LCBfdGVtcCksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgfVxuXG4gIExpbmsucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3Byb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgcmVwbGFjZSA9IF9wcm9wcy5yZXBsYWNlLFxuICAgICAgICB0byA9IF9wcm9wcy50byxcbiAgICAgICAgaW5uZXJSZWYgPSBfcHJvcHMuaW5uZXJSZWYsXG4gICAgICAgIHByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9wcm9wcywgW1wicmVwbGFjZVwiLCBcInRvXCIsIFwiaW5uZXJSZWZcIl0pOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG5cbiAgICBpbnZhcmlhbnQodGhpcy5jb250ZXh0LnJvdXRlciwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPExpbms+IG91dHNpZGUgYSA8Um91dGVyPlwiKTtcblxuICAgIGludmFyaWFudCh0byAhPT0gdW5kZWZpbmVkLCAnWW91IG11c3Qgc3BlY2lmeSB0aGUgXCJ0b1wiIHByb3BlcnR5Jyk7XG5cbiAgICB2YXIgaGlzdG9yeSA9IHRoaXMuY29udGV4dC5yb3V0ZXIuaGlzdG9yeTtcblxuICAgIHZhciBsb2NhdGlvbiA9IHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIiA/IGNyZWF0ZUxvY2F0aW9uKHRvLCBudWxsLCBudWxsLCBoaXN0b3J5LmxvY2F0aW9uKSA6IHRvO1xuXG4gICAgdmFyIGhyZWYgPSBoaXN0b3J5LmNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYVwiLCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHsgb25DbGljazogdGhpcy5oYW5kbGVDbGljaywgaHJlZjogaHJlZiwgcmVmOiBpbm5lclJlZiB9KSk7XG4gIH07XG5cbiAgcmV0dXJuIExpbms7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbkxpbmsucHJvcFR5cGVzID0ge1xuICBvbkNsaWNrOiBQcm9wVHlwZXMuZnVuYyxcbiAgdGFyZ2V0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICByZXBsYWNlOiBQcm9wVHlwZXMuYm9vbCxcbiAgdG86IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3RdKS5pc1JlcXVpcmVkLFxuICBpbm5lclJlZjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmZ1bmNdKVxufTtcbkxpbmsuZGVmYXVsdFByb3BzID0ge1xuICByZXBsYWNlOiBmYWxzZVxufTtcbkxpbmsuY29udGV4dFR5cGVzID0ge1xuICByb3V0ZXI6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgaGlzdG9yeTogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgIHB1c2g6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgICByZXBsYWNlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgICAgY3JlYXRlSHJlZjogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxuICAgIH0pLmlzUmVxdWlyZWRcbiAgfSkuaXNSZXF1aXJlZFxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBMaW5rOyIsImltcG9ydCBSZWFjdCwgeyBQdXJlQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgU3dpdGNoLCBMaW5rLCBSb3V0ZSwgd2l0aFJvdXRlciB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuY2xhc3MgRmVlZGJhY2sgZXh0ZW5kcyBQdXJlQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICBtYXRjaDogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkXG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgbWF0Y2ggfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdj5cbiAgICAgICAgPGgyPldlbGNvbWUgdG8gRmVlZGJhY2s8L2gyPlxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxMaW5rIHRvPXtgJHttYXRjaC51cmx9L3Bvc3RgfT5Qb3N0IEZlZWRiYWNrPC9MaW5rPlxuICAgICAgICAgIDxMaW5rIHRvPXtgJHttYXRjaC51cmx9L2dldGB9PkdldCBGZWVkYmFjazwvTGluaz5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxTd2l0Y2g+XG4gICAgICAgICAgPFJvdXRlIHBhdGg9e2Ake21hdGNoLnVybH0vcG9zdGB9IHJlbmRlcj17KCkgPT4gPGRpdj5UaGFua3MsIGJ1dCBubyB0aGFua3MuPC9kaXY+fSAvPlxuICAgICAgICAgIDxSb3V0ZSBwYXRoPXtgJHttYXRjaC51cmx9L2dldGB9IHJlbmRlcj17KCkgPT4gPGRpdj5CZXN0IHdlYnNpdGUgZXZlciBjcmVhdGVkIGluIHRoZSB3b3JsZC48L2Rpdj59IC8+XG4gICAgICAgIDwvU3dpdGNoPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCB3aXRoUm91dGVyKEZlZWRiYWNrKTsiLCJpbXBvcnQgUmVhY3QsIHsgUHVyZUNvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBSb3V0ZSwgU3dpdGNoLCBSZWRpcmVjdCwgd2l0aFJvdXRlciB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IEdhbGxlcnkgZnJvbSAnLi9HYWxsZXJ5JztcbmltcG9ydCBGZWVkYmFjayBmcm9tICcuL0ZlZWRiYWNrJztcbmltcG9ydCBnaWFudEpwZWcgZnJvbSAnLi9hc3NldHMvZ2lhbnQuanBnJztcbmltcG9ydCBnaWFudFBuZyBmcm9tICcuL2Fzc2V0cy9naWFudC5wbmcnO1xuaW1wb3J0IGdpYW50U3ZnIGZyb20gJy4vYXNzZXRzL2dpYW50LnN2Zyc7XG5pbXBvcnQgbGFyZ2VKcGVnIGZyb20gJy4vYXNzZXRzL2xhcmdlLmpwZyc7XG5pbXBvcnQgbGFyZ2VQbmcgZnJvbSAnLi9hc3NldHMvbGFyZ2UucG5nJztcbmltcG9ydCBzbWFsbEpwZyBmcm9tICcuL2Fzc2V0cy9zbWFsbC5qcGcnO1xuaW1wb3J0IHNtYWxsUG5nIGZyb20gJy4vYXNzZXRzL3NtYWxsLnBuZyc7XG5pbXBvcnQgaWNvbiBmcm9tICcuL2Fzc2V0cy9pY29uLmljbyc7XG5cbmNvbnN0IGltYWdlQXJyYXkgPSBbZ2lhbnRKcGVnLCBnaWFudFBuZywgZ2lhbnRTdmcsIGxhcmdlSnBlZywgbGFyZ2VQbmcsIHNtYWxsSnBnLCBzbWFsbFBuZywgaWNvbl07XG5cbmNsYXNzIFJvdXRlcyBleHRlbmRzIFB1cmVDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIGhpc3RvcnkgOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVcbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGlmKCF3aW5kb3cuY29yZG92YSkgcmV0dXJuO1xuICAgIHdpbmRvdy5GaXJlYmFzZVBsdWdpbi5vbk5vdGlmaWNhdGlvbk9wZW4obm90aWZpY2F0aW9uID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKCdub3RpZmljYXRpb24gaXMnLCBub3RpZmljYXRpb24pO1xuICAgICAgdGhpcy5wcm9wcy5oaXN0b3J5LnB1c2goJy9mZWVkYmFjay9nZXQnKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPFN3aXRjaD5cbiAgICAgICAgPFJvdXRlIHBhdGg9XCIvZ2FsbGVyeVwiIHJlbmRlcj17KCkgPT4gPEdhbGxlcnkgaW1hZ2VBcnJheT17aW1hZ2VBcnJheX0gLz59IC8+XG4gICAgICAgIDxSb3V0ZSBwYXRoPVwiL2ZlZWRiYWNrXCIgY29tcG9uZW50PXtGZWVkYmFja30gLz5cbiAgICAgICAgPFJlZGlyZWN0IHRvPScvZ2FsbGVyeScgLz5cbiAgICAgIDwvU3dpdGNoPlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgd2l0aFJvdXRlcihSb3V0ZXMpO1xuIiwiaW1wb3J0IFJlYWN0LCB7IFB1cmVDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBIYXNoUm91dGVyIGFzIFJvdXRlciB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IFJvdXRlcyBmcm9tICcuL1JvdXRlcyc7XG5pbXBvcnQgJy4vQXBwLmNzcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwcCBleHRlbmRzIFB1cmVDb21wb25lbnQge1xuXG4gIGhhbmRsZUdyYW50UGVybWlzc2lvbiA9ICgpID0+IHtcbiAgICB3aW5kb3cuRmlyZWJhc2VQbHVnaW4uZ3JhbnRQZXJtaXNzaW9uKCk7XG4gIH07XG5cbiAgaGFuZGxlR2V0VG9rZW4gPSAoKSA9PiB7XG4gICAgLy8gc2VuZCB0b2tlbiB0byB0aGUgZGJcbiAgICB3aW5kb3cuRmlyZWJhc2VQbHVnaW4uZ2V0VG9rZW4odG9rZW4gPT4ge1xuICAgICAgY29uc29sZS5sb2coJ3Rva2VuIGlzJywgdG9rZW4pO1xuICAgIH0pO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPFJvdXRlcj5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdyZWV0aW5nXCI+SGVsbG8gd29ybGQhPC9kaXY+XG4gICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLmhhbmRsZUdyYW50UGVybWlzc2lvbn0+R3JhbnQgUGVybWlzc2lvbjwvYnV0dG9uPlxuICAgICAgICAgIDxidXR0b24gb25DbGljaz17dGhpcy5oYW5kbGVHZXRUb2tlbn0+R2V0IFRva2VuPC9idXR0b24+XG4gICAgICAgICAgPFJvdXRlcyAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvUm91dGVyPlxuICAgICk7XG4gIH1cbn0iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgQXBwIGZyb20gJy4vQXBwJztcblxuXG5mdW5jdGlvbiBzdGFydEFwcCgpIHtcbiAgUmVhY3RET00ucmVuZGVyKFxuICAgIDxBcHAvPixcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm9vdCcpXG4gICk7XG59XG5cbmlmKHdpbmRvdy5jb3Jkb3ZhKSB7XG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2RldmljZXJlYWR5Jywgc3RhcnRBcHAsIGZhbHNlKTtcbn0gZWxzZSB7XG4gIHN0YXJ0QXBwKCk7XG59XG5cbiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikodHJ1ZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuZ3JlZXRpbmcge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBmb250LXNpemU6IDIwcHg7XFxufVwiLCBcIlwiLCB7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCIvVXNlcnMvZ3Vlc3QvRGVza3RvcC93b3JrL2pkcmUvY29yZG92YS1zYW5kYm94L2NvcmRvdmEtYXBwL3NyYy9BcHAuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsWUFBWTtFQUNaLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsZ0JBQWdCO0NBQ2pCXCIsXCJmaWxlXCI6XCJBcHAuY3NzXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5ncmVldGluZyB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIGZvbnQtc2l6ZTogMjBweDtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG5cbi8vIGV4cG9ydHNcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS01LTIhLi9BcHAuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJzb3VyY2VNYXBcIjp0cnVlLFwiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tNS0yIS4vQXBwLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTUtMiEuL0FwcC5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJtb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFycikge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG4iLCJcbi8qKlxuICogV2hlbiBzb3VyY2UgbWFwcyBhcmUgZW5hYmxlZCwgYHN0eWxlLWxvYWRlcmAgdXNlcyBhIGxpbmsgZWxlbWVudCB3aXRoIGEgZGF0YS11cmkgdG9cbiAqIGVtYmVkIHRoZSBjc3Mgb24gdGhlIHBhZ2UuIFRoaXMgYnJlYWtzIGFsbCByZWxhdGl2ZSB1cmxzIGJlY2F1c2Ugbm93IHRoZXkgYXJlIHJlbGF0aXZlIHRvIGFcbiAqIGJ1bmRsZSBpbnN0ZWFkIG9mIHRoZSBjdXJyZW50IHBhZ2UuXG4gKlxuICogT25lIHNvbHV0aW9uIGlzIHRvIG9ubHkgdXNlIGZ1bGwgdXJscywgYnV0IHRoYXQgbWF5IGJlIGltcG9zc2libGUuXG4gKlxuICogSW5zdGVhZCwgdGhpcyBmdW5jdGlvbiBcImZpeGVzXCIgdGhlIHJlbGF0aXZlIHVybHMgdG8gYmUgYWJzb2x1dGUgYWNjb3JkaW5nIHRvIHRoZSBjdXJyZW50IHBhZ2UgbG9jYXRpb24uXG4gKlxuICogQSBydWRpbWVudGFyeSB0ZXN0IHN1aXRlIGlzIGxvY2F0ZWQgYXQgYHRlc3QvZml4VXJscy5qc2AgYW5kIGNhbiBiZSBydW4gdmlhIHRoZSBgbnBtIHRlc3RgIGNvbW1hbmQuXG4gKlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzcykge1xuICAvLyBnZXQgY3VycmVudCBsb2NhdGlvblxuICB2YXIgbG9jYXRpb24gPSB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHdpbmRvdy5sb2NhdGlvbjtcblxuICBpZiAoIWxvY2F0aW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiZml4VXJscyByZXF1aXJlcyB3aW5kb3cubG9jYXRpb25cIik7XG4gIH1cblxuXHQvLyBibGFuayBvciBudWxsP1xuXHRpZiAoIWNzcyB8fCB0eXBlb2YgY3NzICE9PSBcInN0cmluZ1wiKSB7XG5cdCAgcmV0dXJuIGNzcztcbiAgfVxuXG4gIHZhciBiYXNlVXJsID0gbG9jYXRpb24ucHJvdG9jb2wgKyBcIi8vXCIgKyBsb2NhdGlvbi5ob3N0O1xuICB2YXIgY3VycmVudERpciA9IGJhc2VVcmwgKyBsb2NhdGlvbi5wYXRobmFtZS5yZXBsYWNlKC9cXC9bXlxcL10qJC8sIFwiL1wiKTtcblxuXHQvLyBjb252ZXJ0IGVhY2ggdXJsKC4uLilcblx0Lypcblx0VGhpcyByZWd1bGFyIGV4cHJlc3Npb24gaXMganVzdCBhIHdheSB0byByZWN1cnNpdmVseSBtYXRjaCBicmFja2V0cyB3aXRoaW5cblx0YSBzdHJpbmcuXG5cblx0IC91cmxcXHMqXFwoICA9IE1hdGNoIG9uIHRoZSB3b3JkIFwidXJsXCIgd2l0aCBhbnkgd2hpdGVzcGFjZSBhZnRlciBpdCBhbmQgdGhlbiBhIHBhcmVuc1xuXHQgICAoICA9IFN0YXJ0IGEgY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgKD86ICA9IFN0YXJ0IGEgbm9uLWNhcHR1cmluZyBncm91cFxuXHQgICAgICAgICBbXikoXSAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKD86ICA9IFN0YXJ0IGFub3RoZXIgbm9uLWNhcHR1cmluZyBncm91cHNcblx0ICAgICAgICAgICAgICAgICBbXikoXSsgID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgICAgIFteKShdKiAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICBcXCkgID0gTWF0Y2ggYSBlbmQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICkgID0gRW5kIEdyb3VwXG4gICAgICAgICAgICAgICpcXCkgPSBNYXRjaCBhbnl0aGluZyBhbmQgdGhlbiBhIGNsb3NlIHBhcmVuc1xuICAgICAgICAgICkgID0gQ2xvc2Ugbm9uLWNhcHR1cmluZyBncm91cFxuICAgICAgICAgICogID0gTWF0Y2ggYW55dGhpbmdcbiAgICAgICApICA9IENsb3NlIGNhcHR1cmluZyBncm91cFxuXHQgXFwpICA9IE1hdGNoIGEgY2xvc2UgcGFyZW5zXG5cblx0IC9naSAgPSBHZXQgYWxsIG1hdGNoZXMsIG5vdCB0aGUgZmlyc3QuICBCZSBjYXNlIGluc2Vuc2l0aXZlLlxuXHQgKi9cblx0dmFyIGZpeGVkQ3NzID0gY3NzLnJlcGxhY2UoL3VybFxccypcXCgoKD86W14pKF18XFwoKD86W14pKF0rfFxcKFteKShdKlxcKSkqXFwpKSopXFwpL2dpLCBmdW5jdGlvbihmdWxsTWF0Y2gsIG9yaWdVcmwpIHtcblx0XHQvLyBzdHJpcCBxdW90ZXMgKGlmIHRoZXkgZXhpc3QpXG5cdFx0dmFyIHVucXVvdGVkT3JpZ1VybCA9IG9yaWdVcmxcblx0XHRcdC50cmltKClcblx0XHRcdC5yZXBsYWNlKC9eXCIoLiopXCIkLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pXG5cdFx0XHQucmVwbGFjZSgvXicoLiopJyQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSk7XG5cblx0XHQvLyBhbHJlYWR5IGEgZnVsbCB1cmw/IG5vIGNoYW5nZVxuXHRcdGlmICgvXigjfGRhdGE6fGh0dHA6XFwvXFwvfGh0dHBzOlxcL1xcL3xmaWxlOlxcL1xcL1xcL3xcXHMqJCkvaS50ZXN0KHVucXVvdGVkT3JpZ1VybCkpIHtcblx0XHQgIHJldHVybiBmdWxsTWF0Y2g7XG5cdFx0fVxuXG5cdFx0Ly8gY29udmVydCB0aGUgdXJsIHRvIGEgZnVsbCB1cmxcblx0XHR2YXIgbmV3VXJsO1xuXG5cdFx0aWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiLy9cIikgPT09IDApIHtcblx0XHQgIFx0Ly9UT0RPOiBzaG91bGQgd2UgYWRkIHByb3RvY29sP1xuXHRcdFx0bmV3VXJsID0gdW5xdW90ZWRPcmlnVXJsO1xuXHRcdH0gZWxzZSBpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvXCIpID09PSAwKSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byB0aGUgYmFzZSB1cmxcblx0XHRcdG5ld1VybCA9IGJhc2VVcmwgKyB1bnF1b3RlZE9yaWdVcmw7IC8vIGFscmVhZHkgc3RhcnRzIHdpdGggJy8nXG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIGN1cnJlbnQgZGlyZWN0b3J5XG5cdFx0XHRuZXdVcmwgPSBjdXJyZW50RGlyICsgdW5xdW90ZWRPcmlnVXJsLnJlcGxhY2UoL15cXC5cXC8vLCBcIlwiKTsgLy8gU3RyaXAgbGVhZGluZyAnLi8nXG5cdFx0fVxuXG5cdFx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCB1cmwoLi4uKVxuXHRcdHJldHVybiBcInVybChcIiArIEpTT04uc3RyaW5naWZ5KG5ld1VybCkgKyBcIilcIjtcblx0fSk7XG5cblx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCBjc3Ncblx0cmV0dXJuIGZpeGVkQ3NzO1xufTtcbiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikodHJ1ZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuZ2FsbGVyeSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuXFxuLmdhbGxlcnktaW1hZ2Uge1xcbiAgbWF4LXdpZHRoOiA0MDBweDtcXG4gIC1vLW9iamVjdC1maXQ6IGNvbnRhaW47XFxuICAgICBvYmplY3QtZml0OiBjb250YWluO1xcbn1cIiwgXCJcIiwge1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wiL1VzZXJzL2d1ZXN0L0Rlc2t0b3Avd29yay9qZHJlL2NvcmRvdmEtc2FuZGJveC9jb3Jkb3ZhLWFwcC9zcmMvR2FsbGVyeS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxjQUFjO0VBQ2QsdUJBQXVCO0NBQ3hCOztBQUVEO0VBQ0UsaUJBQWlCO0VBQ2pCLHVCQUFvQjtLQUFwQixvQkFBb0I7Q0FDckJcIixcImZpbGVcIjpcIkdhbGxlcnkuY3NzXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5nYWxsZXJ5IHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG5cXG4uZ2FsbGVyeS1pbWFnZSB7XFxuICBtYXgtd2lkdGg6IDQwMHB4O1xcbiAgb2JqZWN0LWZpdDogY29udGFpbjtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG5cbi8vIGV4cG9ydHNcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS01LTIhLi9HYWxsZXJ5LmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wic291cmNlTWFwXCI6dHJ1ZSxcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTUtMiEuL0dhbGxlcnkuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tNS0yIS4vR2FsbGVyeS5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIHRocm93IGVycjtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW1cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcyA9IGVtcHR5RnVuY3Rpb247XG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7Kn0gb2JqZWN0IFRoZSBvYmplY3QgdG8gY2hlY2suXG4gKiBAcmV0dXJuIHtib29sZWFufSBXaGV0aGVyIG9yIG5vdCB0aGUgb2JqZWN0IGlzIGEgRE9NIG5vZGUuXG4gKi9cbmZ1bmN0aW9uIGlzTm9kZShvYmplY3QpIHtcbiAgdmFyIGRvYyA9IG9iamVjdCA/IG9iamVjdC5vd25lckRvY3VtZW50IHx8IG9iamVjdCA6IGRvY3VtZW50O1xuICB2YXIgZGVmYXVsdFZpZXcgPSBkb2MuZGVmYXVsdFZpZXcgfHwgd2luZG93O1xuICByZXR1cm4gISEob2JqZWN0ICYmICh0eXBlb2YgZGVmYXVsdFZpZXcuTm9kZSA9PT0gJ2Z1bmN0aW9uJyA/IG9iamVjdCBpbnN0YW5jZW9mIGRlZmF1bHRWaWV3Lk5vZGUgOiB0eXBlb2Ygb2JqZWN0ID09PSAnb2JqZWN0JyAmJiB0eXBlb2Ygb2JqZWN0Lm5vZGVUeXBlID09PSAnbnVtYmVyJyAmJiB0eXBlb2Ygb2JqZWN0Lm5vZGVOYW1lID09PSAnc3RyaW5nJykpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzTm9kZTsiLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqL1xuXG52YXIgaXNOb2RlID0gcmVxdWlyZSgnLi9pc05vZGUnKTtcblxuLyoqXG4gKiBAcGFyYW0geyp9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGNoZWNrLlxuICogQHJldHVybiB7Ym9vbGVhbn0gV2hldGhlciBvciBub3QgdGhlIG9iamVjdCBpcyBhIERPTSB0ZXh0IG5vZGUuXG4gKi9cbmZ1bmN0aW9uIGlzVGV4dE5vZGUob2JqZWN0KSB7XG4gIHJldHVybiBpc05vZGUob2JqZWN0KSAmJiBvYmplY3Qubm9kZVR5cGUgPT0gMztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc1RleHROb2RlOyIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xuXG52YXIgaXNUZXh0Tm9kZSA9IHJlcXVpcmUoJy4vaXNUZXh0Tm9kZScpO1xuXG4vKmVzbGludC1kaXNhYmxlIG5vLWJpdHdpc2UgKi9cblxuLyoqXG4gKiBDaGVja3MgaWYgYSBnaXZlbiBET00gbm9kZSBjb250YWlucyBvciBpcyBhbm90aGVyIERPTSBub2RlLlxuICovXG5mdW5jdGlvbiBjb250YWluc05vZGUob3V0ZXJOb2RlLCBpbm5lck5vZGUpIHtcbiAgaWYgKCFvdXRlck5vZGUgfHwgIWlubmVyTm9kZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSBlbHNlIGlmIChvdXRlck5vZGUgPT09IGlubmVyTm9kZSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9IGVsc2UgaWYgKGlzVGV4dE5vZGUob3V0ZXJOb2RlKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSBlbHNlIGlmIChpc1RleHROb2RlKGlubmVyTm9kZSkpIHtcbiAgICByZXR1cm4gY29udGFpbnNOb2RlKG91dGVyTm9kZSwgaW5uZXJOb2RlLnBhcmVudE5vZGUpO1xuICB9IGVsc2UgaWYgKCdjb250YWlucycgaW4gb3V0ZXJOb2RlKSB7XG4gICAgcmV0dXJuIG91dGVyTm9kZS5jb250YWlucyhpbm5lck5vZGUpO1xuICB9IGVsc2UgaWYgKG91dGVyTm9kZS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbikge1xuICAgIHJldHVybiAhIShvdXRlck5vZGUuY29tcGFyZURvY3VtZW50UG9zaXRpb24oaW5uZXJOb2RlKSAmIDE2KTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb250YWluc05vZGU7IiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAdHlwZWNoZWNrc1xuICogXG4gKi9cblxuLyplc2xpbnQtZGlzYWJsZSBuby1zZWxmLWNvbXBhcmUgKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIGlubGluZWQgT2JqZWN0LmlzIHBvbHlmaWxsIHRvIGF2b2lkIHJlcXVpcmluZyBjb25zdW1lcnMgc2hpcCB0aGVpciBvd25cbiAqIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL09iamVjdC9pc1xuICovXG5mdW5jdGlvbiBpcyh4LCB5KSB7XG4gIC8vIFNhbWVWYWx1ZSBhbGdvcml0aG1cbiAgaWYgKHggPT09IHkpIHtcbiAgICAvLyBTdGVwcyAxLTUsIDctMTBcbiAgICAvLyBTdGVwcyA2LmItNi5lOiArMCAhPSAtMFxuICAgIC8vIEFkZGVkIHRoZSBub256ZXJvIHkgY2hlY2sgdG8gbWFrZSBGbG93IGhhcHB5LCBidXQgaXQgaXMgcmVkdW5kYW50XG4gICAgcmV0dXJuIHggIT09IDAgfHwgeSAhPT0gMCB8fCAxIC8geCA9PT0gMSAvIHk7XG4gIH0gZWxzZSB7XG4gICAgLy8gU3RlcCA2LmE6IE5hTiA9PSBOYU5cbiAgICByZXR1cm4geCAhPT0geCAmJiB5ICE9PSB5O1xuICB9XG59XG5cbi8qKlxuICogUGVyZm9ybXMgZXF1YWxpdHkgYnkgaXRlcmF0aW5nIHRocm91Z2gga2V5cyBvbiBhbiBvYmplY3QgYW5kIHJldHVybmluZyBmYWxzZVxuICogd2hlbiBhbnkga2V5IGhhcyB2YWx1ZXMgd2hpY2ggYXJlIG5vdCBzdHJpY3RseSBlcXVhbCBiZXR3ZWVuIHRoZSBhcmd1bWVudHMuXG4gKiBSZXR1cm5zIHRydWUgd2hlbiB0aGUgdmFsdWVzIG9mIGFsbCBrZXlzIGFyZSBzdHJpY3RseSBlcXVhbC5cbiAqL1xuZnVuY3Rpb24gc2hhbGxvd0VxdWFsKG9iakEsIG9iakIpIHtcbiAgaWYgKGlzKG9iakEsIG9iakIpKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBpZiAodHlwZW9mIG9iakEgIT09ICdvYmplY3QnIHx8IG9iakEgPT09IG51bGwgfHwgdHlwZW9mIG9iakIgIT09ICdvYmplY3QnIHx8IG9iakIgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB2YXIga2V5c0EgPSBPYmplY3Qua2V5cyhvYmpBKTtcbiAgdmFyIGtleXNCID0gT2JqZWN0LmtleXMob2JqQik7XG5cbiAgaWYgKGtleXNBLmxlbmd0aCAhPT0ga2V5c0IubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgLy8gVGVzdCBmb3IgQSdzIGtleXMgZGlmZmVyZW50IGZyb20gQi5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzQS5sZW5ndGg7IGkrKykge1xuICAgIGlmICghaGFzT3duUHJvcGVydHkuY2FsbChvYmpCLCBrZXlzQVtpXSkgfHwgIWlzKG9iakFba2V5c0FbaV1dLCBvYmpCW2tleXNBW2ldXSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaGFsbG93RXF1YWw7IiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKi9cblxuLyogZXNsaW50LWRpc2FibGUgZmItd3d3L3R5cGVvZi11bmRlZmluZWQgKi9cblxuLyoqXG4gKiBTYW1lIGFzIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgYnV0IHdyYXBzIGluIGEgdHJ5LWNhdGNoIGJsb2NrLiBJbiBJRSBpdCBpc1xuICogbm90IHNhZmUgdG8gY2FsbCBkb2N1bWVudC5hY3RpdmVFbGVtZW50IGlmIHRoZXJlIGlzIG5vdGhpbmcgZm9jdXNlZC5cbiAqXG4gKiBUaGUgYWN0aXZlRWxlbWVudCB3aWxsIGJlIG51bGwgb25seSBpZiB0aGUgZG9jdW1lbnQgb3IgZG9jdW1lbnQgYm9keSBpcyBub3RcbiAqIHlldCBkZWZpbmVkLlxuICpcbiAqIEBwYXJhbSB7P0RPTURvY3VtZW50fSBkb2MgRGVmYXVsdHMgdG8gY3VycmVudCBkb2N1bWVudC5cbiAqIEByZXR1cm4gez9ET01FbGVtZW50fVxuICovXG5mdW5jdGlvbiBnZXRBY3RpdmVFbGVtZW50KGRvYykgLyo/RE9NRWxlbWVudCove1xuICBkb2MgPSBkb2MgfHwgKHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcgPyBkb2N1bWVudCA6IHVuZGVmaW5lZCk7XG4gIGlmICh0eXBlb2YgZG9jID09PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHRyeSB7XG4gICAgcmV0dXJuIGRvYy5hY3RpdmVFbGVtZW50IHx8IGRvYy5ib2R5O1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGRvYy5ib2R5O1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0QWN0aXZlRWxlbWVudDsiLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBjYW5Vc2VET00gPSAhISh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgJiYgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xuXG4vKipcbiAqIFNpbXBsZSwgbGlnaHR3ZWlnaHQgbW9kdWxlIGFzc2lzdGluZyB3aXRoIHRoZSBkZXRlY3Rpb24gYW5kIGNvbnRleHQgb2ZcbiAqIFdvcmtlci4gSGVscHMgYXZvaWQgY2lyY3VsYXIgZGVwZW5kZW5jaWVzIGFuZCBhbGxvd3MgY29kZSB0byByZWFzb24gYWJvdXRcbiAqIHdoZXRoZXIgb3Igbm90IHRoZXkgYXJlIGluIGEgV29ya2VyLCBldmVuIGlmIHRoZXkgbmV2ZXIgaW5jbHVkZSB0aGUgbWFpblxuICogYFJlYWN0V29ya2VyYCBkZXBlbmRlbmN5LlxuICovXG52YXIgRXhlY3V0aW9uRW52aXJvbm1lbnQgPSB7XG5cbiAgY2FuVXNlRE9NOiBjYW5Vc2VET00sXG5cbiAgY2FuVXNlV29ya2VyczogdHlwZW9mIFdvcmtlciAhPT0gJ3VuZGVmaW5lZCcsXG5cbiAgY2FuVXNlRXZlbnRMaXN0ZW5lcnM6IGNhblVzZURPTSAmJiAhISh3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciB8fCB3aW5kb3cuYXR0YWNoRXZlbnQpLFxuXG4gIGNhblVzZVZpZXdwb3J0OiBjYW5Vc2VET00gJiYgISF3aW5kb3cuc2NyZWVuLFxuXG4gIGlzSW5Xb3JrZXI6ICFjYW5Vc2VET00gLy8gRm9yIG5vdywgdGhpcyBpcyB0cnVlIC0gbWlnaHQgY2hhbmdlIGluIHRoZSBmdXR1cmUuXG5cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRXhlY3V0aW9uRW52aXJvbm1lbnQ7IiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi40LjFcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwiZmJqcy9saWIvaW52YXJpYW50XCIpLGJhPXJlcXVpcmUoXCJyZWFjdFwiKSxtPXJlcXVpcmUoXCJmYmpzL2xpYi9FeGVjdXRpb25FbnZpcm9ubWVudFwiKSxwPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLHY9cmVxdWlyZShcImZianMvbGliL2VtcHR5RnVuY3Rpb25cIiksZGE9cmVxdWlyZShcImZianMvbGliL2dldEFjdGl2ZUVsZW1lbnRcIiksZWE9cmVxdWlyZShcImZianMvbGliL3NoYWxsb3dFcXVhbFwiKSxmYT1yZXF1aXJlKFwiZmJqcy9saWIvY29udGFpbnNOb2RlXCIpLGhhPXJlcXVpcmUoXCJmYmpzL2xpYi9lbXB0eU9iamVjdFwiKTtcbmZ1bmN0aW9uIEEoYSl7Zm9yKHZhciBiPWFyZ3VtZW50cy5sZW5ndGgtMSxjPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxkPTA7ZDxiO2QrKyljKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tkKzFdKTthYSghMSxcIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCAlcyBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuIFwiLGMpfWJhP3ZvaWQgMDpBKFwiMjI3XCIpO1xuZnVuY3Rpb24gaWEoYSxiLGMsZCxlLGYsZyxoLGspe3RoaXMuX2hhc0NhdWdodEVycm9yPSExO3RoaXMuX2NhdWdodEVycm9yPW51bGw7dmFyIG49QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsbil9Y2F0Y2gocil7dGhpcy5fY2F1Z2h0RXJyb3I9cix0aGlzLl9oYXNDYXVnaHRFcnJvcj0hMH19XG52YXIgQj17X2NhdWdodEVycm9yOm51bGwsX2hhc0NhdWdodEVycm9yOiExLF9yZXRocm93RXJyb3I6bnVsbCxfaGFzUmV0aHJvd0Vycm9yOiExLGludm9rZUd1YXJkZWRDYWxsYmFjazpmdW5jdGlvbihhLGIsYyxkLGUsZixnLGgsayl7aWEuYXBwbHkoQixhcmd1bWVudHMpfSxpbnZva2VHdWFyZGVkQ2FsbGJhY2tBbmRDYXRjaEZpcnN0RXJyb3I6ZnVuY3Rpb24oYSxiLGMsZCxlLGYsZyxoLGspe0IuaW52b2tlR3VhcmRlZENhbGxiYWNrLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihCLmhhc0NhdWdodEVycm9yKCkpe3ZhciBuPUIuY2xlYXJDYXVnaHRFcnJvcigpO0IuX2hhc1JldGhyb3dFcnJvcnx8KEIuX2hhc1JldGhyb3dFcnJvcj0hMCxCLl9yZXRocm93RXJyb3I9bil9fSxyZXRocm93Q2F1Z2h0RXJyb3I6ZnVuY3Rpb24oKXtyZXR1cm4ga2EuYXBwbHkoQixhcmd1bWVudHMpfSxoYXNDYXVnaHRFcnJvcjpmdW5jdGlvbigpe3JldHVybiBCLl9oYXNDYXVnaHRFcnJvcn0sY2xlYXJDYXVnaHRFcnJvcjpmdW5jdGlvbigpe2lmKEIuX2hhc0NhdWdodEVycm9yKXt2YXIgYT1cbkIuX2NhdWdodEVycm9yO0IuX2NhdWdodEVycm9yPW51bGw7Qi5faGFzQ2F1Z2h0RXJyb3I9ITE7cmV0dXJuIGF9QShcIjE5OFwiKX19O2Z1bmN0aW9uIGthKCl7aWYoQi5faGFzUmV0aHJvd0Vycm9yKXt2YXIgYT1CLl9yZXRocm93RXJyb3I7Qi5fcmV0aHJvd0Vycm9yPW51bGw7Qi5faGFzUmV0aHJvd0Vycm9yPSExO3Rocm93IGE7fX12YXIgbGE9bnVsbCxtYT17fTtcbmZ1bmN0aW9uIG5hKCl7aWYobGEpZm9yKHZhciBhIGluIG1hKXt2YXIgYj1tYVthXSxjPWxhLmluZGV4T2YoYSk7LTE8Yz92b2lkIDA6QShcIjk2XCIsYSk7aWYoIW9hW2NdKXtiLmV4dHJhY3RFdmVudHM/dm9pZCAwOkEoXCI5N1wiLGEpO29hW2NdPWI7Yz1iLmV2ZW50VHlwZXM7Zm9yKHZhciBkIGluIGMpe3ZhciBlPXZvaWQgMDt2YXIgZj1jW2RdLGc9YixoPWQ7cGEuaGFzT3duUHJvcGVydHkoaCk/QShcIjk5XCIsaCk6dm9pZCAwO3BhW2hdPWY7dmFyIGs9Zi5waGFzZWRSZWdpc3RyYXRpb25OYW1lcztpZihrKXtmb3IoZSBpbiBrKWsuaGFzT3duUHJvcGVydHkoZSkmJnFhKGtbZV0sZyxoKTtlPSEwfWVsc2UgZi5yZWdpc3RyYXRpb25OYW1lPyhxYShmLnJlZ2lzdHJhdGlvbk5hbWUsZyxoKSxlPSEwKTplPSExO2U/dm9pZCAwOkEoXCI5OFwiLGQsYSl9fX19XG5mdW5jdGlvbiBxYShhLGIsYyl7cmFbYV0/QShcIjEwMFwiLGEpOnZvaWQgMDtyYVthXT1iO3NhW2FdPWIuZXZlbnRUeXBlc1tjXS5kZXBlbmRlbmNpZXN9dmFyIG9hPVtdLHBhPXt9LHJhPXt9LHNhPXt9O2Z1bmN0aW9uIHRhKGEpe2xhP0EoXCIxMDFcIik6dm9pZCAwO2xhPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGEpO25hKCl9ZnVuY3Rpb24gdWEoYSl7dmFyIGI9ITEsYztmb3IoYyBpbiBhKWlmKGEuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPWFbY107bWEuaGFzT3duUHJvcGVydHkoYykmJm1hW2NdPT09ZHx8KG1hW2NdP0EoXCIxMDJcIixjKTp2b2lkIDAsbWFbY109ZCxiPSEwKX1iJiZuYSgpfVxudmFyIHZhPXtwbHVnaW5zOm9hLGV2ZW50TmFtZURpc3BhdGNoQ29uZmlnczpwYSxyZWdpc3RyYXRpb25OYW1lTW9kdWxlczpyYSxyZWdpc3RyYXRpb25OYW1lRGVwZW5kZW5jaWVzOnNhLHBvc3NpYmxlUmVnaXN0cmF0aW9uTmFtZXM6bnVsbCxpbmplY3RFdmVudFBsdWdpbk9yZGVyOnRhLGluamVjdEV2ZW50UGx1Z2luc0J5TmFtZTp1YX0sd2E9bnVsbCx4YT1udWxsLHlhPW51bGw7ZnVuY3Rpb24gemEoYSxiLGMsZCl7Yj1hLnR5cGV8fFwidW5rbm93bi1ldmVudFwiO2EuY3VycmVudFRhcmdldD15YShkKTtCLmludm9rZUd1YXJkZWRDYWxsYmFja0FuZENhdGNoRmlyc3RFcnJvcihiLGMsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfVxuZnVuY3Rpb24gQWEoYSxiKXtudWxsPT1iP0EoXCIzMFwiKTp2b2lkIDA7aWYobnVsbD09YSlyZXR1cm4gYjtpZihBcnJheS5pc0FycmF5KGEpKXtpZihBcnJheS5pc0FycmF5KGIpKXJldHVybiBhLnB1c2guYXBwbHkoYSxiKSxhO2EucHVzaChiKTtyZXR1cm4gYX1yZXR1cm4gQXJyYXkuaXNBcnJheShiKT9bYV0uY29uY2F0KGIpOlthLGJdfWZ1bmN0aW9uIEJhKGEsYixjKXtBcnJheS5pc0FycmF5KGEpP2EuZm9yRWFjaChiLGMpOmEmJmIuY2FsbChjLGEpfXZhciBDYT1udWxsO1xuZnVuY3Rpb24gRGEoYSxiKXtpZihhKXt2YXIgYz1hLl9kaXNwYXRjaExpc3RlbmVycyxkPWEuX2Rpc3BhdGNoSW5zdGFuY2VzO2lmKEFycmF5LmlzQXJyYXkoYykpZm9yKHZhciBlPTA7ZTxjLmxlbmd0aCYmIWEuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTtlKyspemEoYSxiLGNbZV0sZFtlXSk7ZWxzZSBjJiZ6YShhLGIsYyxkKTthLl9kaXNwYXRjaExpc3RlbmVycz1udWxsO2EuX2Rpc3BhdGNoSW5zdGFuY2VzPW51bGw7YS5pc1BlcnNpc3RlbnQoKXx8YS5jb25zdHJ1Y3Rvci5yZWxlYXNlKGEpfX1mdW5jdGlvbiBFYShhKXtyZXR1cm4gRGEoYSwhMCl9ZnVuY3Rpb24gRmEoYSl7cmV0dXJuIERhKGEsITEpfXZhciBHYT17aW5qZWN0RXZlbnRQbHVnaW5PcmRlcjp0YSxpbmplY3RFdmVudFBsdWdpbnNCeU5hbWU6dWF9O1xuZnVuY3Rpb24gSGEoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtpZighYylyZXR1cm4gbnVsbDt2YXIgZD13YShjKTtpZighZClyZXR1cm4gbnVsbDtjPWRbYl07YTpzd2l0Y2goYil7Y2FzZSBcIm9uQ2xpY2tcIjpjYXNlIFwib25DbGlja0NhcHR1cmVcIjpjYXNlIFwib25Eb3VibGVDbGlja1wiOmNhc2UgXCJvbkRvdWJsZUNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRG93blwiOmNhc2UgXCJvbk1vdXNlRG93bkNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZU1vdmVcIjpjYXNlIFwib25Nb3VzZU1vdmVDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VVcFwiOmNhc2UgXCJvbk1vdXNlVXBDYXB0dXJlXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtjJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz9BKFwiMjMxXCIsYix0eXBlb2YgYyk6dm9pZCAwO1xucmV0dXJuIGN9ZnVuY3Rpb24gSWEoYSxiKXtudWxsIT09YSYmKENhPUFhKENhLGEpKTthPUNhO0NhPW51bGw7YSYmKGI/QmEoYSxFYSk6QmEoYSxGYSksQ2E/QShcIjk1XCIpOnZvaWQgMCxCLnJldGhyb3dDYXVnaHRFcnJvcigpKX1mdW5jdGlvbiBKYShhLGIsYyxkKXtmb3IodmFyIGU9bnVsbCxmPTA7ZjxvYS5sZW5ndGg7ZisrKXt2YXIgZz1vYVtmXTtnJiYoZz1nLmV4dHJhY3RFdmVudHMoYSxiLGMsZCkpJiYoZT1BYShlLGcpKX1JYShlLCExKX12YXIgS2E9e2luamVjdGlvbjpHYSxnZXRMaXN0ZW5lcjpIYSxydW5FdmVudHNJbkJhdGNoOklhLHJ1bkV4dHJhY3RlZEV2ZW50c0luQmF0Y2g6SmF9LExhPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLEM9XCJfX3JlYWN0SW50ZXJuYWxJbnN0YW5jZSRcIitMYSxNYT1cIl9fcmVhY3RFdmVudEhhbmRsZXJzJFwiK0xhO1xuZnVuY3Rpb24gTmEoYSl7aWYoYVtDXSlyZXR1cm4gYVtDXTtmb3IoOyFhW0NdOylpZihhLnBhcmVudE5vZGUpYT1hLnBhcmVudE5vZGU7ZWxzZSByZXR1cm4gbnVsbDthPWFbQ107cmV0dXJuIDU9PT1hLnRhZ3x8Nj09PWEudGFnP2E6bnVsbH1mdW5jdGlvbiBPYShhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7QShcIjMzXCIpfWZ1bmN0aW9uIFBhKGEpe3JldHVybiBhW01hXXx8bnVsbH12YXIgUWE9e3ByZWNhY2hlRmliZXJOb2RlOmZ1bmN0aW9uKGEsYil7YltDXT1hfSxnZXRDbG9zZXN0SW5zdGFuY2VGcm9tTm9kZTpOYSxnZXRJbnN0YW5jZUZyb21Ob2RlOmZ1bmN0aW9uKGEpe2E9YVtDXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWc/bnVsbDphfSxnZXROb2RlRnJvbUluc3RhbmNlOk9hLGdldEZpYmVyQ3VycmVudFByb3BzRnJvbU5vZGU6UGEsdXBkYXRlRmliZXJQcm9wczpmdW5jdGlvbihhLGIpe2FbTWFdPWJ9fTtcbmZ1bmN0aW9uIEYoYSl7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1mdW5jdGlvbiBSYShhLGIsYyl7Zm9yKHZhciBkPVtdO2E7KWQucHVzaChhKSxhPUYoYSk7Zm9yKGE9ZC5sZW5ndGg7MDxhLS07KWIoZFthXSxcImNhcHR1cmVkXCIsYyk7Zm9yKGE9MDthPGQubGVuZ3RoO2ErKyliKGRbYV0sXCJidWJibGVkXCIsYyl9ZnVuY3Rpb24gU2EoYSxiLGMpe2lmKGI9SGEoYSxjLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzW2JdKSljLl9kaXNwYXRjaExpc3RlbmVycz1BYShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz1BYShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKX1mdW5jdGlvbiBUYShhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzJiZSYShhLl90YXJnZXRJbnN0LFNhLGEpfVxuZnVuY3Rpb24gVWEoYSl7aWYoYSYmYS5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lcyl7dmFyIGI9YS5fdGFyZ2V0SW5zdDtiPWI/RihiKTpudWxsO1JhKGIsU2EsYSl9fWZ1bmN0aW9uIFZhKGEsYixjKXthJiZjJiZjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJihiPUhhKGEsYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lKSkmJihjLl9kaXNwYXRjaExpc3RlbmVycz1BYShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz1BYShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKSl9ZnVuY3Rpb24gWGEoYSl7YSYmYS5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiZWYShhLl90YXJnZXRJbnN0LG51bGwsYSl9ZnVuY3Rpb24gWWEoYSl7QmEoYSxUYSl9XG5mdW5jdGlvbiBaYShhLGIsYyxkKXtpZihjJiZkKWE6e3ZhciBlPWM7Zm9yKHZhciBmPWQsZz0wLGg9ZTtoO2g9RihoKSlnKys7aD0wO2Zvcih2YXIgaz1mO2s7az1GKGspKWgrKztmb3IoOzA8Zy1oOyllPUYoZSksZy0tO2Zvcig7MDxoLWc7KWY9RihmKSxoLS07Zm9yKDtnLS07KXtpZihlPT09Znx8ZT09PWYuYWx0ZXJuYXRlKWJyZWFrIGE7ZT1GKGUpO2Y9RihmKX1lPW51bGx9ZWxzZSBlPW51bGw7Zj1lO2ZvcihlPVtdO2MmJmMhPT1mOyl7Zz1jLmFsdGVybmF0ZTtpZihudWxsIT09ZyYmZz09PWYpYnJlYWs7ZS5wdXNoKGMpO2M9RihjKX1mb3IoYz1bXTtkJiZkIT09Zjspe2c9ZC5hbHRlcm5hdGU7aWYobnVsbCE9PWcmJmc9PT1mKWJyZWFrO2MucHVzaChkKTtkPUYoZCl9Zm9yKGQ9MDtkPGUubGVuZ3RoO2QrKylWYShlW2RdLFwiYnViYmxlZFwiLGEpO2ZvcihhPWMubGVuZ3RoOzA8YS0tOylWYShjW2FdLFwiY2FwdHVyZWRcIixiKX1cbnZhciAkYT17YWNjdW11bGF0ZVR3b1BoYXNlRGlzcGF0Y2hlczpZYSxhY2N1bXVsYXRlVHdvUGhhc2VEaXNwYXRjaGVzU2tpcFRhcmdldDpmdW5jdGlvbihhKXtCYShhLFVhKX0sYWNjdW11bGF0ZUVudGVyTGVhdmVEaXNwYXRjaGVzOlphLGFjY3VtdWxhdGVEaXJlY3REaXNwYXRjaGVzOmZ1bmN0aW9uKGEpe0JhKGEsWGEpfX07ZnVuY3Rpb24gYWIoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtjW1wibXNcIithXT1cIk1TXCIrYjtjW1wiT1wiK2FdPVwib1wiK2IudG9Mb3dlckNhc2UoKTtyZXR1cm4gY31cbnZhciBiYj17YW5pbWF0aW9uZW5kOmFiKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOmFiKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6YWIoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6YWIoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxjYj17fSxkYj17fTttLmNhblVzZURPTSYmKGRiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIGJiLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIGJiLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIGJiLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIGJiLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7XG5mdW5jdGlvbiBlYihhKXtpZihjYlthXSlyZXR1cm4gY2JbYV07aWYoIWJiW2FdKXJldHVybiBhO3ZhciBiPWJiW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIGRiKXJldHVybiBjYlthXT1iW2NdO3JldHVybiBhfXZhciBmYj1lYihcImFuaW1hdGlvbmVuZFwiKSxnYj1lYihcImFuaW1hdGlvbml0ZXJhdGlvblwiKSxoYj1lYihcImFuaW1hdGlvbnN0YXJ0XCIpLGliPWViKFwidHJhbnNpdGlvbmVuZFwiKSxqYj1cImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2Ugc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIiksa2I9bnVsbDtcbmZ1bmN0aW9uIGxiKCl7IWtiJiZtLmNhblVzZURPTSYmKGtiPVwidGV4dENvbnRlbnRcImluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudD9cInRleHRDb250ZW50XCI6XCJpbm5lclRleHRcIik7cmV0dXJuIGtifXZhciBHPXtfcm9vdDpudWxsLF9zdGFydFRleHQ6bnVsbCxfZmFsbGJhY2tUZXh0Om51bGx9O2Z1bmN0aW9uIG1iKCl7aWYoRy5fZmFsbGJhY2tUZXh0KXJldHVybiBHLl9mYWxsYmFja1RleHQ7dmFyIGEsYj1HLl9zdGFydFRleHQsYz1iLmxlbmd0aCxkLGU9bmIoKSxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO0cuX2ZhbGxiYWNrVGV4dD1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApO3JldHVybiBHLl9mYWxsYmFja1RleHR9ZnVuY3Rpb24gbmIoKXtyZXR1cm5cInZhbHVlXCJpbiBHLl9yb290P0cuX3Jvb3QudmFsdWU6Ry5fcm9vdFtsYigpXX1cbnZhciBvYj1cImRpc3BhdGNoQ29uZmlnIF90YXJnZXRJbnN0IG5hdGl2ZUV2ZW50IGlzRGVmYXVsdFByZXZlbnRlZCBpc1Byb3BhZ2F0aW9uU3RvcHBlZCBfZGlzcGF0Y2hMaXN0ZW5lcnMgX2Rpc3BhdGNoSW5zdGFuY2VzXCIuc3BsaXQoXCIgXCIpLHBiPXt0eXBlOm51bGwsdGFyZ2V0Om51bGwsY3VycmVudFRhcmdldDp2LnRoYXRSZXR1cm5zTnVsbCxldmVudFBoYXNlOm51bGwsYnViYmxlczpudWxsLGNhbmNlbGFibGU6bnVsbCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOm51bGwsaXNUcnVzdGVkOm51bGx9O1xuZnVuY3Rpb24gSChhLGIsYyxkKXt0aGlzLmRpc3BhdGNoQ29uZmlnPWE7dGhpcy5fdGFyZ2V0SW5zdD1iO3RoaXMubmF0aXZlRXZlbnQ9YzthPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlO2Zvcih2YXIgZSBpbiBhKWEuaGFzT3duUHJvcGVydHkoZSkmJigoYj1hW2VdKT90aGlzW2VdPWIoYyk6XCJ0YXJnZXRcIj09PWU/dGhpcy50YXJnZXQ9ZDp0aGlzW2VdPWNbZV0pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1jLmRlZmF1bHRQcmV2ZW50ZWQ/Yy5kZWZhdWx0UHJldmVudGVkOiExPT09Yy5yZXR1cm5WYWx1ZSk/di50aGF0UmV0dXJuc1RydWU6di50aGF0UmV0dXJuc0ZhbHNlO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9di50aGF0UmV0dXJuc0ZhbHNlO3JldHVybiB0aGlzfVxucChILnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmKGEucmV0dXJuVmFsdWU9ITEpLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPXYudGhhdFJldHVybnNUcnVlKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5zdG9wUHJvcGFnYXRpb24/YS5zdG9wUHJvcGFnYXRpb24oKTpcInVua25vd25cIiE9PXR5cGVvZiBhLmNhbmNlbEJ1YmJsZSYmKGEuY2FuY2VsQnViYmxlPSEwKSx0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXYudGhhdFJldHVybnNUcnVlKX0scGVyc2lzdDpmdW5jdGlvbigpe3RoaXMuaXNQZXJzaXN0ZW50PXYudGhhdFJldHVybnNUcnVlfSxpc1BlcnNpc3RlbnQ6di50aGF0UmV0dXJuc0ZhbHNlLFxuZGVzdHJ1Y3RvcjpmdW5jdGlvbigpe3ZhciBhPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlLGI7Zm9yKGIgaW4gYSl0aGlzW2JdPW51bGw7Zm9yKGE9MDthPG9iLmxlbmd0aDthKyspdGhpc1tvYlthXV09bnVsbH19KTtILkludGVyZmFjZT1wYjtILmV4dGVuZD1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKCl7fWZ1bmN0aW9uIGMoKXtyZXR1cm4gZC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIGQ9dGhpcztiLnByb3RvdHlwZT1kLnByb3RvdHlwZTt2YXIgZT1uZXcgYjtwKGUsYy5wcm90b3R5cGUpO2MucHJvdG90eXBlPWU7Yy5wcm90b3R5cGUuY29uc3RydWN0b3I9YztjLkludGVyZmFjZT1wKHt9LGQuSW50ZXJmYWNlLGEpO2MuZXh0ZW5kPWQuZXh0ZW5kO3FiKGMpO3JldHVybiBjfTtxYihIKTtcbmZ1bmN0aW9uIHJiKGEsYixjLGQpe2lmKHRoaXMuZXZlbnRQb29sLmxlbmd0aCl7dmFyIGU9dGhpcy5ldmVudFBvb2wucG9wKCk7dGhpcy5jYWxsKGUsYSxiLGMsZCk7cmV0dXJuIGV9cmV0dXJuIG5ldyB0aGlzKGEsYixjLGQpfWZ1bmN0aW9uIHNiKGEpe2EgaW5zdGFuY2VvZiB0aGlzP3ZvaWQgMDpBKFwiMjIzXCIpO2EuZGVzdHJ1Y3RvcigpOzEwPnRoaXMuZXZlbnRQb29sLmxlbmd0aCYmdGhpcy5ldmVudFBvb2wucHVzaChhKX1mdW5jdGlvbiBxYihhKXthLmV2ZW50UG9vbD1bXTthLmdldFBvb2xlZD1yYjthLnJlbGVhc2U9c2J9dmFyIHRiPUguZXh0ZW5kKHtkYXRhOm51bGx9KSx1Yj1ILmV4dGVuZCh7ZGF0YTpudWxsfSksdmI9WzksMTMsMjcsMzJdLHdiPW0uY2FuVXNlRE9NJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyx4Yj1udWxsO20uY2FuVXNlRE9NJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJih4Yj1kb2N1bWVudC5kb2N1bWVudE1vZGUpO1xudmFyIHliPW0uY2FuVXNlRE9NJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYheGIsemI9bS5jYW5Vc2VET00mJighd2J8fHhiJiY4PHhiJiYxMT49eGIpLEFiPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLEJiPXtiZWZvcmVJbnB1dDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkJlZm9yZUlucHV0XCIsY2FwdHVyZWQ6XCJvbkJlZm9yZUlucHV0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdfSxjb21wb3NpdGlvbkVuZDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uRW5kXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uRW5kQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uZW5kIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblN0YXJ0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25TdGFydFwiLFxuY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25VcGRhdGU6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblVwZGF0ZVwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvblVwZGF0ZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnVwZGF0ZSBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX19LENiPSExO1xuZnVuY3Rpb24gRGIoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT12Yi5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiYmx1clwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIEViKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIEZiPSExO2Z1bmN0aW9uIEdiKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBFYihiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7Q2I9ITA7cmV0dXJuIEFiO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PUFiJiZDYj9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBIYihhLGIpe2lmKEZiKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCF3YiYmRGIoYSxiKT8oYT1tYigpLEcuX3Jvb3Q9bnVsbCxHLl9zdGFydFRleHQ9bnVsbCxHLl9mYWxsYmFja1RleHQ9bnVsbCxGYj0hMSxhKTpudWxsO3N3aXRjaChhKXtjYXNlIFwicGFzdGVcIjpyZXR1cm4gbnVsbDtjYXNlIFwia2V5cHJlc3NcIjppZighKGIuY3RybEtleXx8Yi5hbHRLZXl8fGIubWV0YUtleSl8fGIuY3RybEtleSYmYi5hbHRLZXkpe2lmKGIuY2hhciYmMTxiLmNoYXIubGVuZ3RoKXJldHVybiBiLmNoYXI7aWYoYi53aGljaClyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShiLndoaWNoKX1yZXR1cm4gbnVsbDtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gemI/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgSWI9e2V2ZW50VHlwZXM6QmIsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT12b2lkIDA7dmFyIGY9dm9pZCAwO2lmKHdiKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOmU9QmIuY29tcG9zaXRpb25TdGFydDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOmU9QmIuY29tcG9zaXRpb25FbmQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjplPUJiLmNvbXBvc2l0aW9uVXBkYXRlO2JyZWFrIGJ9ZT12b2lkIDB9ZWxzZSBGYj9EYihhLGMpJiYoZT1CYi5jb21wb3NpdGlvbkVuZCk6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihlPUJiLmNvbXBvc2l0aW9uU3RhcnQpO2U/KHpiJiYoRmJ8fGUhPT1CYi5jb21wb3NpdGlvblN0YXJ0P2U9PT1CYi5jb21wb3NpdGlvbkVuZCYmRmImJihmPW1iKCkpOihHLl9yb290PWQsRy5fc3RhcnRUZXh0PW5iKCksRmI9ITApKSxlPXRiLmdldFBvb2xlZChlLGIsYyxkKSxmP2UuZGF0YT1cbmY6KGY9RWIoYyksbnVsbCE9PWYmJihlLmRhdGE9ZikpLFlhKGUpLGY9ZSk6Zj1udWxsOyhhPXliP0diKGEsYyk6SGIoYSxjKSk/KGI9dWIuZ2V0UG9vbGVkKEJiLmJlZm9yZUlucHV0LGIsYyxkKSxiLmRhdGE9YSxZYShiKSk6Yj1udWxsO3JldHVybiBudWxsPT09Zj9iOm51bGw9PT1iP2Y6W2YsYl19fSxKYj1udWxsLEtiPXtpbmplY3RGaWJlckNvbnRyb2xsZWRIb3N0Q29tcG9uZW50OmZ1bmN0aW9uKGEpe0piPWF9fSxMYj1udWxsLE1iPW51bGw7ZnVuY3Rpb24gTmIoYSl7aWYoYT14YShhKSl7SmImJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBKYi5yZXN0b3JlQ29udHJvbGxlZFN0YXRlP3ZvaWQgMDpBKFwiMTk0XCIpO3ZhciBiPXdhKGEuc3RhdGVOb2RlKTtKYi5yZXN0b3JlQ29udHJvbGxlZFN0YXRlKGEuc3RhdGVOb2RlLGEudHlwZSxiKX19ZnVuY3Rpb24gT2IoYSl7TGI/TWI/TWIucHVzaChhKTpNYj1bYV06TGI9YX1cbmZ1bmN0aW9uIFBiKCl7cmV0dXJuIG51bGwhPT1MYnx8bnVsbCE9PU1ifWZ1bmN0aW9uIFFiKCl7aWYoTGIpe3ZhciBhPUxiLGI9TWI7TWI9TGI9bnVsbDtOYihhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspTmIoYlthXSl9fXZhciBSYj17aW5qZWN0aW9uOktiLGVucXVldWVTdGF0ZVJlc3RvcmU6T2IsbmVlZHNTdGF0ZVJlc3RvcmU6UGIscmVzdG9yZVN0YXRlSWZOZWVkZWQ6UWJ9O2Z1bmN0aW9uIFNiKGEsYil7cmV0dXJuIGEoYil9ZnVuY3Rpb24gVGIoYSxiLGMpe3JldHVybiBhKGIsYyl9ZnVuY3Rpb24gVWIoKXt9dmFyIFZiPSExO2Z1bmN0aW9uIFdiKGEsYil7aWYoVmIpcmV0dXJuIGEoYik7VmI9ITA7dHJ5e3JldHVybiBTYihhLGIpfWZpbmFsbHl7VmI9ITEsUGIoKSYmKFViKCksUWIoKSl9fVxudmFyIFhiPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O2Z1bmN0aW9uIFliKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhWGJbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfWZ1bmN0aW9uIFpiKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX1cbmZ1bmN0aW9uICRiKGEsYil7aWYoIW0uY2FuVXNlRE9NfHxiJiYhKFwiYWRkRXZlbnRMaXN0ZW5lclwiaW4gZG9jdW1lbnQpKXJldHVybiExO2E9XCJvblwiK2E7Yj1hIGluIGRvY3VtZW50O2J8fChiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYi5zZXRBdHRyaWJ1dGUoYSxcInJldHVybjtcIiksYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgYlthXSk7cmV0dXJuIGJ9ZnVuY3Rpb24gYWMoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIGJjKGEpe3ZhciBiPWFjKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxubnVsbDtkZWxldGUgYVtiXX19fX1mdW5jdGlvbiBjYyhhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9YmMoYSkpfWZ1bmN0aW9uIGRjKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWEuX3ZhbHVlVHJhY2tlcjtpZighYilyZXR1cm4hMDt2YXIgYz1iLmdldFZhbHVlKCk7dmFyIGQ9XCJcIjthJiYoZD1hYyhhKT9hLmNoZWNrZWQ/XCJ0cnVlXCI6XCJmYWxzZVwiOmEudmFsdWUpO2E9ZDtyZXR1cm4gYSE9PWM/KGIuc2V0VmFsdWUoYSksITApOiExfVxudmFyIGVjPWJhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVELlJlYWN0Q3VycmVudE93bmVyLGZjPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsZ2M9ZmM/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsaGM9ZmM/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixpYz1mYz9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsamM9ZmM/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LGtjPWZjP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxsYz1mYz9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksbWM9ZmM/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAscGM9ZmM/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEscWM9ZmM/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHJjPWZjP1N5bWJvbC5mb3IoXCJyZWFjdC50aW1lb3V0XCIpOlxuNjAxMTMsc2M9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIHRjKGEpe2lmKG51bGw9PT1hfHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT1zYyYmYVtzY118fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1cbmZ1bmN0aW9uIHVjKGEpe3ZhciBiPWEudHlwZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYi5kaXNwbGF5TmFtZXx8Yi5uYW1lO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYilyZXR1cm4gYjtzd2l0Y2goYil7Y2FzZSBwYzpyZXR1cm5cIkFzeW5jTW9kZVwiO2Nhc2UgbWM6cmV0dXJuXCJDb250ZXh0LkNvbnN1bWVyXCI7Y2FzZSBpYzpyZXR1cm5cIlJlYWN0RnJhZ21lbnRcIjtjYXNlIGhjOnJldHVyblwiUmVhY3RQb3J0YWxcIjtjYXNlIGtjOnJldHVyblwiUHJvZmlsZXIoXCIrYS5wZW5kaW5nUHJvcHMuaWQrXCIpXCI7Y2FzZSBsYzpyZXR1cm5cIkNvbnRleHQuUHJvdmlkZXJcIjtjYXNlIGpjOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2UgcmM6cmV0dXJuXCJUaW1lb3V0XCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yilzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBxYzpyZXR1cm4gYT1iLnJlbmRlci5kaXNwbGF5TmFtZXx8Yi5yZW5kZXIubmFtZXx8XCJcIixcIlwiIT09YT9cIkZvcndhcmRSZWYoXCIrXG5hK1wiKVwiOlwiRm9yd2FyZFJlZlwifXJldHVybiBudWxsfWZ1bmN0aW9uIHZjKGEpe3ZhciBiPVwiXCI7ZG97YTpzd2l0Y2goYS50YWcpe2Nhc2UgMDpjYXNlIDE6Y2FzZSAyOmNhc2UgNTp2YXIgYz1hLl9kZWJ1Z093bmVyLGQ9YS5fZGVidWdTb3VyY2U7dmFyIGU9dWMoYSk7dmFyIGY9bnVsbDtjJiYoZj11YyhjKSk7Yz1kO2U9XCJcXG4gICAgaW4gXCIrKGV8fFwiVW5rbm93blwiKSsoYz9cIiAoYXQgXCIrYy5maWxlTmFtZS5yZXBsYWNlKC9eLipbXFxcXFxcL10vLFwiXCIpK1wiOlwiK2MubGluZU51bWJlcitcIilcIjpmP1wiIChjcmVhdGVkIGJ5IFwiK2YrXCIpXCI6XCJcIik7YnJlYWsgYTtkZWZhdWx0OmU9XCJcIn1iKz1lO2E9YS5yZXR1cm59d2hpbGUoYSk7cmV0dXJuIGJ9XG52YXIgd2M9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLHhjPXt9LHpjPXt9O2Z1bmN0aW9uIEFjKGEpe2lmKHpjLmhhc093blByb3BlcnR5KGEpKXJldHVybiEwO2lmKHhjLmhhc093blByb3BlcnR5KGEpKXJldHVybiExO2lmKHdjLnRlc3QoYSkpcmV0dXJuIHpjW2FdPSEwO3hjW2FdPSEwO3JldHVybiExfVxuZnVuY3Rpb24gQmMoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gQ2MoYSxiLGMsZCl7aWYobnVsbD09PWJ8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYnx8QmMoYSxiLGMsZCkpcmV0dXJuITA7aWYoZClyZXR1cm4hMTtpZihudWxsIT09Yylzd2l0Y2goYy50eXBlKXtjYXNlIDM6cmV0dXJuIWI7Y2FzZSA0OnJldHVybiExPT09YjtjYXNlIDU6cmV0dXJuIGlzTmFOKGIpO2Nhc2UgNjpyZXR1cm4gaXNOYU4oYil8fDE+Yn1yZXR1cm4hMX1cbmZ1bmN0aW9uIEkoYSxiLGMsZCxlKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1ifXZhciBKPXt9O1wiY2hpbGRyZW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgZGVmYXVsdFZhbHVlIGRlZmF1bHRDaGVja2VkIGlubmVySFRNTCBzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmcgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIHN0eWxlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7SlthXT1uZXcgSShhLDAsITEsYSxudWxsKX0pO1xuW1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO0pbYl09bmV3IEkoYiwxLCExLGFbMV0sbnVsbCl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtKW2FdPW5ldyBJKGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtbXCJhdXRvUmV2ZXJzZVwiLFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFwicHJlc2VydmVBbHBoYVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0pbYV09bmV3IEkoYSwyLCExLGEsbnVsbCl9KTtcblwiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7SlthXT1uZXcgSShhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7W1wiY2hlY2tlZFwiLFwibXVsdGlwbGVcIixcIm11dGVkXCIsXCJzZWxlY3RlZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0pbYV09bmV3IEkoYSwzLCEwLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO1tcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7SlthXT1uZXcgSShhLDQsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7XG5bXCJjb2xzXCIsXCJyb3dzXCIsXCJzaXplXCIsXCJzcGFuXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7SlthXT1uZXcgSShhLDYsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtKW2FdPW5ldyBJKGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTt2YXIgRGM9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiBFYyhhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShEYyxcbkVjKTtKW2JdPW5ldyBJKGIsMSwhMSxhLG51bGwpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6aHJlZiB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShEYyxFYyk7SltiXT1uZXcgSShiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIil9KTtbXCJ4bWw6YmFzZVwiLFwieG1sOmxhbmdcIixcInhtbDpzcGFjZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShEYyxFYyk7SltiXT1uZXcgSShiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiKX0pO0oudGFiSW5kZXg9bmV3IEkoXCJ0YWJJbmRleFwiLDEsITEsXCJ0YWJpbmRleFwiLG51bGwpO1xuZnVuY3Rpb24gRmMoYSxiLGMsZCl7dmFyIGU9Si5oYXNPd25Qcm9wZXJ0eShiKT9KW2JdOm51bGw7dmFyIGY9bnVsbCE9PWU/MD09PWUudHlwZTpkPyExOiEoMjxiLmxlbmd0aCl8fFwib1wiIT09YlswXSYmXCJPXCIhPT1iWzBdfHxcIm5cIiE9PWJbMV0mJlwiTlwiIT09YlsxXT8hMTohMDtmfHwoQ2MoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP0FjKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKSl9XG5mdW5jdGlvbiBHYyhhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gcCh7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9ZnVuY3Rpb24gSGMoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9SWMobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiBKYyhhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJkZjKGEsXCJjaGVja2VkXCIsYiwhMSl9XG5mdW5jdGlvbiBLYyhhLGIpe0pjKGEsYik7dmFyIGM9SWMoYi52YWx1ZSk7aWYobnVsbCE9YylpZihcIm51bWJlclwiPT09Yi50eXBlKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2IuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT9MYyhhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZMYyhhLGIudHlwZSxJYyhiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIE1jKGEsYixjKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpe2I9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO3ZhciBkPWEudmFsdWU7Y3x8Yj09PWR8fChhLnZhbHVlPWIpO2EuZGVmYXVsdFZhbHVlPWJ9Yz1hLm5hbWU7XCJcIiE9PWMmJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hYS5kZWZhdWx0Q2hlY2tlZDthLmRlZmF1bHRDaGVja2VkPSFhLmRlZmF1bHRDaGVja2VkO1wiXCIhPT1jJiYoYS5uYW1lPWMpfWZ1bmN0aW9uIExjKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8YS5vd25lckRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX1cbmZ1bmN0aW9uIEljKGEpe3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSBcImJvb2xlYW5cIjpjYXNlIFwibnVtYmVyXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm5cIlwifX12YXIgTmM9e2NoYW5nZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNoYW5nZVwiLGNhcHR1cmVkOlwib25DaGFuZ2VDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY2hhbmdlIGNsaWNrIGZvY3VzIGlucHV0IGtleWRvd24ga2V5dXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX07ZnVuY3Rpb24gT2MoYSxiLGMpe2E9SC5nZXRQb29sZWQoTmMuY2hhbmdlLGEsYixjKTthLnR5cGU9XCJjaGFuZ2VcIjtPYihjKTtZYShhKTtyZXR1cm4gYX12YXIgUGM9bnVsbCxRYz1udWxsO2Z1bmN0aW9uIFJjKGEpe0lhKGEsITEpfWZ1bmN0aW9uIFNjKGEpe3ZhciBiPU9hKGEpO2lmKGRjKGIpKXJldHVybiBhfVxuZnVuY3Rpb24gVGMoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgVWM9ITE7bS5jYW5Vc2VET00mJihVYz0kYihcImlucHV0XCIpJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpKTtmdW5jdGlvbiBWYygpe1BjJiYoUGMuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsV2MpLFFjPVBjPW51bGwpfWZ1bmN0aW9uIFdjKGEpe1widmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZTYyhRYykmJihhPU9jKFFjLGEsWmIoYSkpLFdiKFJjLGEpKX1mdW5jdGlvbiBYYyhhLGIsYyl7XCJmb2N1c1wiPT09YT8oVmMoKSxQYz1iLFFjPWMsUGMuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsV2MpKTpcImJsdXJcIj09PWEmJlZjKCl9ZnVuY3Rpb24gWWMoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gU2MoUWMpfVxuZnVuY3Rpb24gWmMoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiBTYyhiKX1mdW5jdGlvbiAkYyhhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiBTYyhiKX1cbnZhciBhZD17ZXZlbnRUeXBlczpOYyxfaXNJbnB1dEV2ZW50U3VwcG9ydGVkOlVjLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9Yj9PYShiKTp3aW5kb3csZj12b2lkIDAsZz12b2lkIDAsaD1lLm5vZGVOYW1lJiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XCJzZWxlY3RcIj09PWh8fFwiaW5wdXRcIj09PWgmJlwiZmlsZVwiPT09ZS50eXBlP2Y9VGM6WWIoZSk/VWM/Zj0kYzooZj1ZYyxnPVhjKTooaD1lLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09aC50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09ZS50eXBlfHxcInJhZGlvXCI9PT1lLnR5cGUpJiYoZj1aYyk7aWYoZiYmKGY9ZihhLGIpKSlyZXR1cm4gT2MoZixjLGQpO2cmJmcoYSxlLGIpO1wiYmx1clwiPT09YSYmKGE9ZS5fd3JhcHBlclN0YXRlKSYmYS5jb250cm9sbGVkJiZcIm51bWJlclwiPT09ZS50eXBlJiZMYyhlLFwibnVtYmVyXCIsZS52YWx1ZSl9fSxiZD1ILmV4dGVuZCh7dmlldzpudWxsLGRldGFpbDpudWxsfSksY2Q9e0FsdDpcImFsdEtleVwiLFxuQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gZGQoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1jZFthXSk/ISFiW2FdOiExfWZ1bmN0aW9uIGVkKCl7cmV0dXJuIGRkfVxudmFyIGZkPWJkLmV4dGVuZCh7c2NyZWVuWDpudWxsLHNjcmVlblk6bnVsbCxjbGllbnRYOm51bGwsY2xpZW50WTpudWxsLHBhZ2VYOm51bGwscGFnZVk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTplZCxidXR0b246bnVsbCxidXR0b25zOm51bGwscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gYS5yZWxhdGVkVGFyZ2V0fHwoYS5mcm9tRWxlbWVudD09PWEuc3JjRWxlbWVudD9hLnRvRWxlbWVudDphLmZyb21FbGVtZW50KX19KSxnZD1mZC5leHRlbmQoe3BvaW50ZXJJZDpudWxsLHdpZHRoOm51bGwsaGVpZ2h0Om51bGwscHJlc3N1cmU6bnVsbCx0aWx0WDpudWxsLHRpbHRZOm51bGwscG9pbnRlclR5cGU6bnVsbCxpc1ByaW1hcnk6bnVsbH0pLGhkPXttb3VzZUVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUVudGVyXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LFxubW91c2VMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VMZWF2ZVwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxwb2ludGVyRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJFbnRlclwiLGRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX0scG9pbnRlckxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyTGVhdmVcIixkZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19fSxpZD17ZXZlbnRUeXBlczpoZCxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hLGY9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGUmJihjLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpfHwhZiYmIWUpcmV0dXJuIG51bGw7ZT1kLndpbmRvdz09PWQ/ZDooZT1kLm93bmVyRG9jdW1lbnQpP2UuZGVmYXVsdFZpZXd8fFxuZS5wYXJlbnRXaW5kb3c6d2luZG93O2Y/KGY9YixiPShiPWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQpP05hKGIpOm51bGwpOmY9bnVsbDtpZihmPT09YilyZXR1cm4gbnVsbDt2YXIgZz12b2lkIDAsaD12b2lkIDAsaz12b2lkIDAsbj12b2lkIDA7aWYoXCJtb3VzZW91dFwiPT09YXx8XCJtb3VzZW92ZXJcIj09PWEpZz1mZCxoPWhkLm1vdXNlTGVhdmUsaz1oZC5tb3VzZUVudGVyLG49XCJtb3VzZVwiO2Vsc2UgaWYoXCJwb2ludGVyb3V0XCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hKWc9Z2QsaD1oZC5wb2ludGVyTGVhdmUsaz1oZC5wb2ludGVyRW50ZXIsbj1cInBvaW50ZXJcIjthPW51bGw9PWY/ZTpPYShmKTtlPW51bGw9PWI/ZTpPYShiKTtoPWcuZ2V0UG9vbGVkKGgsZixjLGQpO2gudHlwZT1uK1wibGVhdmVcIjtoLnRhcmdldD1hO2gucmVsYXRlZFRhcmdldD1lO2M9Zy5nZXRQb29sZWQoayxiLGMsZCk7Yy50eXBlPW4rXCJlbnRlclwiO2MudGFyZ2V0PWU7Yy5yZWxhdGVkVGFyZ2V0PWE7WmEoaCxcbmMsZixiKTtyZXR1cm5baCxjXX19O2Z1bmN0aW9uIGpkKGEpe3ZhciBiPWE7aWYoYS5hbHRlcm5hdGUpZm9yKDtiLnJldHVybjspYj1iLnJldHVybjtlbHNle2lmKDAhPT0oYi5lZmZlY3RUYWcmMikpcmV0dXJuIDE7Zm9yKDtiLnJldHVybjspaWYoYj1iLnJldHVybiwwIT09KGIuZWZmZWN0VGFnJjIpKXJldHVybiAxfXJldHVybiAzPT09Yi50YWc/MjozfWZ1bmN0aW9uIGtkKGEpezIhPT1qZChhKT9BKFwiMTg4XCIpOnZvaWQgMH1cbmZ1bmN0aW9uIGxkKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXJldHVybiBiPWpkKGEpLDM9PT1iP0EoXCIxODhcIik6dm9pZCAwLDE9PT1iP251bGw6YTtmb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Yy5yZXR1cm4sZj1lP2UuYWx0ZXJuYXRlOm51bGw7aWYoIWV8fCFmKWJyZWFrO2lmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IodmFyIGc9ZS5jaGlsZDtnOyl7aWYoZz09PWMpcmV0dXJuIGtkKGUpLGE7aWYoZz09PWQpcmV0dXJuIGtkKGUpLGI7Zz1nLnNpYmxpbmd9QShcIjE4OFwiKX1pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtnPSExO2Zvcih2YXIgaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZjtkPWU7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1mO2M9ZTticmVha31oPWguc2libGluZ31nP1xudm9pZCAwOkEoXCIxODlcIil9fWMuYWx0ZXJuYXRlIT09ZD9BKFwiMTkwXCIpOnZvaWQgMH0zIT09Yy50YWc/QShcIjE4OFwiKTp2b2lkIDA7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBtZChhKXthPWxkKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gbmQoYSl7YT1sZChhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZig1PT09Yi50YWd8fDY9PT1iLnRhZylyZXR1cm4gYjtpZihiLmNoaWxkJiY0IT09Yi50YWcpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfXZhciBvZD1ILmV4dGVuZCh7YW5pbWF0aW9uTmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSkscGQ9SC5leHRlbmQoe2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KSxxZD1iZC5leHRlbmQoe3JlbGF0ZWRUYXJnZXQ6bnVsbH0pO1xuZnVuY3Rpb24gcmQoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjsxMD09PWEmJihhPTEzKTtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9XG52YXIgc2Q9e0VzYzpcIkVzY2FwZVwiLFNwYWNlYmFyOlwiIFwiLExlZnQ6XCJBcnJvd0xlZnRcIixVcDpcIkFycm93VXBcIixSaWdodDpcIkFycm93UmlnaHRcIixEb3duOlwiQXJyb3dEb3duXCIsRGVsOlwiRGVsZXRlXCIsV2luOlwiT1NcIixNZW51OlwiQ29udGV4dE1lbnVcIixBcHBzOlwiQ29udGV4dE1lbnVcIixTY3JvbGw6XCJTY3JvbGxMb2NrXCIsTW96UHJpbnRhYmxlS2V5OlwiVW5pZGVudGlmaWVkXCJ9LHRkPXs4OlwiQmFja3NwYWNlXCIsOTpcIlRhYlwiLDEyOlwiQ2xlYXJcIiwxMzpcIkVudGVyXCIsMTY6XCJTaGlmdFwiLDE3OlwiQ29udHJvbFwiLDE4OlwiQWx0XCIsMTk6XCJQYXVzZVwiLDIwOlwiQ2Fwc0xvY2tcIiwyNzpcIkVzY2FwZVwiLDMyOlwiIFwiLDMzOlwiUGFnZVVwXCIsMzQ6XCJQYWdlRG93blwiLDM1OlwiRW5kXCIsMzY6XCJIb21lXCIsMzc6XCJBcnJvd0xlZnRcIiwzODpcIkFycm93VXBcIiwzOTpcIkFycm93UmlnaHRcIiw0MDpcIkFycm93RG93blwiLDQ1OlwiSW5zZXJ0XCIsNDY6XCJEZWxldGVcIiwxMTI6XCJGMVwiLDExMzpcIkYyXCIsMTE0OlwiRjNcIiwxMTU6XCJGNFwiLFxuMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsMTE5OlwiRjhcIiwxMjA6XCJGOVwiLDEyMTpcIkYxMFwiLDEyMjpcIkYxMVwiLDEyMzpcIkYxMlwiLDE0NDpcIk51bUxvY2tcIiwxNDU6XCJTY3JvbGxMb2NrXCIsMjI0OlwiTWV0YVwifSx1ZD1iZC5leHRlbmQoe2tleTpmdW5jdGlvbihhKXtpZihhLmtleSl7dmFyIGI9c2RbYS5rZXldfHxhLmtleTtpZihcIlVuaWRlbnRpZmllZFwiIT09YilyZXR1cm4gYn1yZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/KGE9cmQoYSksMTM9PT1hP1wiRW50ZXJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP3RkW2Eua2V5Q29kZV18fFwiVW5pZGVudGlmaWVkXCI6XCJcIn0sbG9jYXRpb246bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwscmVwZWF0Om51bGwsbG9jYWxlOm51bGwsZ2V0TW9kaWZpZXJTdGF0ZTplZCxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cbmEudHlwZT9yZChhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9yZChhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pLHZkPWZkLmV4dGVuZCh7ZGF0YVRyYW5zZmVyOm51bGx9KSx3ZD1iZC5leHRlbmQoe3RvdWNoZXM6bnVsbCx0YXJnZXRUb3VjaGVzOm51bGwsY2hhbmdlZFRvdWNoZXM6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTplZH0pLHhkPUguZXh0ZW5kKHtwcm9wZXJ0eU5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLHlkPWZkLmV4dGVuZCh7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluXG5hPy1hLndoZWVsRGVsdGFYOjB9LGRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjpudWxsLGRlbHRhTW9kZTpudWxsfSksemQ9W1tcImFib3J0XCIsXCJhYm9ydFwiXSxbZmIsXCJhbmltYXRpb25FbmRcIl0sW2diLFwiYW5pbWF0aW9uSXRlcmF0aW9uXCJdLFtoYixcImFuaW1hdGlvblN0YXJ0XCJdLFtcImNhbnBsYXlcIixcImNhblBsYXlcIl0sW1wiY2FucGxheXRocm91Z2hcIixcImNhblBsYXlUaHJvdWdoXCJdLFtcImRyYWdcIixcImRyYWdcIl0sW1wiZHJhZ2VudGVyXCIsXCJkcmFnRW50ZXJcIl0sW1wiZHJhZ2V4aXRcIixcImRyYWdFeGl0XCJdLFtcImRyYWdsZWF2ZVwiLFwiZHJhZ0xlYXZlXCJdLFtcImRyYWdvdmVyXCIsXCJkcmFnT3ZlclwiXSxbXCJkdXJhdGlvbmNoYW5nZVwiLFwiZHVyYXRpb25DaGFuZ2VcIl0sW1wiZW1wdGllZFwiLFwiZW1wdGllZFwiXSxbXCJlbmNyeXB0ZWRcIixcImVuY3J5cHRlZFwiXSxcbltcImVuZGVkXCIsXCJlbmRlZFwiXSxbXCJlcnJvclwiLFwiZXJyb3JcIl0sW1wiZ290cG9pbnRlcmNhcHR1cmVcIixcImdvdFBvaW50ZXJDYXB0dXJlXCJdLFtcImxvYWRcIixcImxvYWRcIl0sW1wibG9hZGVkZGF0YVwiLFwibG9hZGVkRGF0YVwiXSxbXCJsb2FkZWRtZXRhZGF0YVwiLFwibG9hZGVkTWV0YWRhdGFcIl0sW1wibG9hZHN0YXJ0XCIsXCJsb2FkU3RhcnRcIl0sW1wibG9zdHBvaW50ZXJjYXB0dXJlXCIsXCJsb3N0UG9pbnRlckNhcHR1cmVcIl0sW1wibW91c2Vtb3ZlXCIsXCJtb3VzZU1vdmVcIl0sW1wibW91c2VvdXRcIixcIm1vdXNlT3V0XCJdLFtcIm1vdXNlb3ZlclwiLFwibW91c2VPdmVyXCJdLFtcInBsYXlpbmdcIixcInBsYXlpbmdcIl0sW1wicG9pbnRlcm1vdmVcIixcInBvaW50ZXJNb3ZlXCJdLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJPdXRcIl0sW1wicG9pbnRlcm92ZXJcIixcInBvaW50ZXJPdmVyXCJdLFtcInByb2dyZXNzXCIsXCJwcm9ncmVzc1wiXSxbXCJzY3JvbGxcIixcInNjcm9sbFwiXSxbXCJzZWVraW5nXCIsXCJzZWVraW5nXCJdLFtcInN0YWxsZWRcIixcInN0YWxsZWRcIl0sXG5bXCJzdXNwZW5kXCIsXCJzdXNwZW5kXCJdLFtcInRpbWV1cGRhdGVcIixcInRpbWVVcGRhdGVcIl0sW1widG9nZ2xlXCIsXCJ0b2dnbGVcIl0sW1widG91Y2htb3ZlXCIsXCJ0b3VjaE1vdmVcIl0sW2liLFwidHJhbnNpdGlvbkVuZFwiXSxbXCJ3YWl0aW5nXCIsXCJ3YWl0aW5nXCJdLFtcIndoZWVsXCIsXCJ3aGVlbFwiXV0sQWQ9e30sQmQ9e307ZnVuY3Rpb24gQ2QoYSxiKXt2YXIgYz1hWzBdO2E9YVsxXTt2YXIgZD1cIm9uXCIrKGFbMF0udG9VcHBlckNhc2UoKSthLnNsaWNlKDEpKTtiPXtwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpkLGNhcHR1cmVkOmQrXCJDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbY10saXNJbnRlcmFjdGl2ZTpifTtBZFthXT1iO0JkW2NdPWJ9XG5bW1wiYmx1clwiLFwiYmx1clwiXSxbXCJjYW5jZWxcIixcImNhbmNlbFwiXSxbXCJjbGlja1wiLFwiY2xpY2tcIl0sW1wiY2xvc2VcIixcImNsb3NlXCJdLFtcImNvbnRleHRtZW51XCIsXCJjb250ZXh0TWVudVwiXSxbXCJjb3B5XCIsXCJjb3B5XCJdLFtcImN1dFwiLFwiY3V0XCJdLFtcImRibGNsaWNrXCIsXCJkb3VibGVDbGlja1wiXSxbXCJkcmFnZW5kXCIsXCJkcmFnRW5kXCJdLFtcImRyYWdzdGFydFwiLFwiZHJhZ1N0YXJ0XCJdLFtcImRyb3BcIixcImRyb3BcIl0sW1wiZm9jdXNcIixcImZvY3VzXCJdLFtcImlucHV0XCIsXCJpbnB1dFwiXSxbXCJpbnZhbGlkXCIsXCJpbnZhbGlkXCJdLFtcImtleWRvd25cIixcImtleURvd25cIl0sW1wia2V5cHJlc3NcIixcImtleVByZXNzXCJdLFtcImtleXVwXCIsXCJrZXlVcFwiXSxbXCJtb3VzZWRvd25cIixcIm1vdXNlRG93blwiXSxbXCJtb3VzZXVwXCIsXCJtb3VzZVVwXCJdLFtcInBhc3RlXCIsXCJwYXN0ZVwiXSxbXCJwYXVzZVwiLFwicGF1c2VcIl0sW1wicGxheVwiLFwicGxheVwiXSxbXCJwb2ludGVyY2FuY2VsXCIsXCJwb2ludGVyQ2FuY2VsXCJdLFtcInBvaW50ZXJkb3duXCIsXCJwb2ludGVyRG93blwiXSxcbltcInBvaW50ZXJ1cFwiLFwicG9pbnRlclVwXCJdLFtcInJhdGVjaGFuZ2VcIixcInJhdGVDaGFuZ2VcIl0sW1wicmVzZXRcIixcInJlc2V0XCJdLFtcInNlZWtlZFwiLFwic2Vla2VkXCJdLFtcInN1Ym1pdFwiLFwic3VibWl0XCJdLFtcInRvdWNoY2FuY2VsXCIsXCJ0b3VjaENhbmNlbFwiXSxbXCJ0b3VjaGVuZFwiLFwidG91Y2hFbmRcIl0sW1widG91Y2hzdGFydFwiLFwidG91Y2hTdGFydFwiXSxbXCJ2b2x1bWVjaGFuZ2VcIixcInZvbHVtZUNoYW5nZVwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXtDZChhLCEwKX0pO3pkLmZvckVhY2goZnVuY3Rpb24oYSl7Q2QoYSwhMSl9KTtcbnZhciBEZD17ZXZlbnRUeXBlczpBZCxpc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGU6ZnVuY3Rpb24oYSl7YT1CZFthXTtyZXR1cm4gdm9pZCAwIT09YSYmITA9PT1hLmlzSW50ZXJhY3RpdmV9LGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9QmRbYV07aWYoIWUpcmV0dXJuIG51bGw7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1yZChjKSlyZXR1cm4gbnVsbDtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOmE9dWQ7YnJlYWs7Y2FzZSBcImJsdXJcIjpjYXNlIFwiZm9jdXNcIjphPXFkO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilyZXR1cm4gbnVsbDtjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOmE9ZmQ7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6YT1cbnZkO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOmE9d2Q7YnJlYWs7Y2FzZSBmYjpjYXNlIGdiOmNhc2UgaGI6YT1vZDticmVhaztjYXNlIGliOmE9eGQ7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOmE9YmQ7YnJlYWs7Y2FzZSBcIndoZWVsXCI6YT15ZDticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjphPXBkO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOmE9Z2Q7YnJlYWs7ZGVmYXVsdDphPUh9Yj1hLmdldFBvb2xlZChlLGIsYyxkKTtZYShiKTtyZXR1cm4gYn19LEVkPURkLmlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZSxcbkZkPVtdO2Z1bmN0aW9uIEdkKGEpe3ZhciBiPWEudGFyZ2V0SW5zdDtkb3tpZighYil7YS5hbmNlc3RvcnMucHVzaChiKTticmVha312YXIgYztmb3IoYz1iO2MucmV0dXJuOyljPWMucmV0dXJuO2M9MyE9PWMudGFnP251bGw6Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztpZighYylicmVhazthLmFuY2VzdG9ycy5wdXNoKGIpO2I9TmEoYyl9d2hpbGUoYik7Zm9yKGM9MDtjPGEuYW5jZXN0b3JzLmxlbmd0aDtjKyspYj1hLmFuY2VzdG9yc1tjXSxKYShhLnRvcExldmVsVHlwZSxiLGEubmF0aXZlRXZlbnQsWmIoYS5uYXRpdmVFdmVudCkpfXZhciBIZD0hMDtmdW5jdGlvbiBJZChhKXtIZD0hIWF9ZnVuY3Rpb24gSyhhLGIpe2lmKCFiKXJldHVybiBudWxsO3ZhciBjPShFZChhKT9LZDpMZCkuYmluZChudWxsLGEpO2IuYWRkRXZlbnRMaXN0ZW5lcihhLGMsITEpfVxuZnVuY3Rpb24gTWQoYSxiKXtpZighYilyZXR1cm4gbnVsbDt2YXIgYz0oRWQoYSk/S2Q6TGQpLmJpbmQobnVsbCxhKTtiLmFkZEV2ZW50TGlzdGVuZXIoYSxjLCEwKX1mdW5jdGlvbiBLZChhLGIpe1RiKExkLGEsYil9ZnVuY3Rpb24gTGQoYSxiKXtpZihIZCl7dmFyIGM9WmIoYik7Yz1OYShjKTtudWxsPT09Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBjLnRhZ3x8Mj09PWpkKGMpfHwoYz1udWxsKTtpZihGZC5sZW5ndGgpe3ZhciBkPUZkLnBvcCgpO2QudG9wTGV2ZWxUeXBlPWE7ZC5uYXRpdmVFdmVudD1iO2QudGFyZ2V0SW5zdD1jO2E9ZH1lbHNlIGE9e3RvcExldmVsVHlwZTphLG5hdGl2ZUV2ZW50OmIsdGFyZ2V0SW5zdDpjLGFuY2VzdG9yczpbXX07dHJ5e1diKEdkLGEpfWZpbmFsbHl7YS50b3BMZXZlbFR5cGU9bnVsbCxhLm5hdGl2ZUV2ZW50PW51bGwsYS50YXJnZXRJbnN0PW51bGwsYS5hbmNlc3RvcnMubGVuZ3RoPTAsMTA+RmQubGVuZ3RoJiZGZC5wdXNoKGEpfX19XG52YXIgTmQ9e2dldCBfZW5hYmxlZCgpe3JldHVybiBIZH0sc2V0RW5hYmxlZDpJZCxpc0VuYWJsZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gSGR9LHRyYXBCdWJibGVkRXZlbnQ6Syx0cmFwQ2FwdHVyZWRFdmVudDpNZCxkaXNwYXRjaEV2ZW50OkxkfSxPZD17fSxQZD0wLFFkPVwiX3JlYWN0TGlzdGVuZXJzSURcIisoXCJcIitNYXRoLnJhbmRvbSgpKS5zbGljZSgyKTtmdW5jdGlvbiBSZChhKXtPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYSxRZCl8fChhW1FkXT1QZCsrLE9kW2FbUWRdXT17fSk7cmV0dXJuIE9kW2FbUWRdXX1mdW5jdGlvbiBTZChhKXtmb3IoO2EmJmEuZmlyc3RDaGlsZDspYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9XG5mdW5jdGlvbiBUZChhLGIpe3ZhciBjPVNkKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPVNkKGMpfX1mdW5jdGlvbiBVZChhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfVxudmFyIFZkPW0uY2FuVXNlRE9NJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJjExPj1kb2N1bWVudC5kb2N1bWVudE1vZGUsV2Q9e3NlbGVjdDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvblNlbGVjdFwiLGNhcHR1cmVkOlwib25TZWxlY3RDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29udGV4dG1lbnUgZm9jdXMga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fSxYZD1udWxsLFlkPW51bGwsWmQ9bnVsbCwkZD0hMTtcbmZ1bmN0aW9uIGFlKGEsYil7aWYoJGR8fG51bGw9PVhkfHxYZCE9PWRhKCkpcmV0dXJuIG51bGw7dmFyIGM9WGQ7XCJzZWxlY3Rpb25TdGFydFwiaW4gYyYmVWQoYyk/Yz17c3RhcnQ6Yy5zZWxlY3Rpb25TdGFydCxlbmQ6Yy5zZWxlY3Rpb25FbmR9OndpbmRvdy5nZXRTZWxlY3Rpb24/KGM9d2luZG93LmdldFNlbGVjdGlvbigpLGM9e2FuY2hvck5vZGU6Yy5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpjLmFuY2hvck9mZnNldCxmb2N1c05vZGU6Yy5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6Yy5mb2N1c09mZnNldH0pOmM9dm9pZCAwO3JldHVybiBaZCYmZWEoWmQsYyk/bnVsbDooWmQ9YyxhPUguZ2V0UG9vbGVkKFdkLnNlbGVjdCxZZCxhLGIpLGEudHlwZT1cInNlbGVjdFwiLGEudGFyZ2V0PVhkLFlhKGEpLGEpfVxudmFyIGJlPXtldmVudFR5cGVzOldkLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9ZC53aW5kb3c9PT1kP2QuZG9jdW1lbnQ6OT09PWQubm9kZVR5cGU/ZDpkLm93bmVyRG9jdW1lbnQsZjtpZighKGY9IWUpKXthOntlPVJkKGUpO2Y9c2Eub25TZWxlY3Q7Zm9yKHZhciBnPTA7ZzxmLmxlbmd0aDtnKyspe3ZhciBoPWZbZ107aWYoIWUuaGFzT3duUHJvcGVydHkoaCl8fCFlW2hdKXtlPSExO2JyZWFrIGF9fWU9ITB9Zj0hZX1pZihmKXJldHVybiBudWxsO2U9Yj9PYShiKTp3aW5kb3c7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c1wiOmlmKFliKGUpfHxcInRydWVcIj09PWUuY29udGVudEVkaXRhYmxlKVhkPWUsWWQ9YixaZD1udWxsO2JyZWFrO2Nhc2UgXCJibHVyXCI6WmQ9WWQ9WGQ9bnVsbDticmVhaztjYXNlIFwibW91c2Vkb3duXCI6JGQ9ITA7YnJlYWs7Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcIm1vdXNldXBcIjpyZXR1cm4gJGQ9ITEsYWUoYyxkKTtjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6aWYoVmQpYnJlYWs7XG5jYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOnJldHVybiBhZShjLGQpfXJldHVybiBudWxsfX07R2EuaW5qZWN0RXZlbnRQbHVnaW5PcmRlcihcIlJlc3BvbmRlckV2ZW50UGx1Z2luIFNpbXBsZUV2ZW50UGx1Z2luIFRhcEV2ZW50UGx1Z2luIEVudGVyTGVhdmVFdmVudFBsdWdpbiBDaGFuZ2VFdmVudFBsdWdpbiBTZWxlY3RFdmVudFBsdWdpbiBCZWZvcmVJbnB1dEV2ZW50UGx1Z2luXCIuc3BsaXQoXCIgXCIpKTt3YT1RYS5nZXRGaWJlckN1cnJlbnRQcm9wc0Zyb21Ob2RlO3hhPVFhLmdldEluc3RhbmNlRnJvbU5vZGU7eWE9UWEuZ2V0Tm9kZUZyb21JbnN0YW5jZTtHYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUoe1NpbXBsZUV2ZW50UGx1Z2luOkRkLEVudGVyTGVhdmVFdmVudFBsdWdpbjppZCxDaGFuZ2VFdmVudFBsdWdpbjphZCxTZWxlY3RFdmVudFBsdWdpbjpiZSxCZWZvcmVJbnB1dEV2ZW50UGx1Z2luOklifSk7XG52YXIgY2U9XCJmdW5jdGlvblwiPT09dHlwZW9mIHJlcXVlc3RBbmltYXRpb25GcmFtZT9yZXF1ZXN0QW5pbWF0aW9uRnJhbWU6dm9pZCAwLGRlPURhdGUsZWU9c2V0VGltZW91dCxmZT1jbGVhclRpbWVvdXQsZ2U9dm9pZCAwO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgcGVyZm9ybWFuY2UmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBwZXJmb3JtYW5jZS5ub3cpe3ZhciBoZT1wZXJmb3JtYW5jZTtnZT1mdW5jdGlvbigpe3JldHVybiBoZS5ub3coKX19ZWxzZSBnZT1mdW5jdGlvbigpe3JldHVybiBkZS5ub3coKX07dmFyIGllPXZvaWQgMCxqZT12b2lkIDA7XG5pZihtLmNhblVzZURPTSl7dmFyIGtlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjZT9jZTpmdW5jdGlvbigpe0EoXCIyNzZcIil9LEw9bnVsbCxsZT1udWxsLG1lPS0xLG5lPSExLG9lPSExLHBlPTAscWU9MzMscmU9MzMsc2U9e2RpZFRpbWVvdXQ6ITEsdGltZVJlbWFpbmluZzpmdW5jdGlvbigpe3ZhciBhPXBlLWdlKCk7cmV0dXJuIDA8YT9hOjB9fSx1ZT1mdW5jdGlvbihhLGIpe3ZhciBjPWEuc2NoZWR1bGVkQ2FsbGJhY2ssZD0hMTt0cnl7YyhiKSxkPSEwfWZpbmFsbHl7amUoYSksZHx8KG5lPSEwLHdpbmRvdy5wb3N0TWVzc2FnZSh0ZSxcIipcIikpfX0sdGU9XCJfX3JlYWN0SWRsZUNhbGxiYWNrJFwiK01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLGZ1bmN0aW9uKGEpe2lmKGEuc291cmNlPT09d2luZG93JiZhLmRhdGE9PT10ZSYmKG5lPSExLG51bGwhPT1MKSl7aWYobnVsbCE9PUwpe3ZhciBiPWdlKCk7aWYoISgtMT09PVxubWV8fG1lPmIpKXthPS0xO2Zvcih2YXIgYz1bXSxkPUw7bnVsbCE9PWQ7KXt2YXIgZT1kLnRpbWVvdXRUaW1lOy0xIT09ZSYmZTw9Yj9jLnB1c2goZCk6LTEhPT1lJiYoLTE9PT1hfHxlPGEpJiYoYT1lKTtkPWQubmV4dH1pZigwPGMubGVuZ3RoKWZvcihzZS5kaWRUaW1lb3V0PSEwLGI9MCxkPWMubGVuZ3RoO2I8ZDtiKyspdWUoY1tiXSxzZSk7bWU9YX19Zm9yKGE9Z2UoKTswPHBlLWEmJm51bGwhPT1MOylhPUwsc2UuZGlkVGltZW91dD0hMSx1ZShhLHNlKSxhPWdlKCk7bnVsbD09PUx8fG9lfHwob2U9ITAsa2UodmUpKX19LCExKTt2YXIgdmU9ZnVuY3Rpb24oYSl7b2U9ITE7dmFyIGI9YS1wZStyZTtiPHJlJiZxZTxyZT8oOD5iJiYoYj04KSxyZT1iPHFlP3FlOmIpOnFlPWI7cGU9YStyZTtuZXx8KG5lPSEwLHdpbmRvdy5wb3N0TWVzc2FnZSh0ZSxcIipcIikpfTtpZT1mdW5jdGlvbihhLGIpe3ZhciBjPS0xO251bGwhPWImJlwibnVtYmVyXCI9PT10eXBlb2YgYi50aW1lb3V0JiYoYz1nZSgpK1xuYi50aW1lb3V0KTtpZigtMT09PW1lfHwtMSE9PWMmJmM8bWUpbWU9YzthPXtzY2hlZHVsZWRDYWxsYmFjazphLHRpbWVvdXRUaW1lOmMscHJldjpudWxsLG5leHQ6bnVsbH07bnVsbD09PUw/TD1hOihiPWEucHJldj1sZSxudWxsIT09YiYmKGIubmV4dD1hKSk7bGU9YTtvZXx8KG9lPSEwLGtlKHZlKSk7cmV0dXJuIGF9O2plPWZ1bmN0aW9uKGEpe2lmKG51bGwhPT1hLnByZXZ8fEw9PT1hKXt2YXIgYj1hLm5leHQsYz1hLnByZXY7YS5uZXh0PW51bGw7YS5wcmV2PW51bGw7bnVsbCE9PWI/bnVsbCE9PWM/KGMubmV4dD1iLGIucHJldj1jKTooYi5wcmV2PW51bGwsTD1iKTpudWxsIT09Yz8oYy5uZXh0PW51bGwsbGU9Yyk6bGU9TD1udWxsfX19ZWxzZXt2YXIgd2U9bmV3IE1hcDtpZT1mdW5jdGlvbihhKXt2YXIgYj17c2NoZWR1bGVkQ2FsbGJhY2s6YSx0aW1lb3V0VGltZTowLG5leHQ6bnVsbCxwcmV2Om51bGx9LGM9ZWUoZnVuY3Rpb24oKXthKHt0aW1lUmVtYWluaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIEluZmluaXR5fSxcbmRpZFRpbWVvdXQ6ITF9KX0pO3dlLnNldChhLGMpO3JldHVybiBifTtqZT1mdW5jdGlvbihhKXt2YXIgYj13ZS5nZXQoYS5zY2hlZHVsZWRDYWxsYmFjayk7d2UuZGVsZXRlKGEpO2ZlKGIpfX1mdW5jdGlvbiB4ZShhKXt2YXIgYj1cIlwiO2JhLkNoaWxkcmVuLmZvckVhY2goYSxmdW5jdGlvbihhKXtudWxsPT1hfHxcInN0cmluZ1wiIT09dHlwZW9mIGEmJlwibnVtYmVyXCIhPT10eXBlb2YgYXx8KGIrPWEpfSk7cmV0dXJuIGJ9ZnVuY3Rpb24geWUoYSxiKXthPXAoe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj14ZShiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9XG5mdW5jdGlvbiB6ZShhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrYztiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxuZnVuY3Rpb24gQWUoYSxiKXt2YXIgYz1iLnZhbHVlO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOm51bGwhPWM/YzpiLmRlZmF1bHRWYWx1ZSx3YXNNdWx0aXBsZTohIWIubXVsdGlwbGV9fWZ1bmN0aW9uIEJlKGEsYil7bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTD9BKFwiOTFcIik6dm9pZCAwO3JldHVybiBwKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIENlKGEsYil7dmFyIGM9Yi52YWx1ZTtudWxsPT1jJiYoYz1iLmRlZmF1bHRWYWx1ZSxiPWIuY2hpbGRyZW4sbnVsbCE9YiYmKG51bGwhPWM/QShcIjkyXCIpOnZvaWQgMCxBcnJheS5pc0FycmF5KGIpJiYoMT49Yi5sZW5ndGg/dm9pZCAwOkEoXCI5M1wiKSxiPWJbMF0pLGM9XCJcIitiKSxudWxsPT1jJiYoYz1cIlwiKSk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6XCJcIitjfX1cbmZ1bmN0aW9uIERlKGEsYil7dmFyIGM9Yi52YWx1ZTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWIuZGVmYXVsdFZhbHVlJiYoYS5kZWZhdWx0VmFsdWU9Yi5kZWZhdWx0VmFsdWUpfWZ1bmN0aW9uIEVlKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJihhLnZhbHVlPWIpfXZhciBGZT17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBHZShhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIEhlKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9HZShiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBJZT12b2lkIDAsSmU9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09RmUuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7SWU9SWV8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7SWUuaW5uZXJIVE1MPVwiPHN2Zz5cIitiK1wiPC9zdmc+XCI7Zm9yKGI9SWUuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24gS2UoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1cbnZhciBMZT17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZsZXhPcmRlcjohMCxncmlkUm93OiEwLGdyaWRSb3dFbmQ6ITAsZ3JpZFJvd1NwYW46ITAsZ3JpZFJvd1N0YXJ0OiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3BhbjohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZm9udFdlaWdodDohMCxsaW5lQ2xhbXA6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsdGFiU2l6ZTohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITAsZmlsbE9wYWNpdHk6ITAsZmxvb2RPcGFjaXR5OiEwLFxuc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxNZT1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07T2JqZWN0LmtleXMoTGUpLmZvckVhY2goZnVuY3Rpb24oYSl7TWUuZm9yRWFjaChmdW5jdGlvbihiKXtiPWIrYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cmluZygxKTtMZVtiXT1MZVthXX0pfSk7XG5mdW5jdGlvbiBOZShhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIik7dmFyIGU9Yzt2YXIgZj1iW2NdO2U9bnVsbD09Znx8XCJib29sZWFuXCI9PT10eXBlb2YgZnx8XCJcIj09PWY/XCJcIjpkfHxcIm51bWJlclwiIT09dHlwZW9mIGZ8fDA9PT1mfHxMZS5oYXNPd25Qcm9wZXJ0eShlKSYmTGVbZV0/KFwiXCIrZikudHJpbSgpOmYrXCJweFwiO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7ZD9hLnNldFByb3BlcnR5KGMsZSk6YVtjXT1lfX12YXIgT2U9cCh7bWVudWl0ZW06ITB9LHthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtcbmZ1bmN0aW9uIFBlKGEsYixjKXtiJiYoT2VbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP0EoXCIxMzdcIixhLGMoKSk6dm9pZCAwKSxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiYobnVsbCE9Yi5jaGlsZHJlbj9BKFwiNjBcIik6dm9pZCAwLFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmXCJfX2h0bWxcImluIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/dm9pZCAwOkEoXCI2MVwiKSksbnVsbCE9Yi5zdHlsZSYmXCJvYmplY3RcIiE9PXR5cGVvZiBiLnN0eWxlP0EoXCI2MlwiLGMoKSk6dm9pZCAwKX1cbmZ1bmN0aW9uIFFlKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX12YXIgUmU9di50aGF0UmV0dXJucyhcIlwiKTtcbmZ1bmN0aW9uIFNlKGEsYil7YT05PT09YS5ub2RlVHlwZXx8MTE9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50O3ZhciBjPVJkKGEpO2I9c2FbYl07Zm9yKHZhciBkPTA7ZDxiLmxlbmd0aDtkKyspe3ZhciBlPWJbZF07aWYoIWMuaGFzT3duUHJvcGVydHkoZSl8fCFjW2VdKXtzd2l0Y2goZSl7Y2FzZSBcInNjcm9sbFwiOk1kKFwic2Nyb2xsXCIsYSk7YnJlYWs7Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImJsdXJcIjpNZChcImZvY3VzXCIsYSk7TWQoXCJibHVyXCIsYSk7Yy5ibHVyPSEwO2MuZm9jdXM9ITA7YnJlYWs7Y2FzZSBcImNhbmNlbFwiOmNhc2UgXCJjbG9zZVwiOiRiKGUsITApJiZNZChlLGEpO2JyZWFrO2Nhc2UgXCJpbnZhbGlkXCI6Y2FzZSBcInN1Ym1pdFwiOmNhc2UgXCJyZXNldFwiOmJyZWFrO2RlZmF1bHQ6LTE9PT1qYi5pbmRleE9mKGUpJiZLKGUsYSl9Y1tlXT0hMH19fVxuZnVuY3Rpb24gVGUoYSxiLGMsZCl7Yz05PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudDtkPT09RmUuaHRtbCYmKGQ9R2UoYSkpO2Q9PT1GZS5odG1sP1wic2NyaXB0XCI9PT1hPyhhPWMuY3JlYXRlRWxlbWVudChcImRpdlwiKSxhLmlubmVySFRNTD1cIjxzY3JpcHQ+XFx4M2Mvc2NyaXB0PlwiLGE9YS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpKTphPVwic3RyaW5nXCI9PT10eXBlb2YgYi5pcz9jLmNyZWF0ZUVsZW1lbnQoYSx7aXM6Yi5pc30pOmMuY3JlYXRlRWxlbWVudChhKTphPWMuY3JlYXRlRWxlbWVudE5TKGQsYSk7cmV0dXJuIGF9ZnVuY3Rpb24gVWUoYSxiKXtyZXR1cm4oOT09PWIubm9kZVR5cGU/YjpiLm93bmVyRG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKGEpfVxuZnVuY3Rpb24gVmUoYSxiLGMsZCl7dmFyIGU9UWUoYixjKTtzd2l0Y2goYil7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpLKFwibG9hZFwiLGEpO3ZhciBmPWM7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGY9MDtmPGpiLmxlbmd0aDtmKyspSyhqYltmXSxhKTtmPWM7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOksoXCJlcnJvclwiLGEpO2Y9YzticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpLKFwiZXJyb3JcIixhKTtLKFwibG9hZFwiLGEpO2Y9YzticmVhaztjYXNlIFwiZm9ybVwiOksoXCJyZXNldFwiLGEpO0soXCJzdWJtaXRcIixhKTtmPWM7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpLKFwidG9nZ2xlXCIsYSk7Zj1jO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkhjKGEsYyk7Zj1HYyhhLGMpO0soXCJpbnZhbGlkXCIsYSk7U2UoZCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpmPXllKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOkFlKGEsYyk7Zj1wKHt9LGMse3ZhbHVlOnZvaWQgMH0pO1xuSyhcImludmFsaWRcIixhKTtTZShkLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Q2UoYSxjKTtmPUJlKGEsYyk7SyhcImludmFsaWRcIixhKTtTZShkLFwib25DaGFuZ2VcIik7YnJlYWs7ZGVmYXVsdDpmPWN9UGUoYixmLFJlKTt2YXIgZz1mLGg7Zm9yKGggaW4gZylpZihnLmhhc093blByb3BlcnR5KGgpKXt2YXIgaz1nW2hdO1wic3R5bGVcIj09PWg/TmUoYSxrLFJlKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1oPyhrPWs/ay5fX2h0bWw6dm9pZCAwLG51bGwhPWsmJkplKGEsaykpOlwiY2hpbGRyZW5cIj09PWg/XCJzdHJpbmdcIj09PXR5cGVvZiBrPyhcInRleHRhcmVhXCIhPT1ifHxcIlwiIT09aykmJktlKGEsayk6XCJudW1iZXJcIj09PXR5cGVvZiBrJiZLZShhLFwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWgmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1oJiZcImF1dG9Gb2N1c1wiIT09aCYmKHJhLmhhc093blByb3BlcnR5KGgpP251bGwhPWsmJlNlKGQsXG5oKTpudWxsIT1rJiZGYyhhLGgsayxlKSl9c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOmNjKGEpO01jKGEsYywhMSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Y2MoYSk7RWUoYSxjKTticmVhaztjYXNlIFwib3B0aW9uXCI6bnVsbCE9Yy52YWx1ZSYmYS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLGMudmFsdWUpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLm11bHRpcGxlPSEhYy5tdWx0aXBsZTtiPWMudmFsdWU7bnVsbCE9Yj96ZShhLCEhYy5tdWx0aXBsZSxiLCExKTpudWxsIT1jLmRlZmF1bHRWYWx1ZSYmemUoYSwhIWMubXVsdGlwbGUsYy5kZWZhdWx0VmFsdWUsITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGYub25DbGljayYmKGEub25jbGljaz12KX19XG5mdW5jdGlvbiBXZShhLGIsYyxkLGUpe3ZhciBmPW51bGw7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOmM9R2MoYSxjKTtkPUdjKGEsZCk7Zj1bXTticmVhaztjYXNlIFwib3B0aW9uXCI6Yz15ZShhLGMpO2Q9eWUoYSxkKTtmPVtdO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjPXAoe30sYyx7dmFsdWU6dm9pZCAwfSk7ZD1wKHt9LGQse3ZhbHVlOnZvaWQgMH0pO2Y9W107YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Yz1CZShhLGMpO2Q9QmUoYSxkKTtmPVtdO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiIT09dHlwZW9mIGMub25DbGljayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQub25DbGljayYmKGEub25jbGljaz12KX1QZShiLGQsUmUpO2I9YT12b2lkIDA7dmFyIGc9bnVsbDtmb3IoYSBpbiBjKWlmKCFkLmhhc093blByb3BlcnR5KGEpJiZjLmhhc093blByb3BlcnR5KGEpJiZudWxsIT1jW2FdKWlmKFwic3R5bGVcIj09PWEpe3ZhciBoPWNbYV07Zm9yKGIgaW4gaCloLmhhc093blByb3BlcnR5KGIpJiYoZ3x8XG4oZz17fSksZ1tiXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09YSYmXCJjaGlsZHJlblwiIT09YSYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWEmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1hJiZcImF1dG9Gb2N1c1wiIT09YSYmKHJhLmhhc093blByb3BlcnR5KGEpP2Z8fChmPVtdKTooZj1mfHxbXSkucHVzaChhLG51bGwpKTtmb3IoYSBpbiBkKXt2YXIgaz1kW2FdO2g9bnVsbCE9Yz9jW2FdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGEpJiZrIT09aCYmKG51bGwhPWt8fG51bGwhPWgpKWlmKFwic3R5bGVcIj09PWEpaWYoaCl7Zm9yKGIgaW4gaCkhaC5oYXNPd25Qcm9wZXJ0eShiKXx8ayYmay5oYXNPd25Qcm9wZXJ0eShiKXx8KGd8fChnPXt9KSxnW2JdPVwiXCIpO2ZvcihiIGluIGspay5oYXNPd25Qcm9wZXJ0eShiKSYmaFtiXSE9PWtbYl0mJihnfHwoZz17fSksZ1tiXT1rW2JdKX1lbHNlIGd8fChmfHwoZj1bXSksZi5wdXNoKGEsZykpLFxuZz1rO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1hPyhrPWs/ay5fX2h0bWw6dm9pZCAwLGg9aD9oLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmaCE9PWsmJihmPWZ8fFtdKS5wdXNoKGEsXCJcIitrKSk6XCJjaGlsZHJlblwiPT09YT9oPT09a3x8XCJzdHJpbmdcIiE9PXR5cGVvZiBrJiZcIm51bWJlclwiIT09dHlwZW9mIGt8fChmPWZ8fFtdKS5wdXNoKGEsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09YSYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWEmJihyYS5oYXNPd25Qcm9wZXJ0eShhKT8obnVsbCE9ayYmU2UoZSxhKSxmfHxoPT09a3x8KGY9W10pKTooZj1mfHxbXSkucHVzaChhLGspKX1nJiYoZj1mfHxbXSkucHVzaChcInN0eWxlXCIsZyk7cmV0dXJuIGZ9XG5mdW5jdGlvbiBYZShhLGIsYyxkLGUpe1wiaW5wdXRcIj09PWMmJlwicmFkaW9cIj09PWUudHlwZSYmbnVsbCE9ZS5uYW1lJiZKYyhhLGUpO1FlKGMsZCk7ZD1RZShjLGUpO2Zvcih2YXIgZj0wO2Y8Yi5sZW5ndGg7Zis9Mil7dmFyIGc9YltmXSxoPWJbZisxXTtcInN0eWxlXCI9PT1nP05lKGEsaCxSZSk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9KZShhLGgpOlwiY2hpbGRyZW5cIj09PWc/S2UoYSxoKTpGYyhhLGcsaCxkKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6S2MoYSxlKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpEZShhLGUpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlPXZvaWQgMCxiPWEuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxhLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFlLm11bHRpcGxlLGM9ZS52YWx1ZSxudWxsIT1jP3plKGEsISFlLm11bHRpcGxlLGMsITEpOmIhPT0hIWUubXVsdGlwbGUmJihudWxsIT1lLmRlZmF1bHRWYWx1ZT9cbnplKGEsISFlLm11bHRpcGxlLGUuZGVmYXVsdFZhbHVlLCEwKTp6ZShhLCEhZS5tdWx0aXBsZSxlLm11bHRpcGxlP1tdOlwiXCIsITEpKX19XG5mdW5jdGlvbiBZZShhLGIsYyxkLGUpe3N3aXRjaChiKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOksoXCJsb2FkXCIsYSk7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGQ9MDtkPGpiLmxlbmd0aDtkKyspSyhqYltkXSxhKTticmVhaztjYXNlIFwic291cmNlXCI6SyhcImVycm9yXCIsYSk7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6SyhcImVycm9yXCIsYSk7SyhcImxvYWRcIixhKTticmVhaztjYXNlIFwiZm9ybVwiOksoXCJyZXNldFwiLGEpO0soXCJzdWJtaXRcIixhKTticmVhaztjYXNlIFwiZGV0YWlsc1wiOksoXCJ0b2dnbGVcIixhKTticmVhaztjYXNlIFwiaW5wdXRcIjpIYyhhLGMpO0soXCJpbnZhbGlkXCIsYSk7U2UoZSxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpBZShhLGMpO0soXCJpbnZhbGlkXCIsYSk7U2UoZSxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOkNlKGEsYyksSyhcImludmFsaWRcIixhKSxTZShlLFwib25DaGFuZ2VcIil9UGUoYixcbmMsUmUpO2Q9bnVsbDtmb3IodmFyIGYgaW4gYylpZihjLmhhc093blByb3BlcnR5KGYpKXt2YXIgZz1jW2ZdO1wiY2hpbGRyZW5cIj09PWY/XCJzdHJpbmdcIj09PXR5cGVvZiBnP2EudGV4dENvbnRlbnQhPT1nJiYoZD1bXCJjaGlsZHJlblwiLGddKTpcIm51bWJlclwiPT09dHlwZW9mIGcmJmEudGV4dENvbnRlbnQhPT1cIlwiK2cmJihkPVtcImNoaWxkcmVuXCIsXCJcIitnXSk6cmEuaGFzT3duUHJvcGVydHkoZikmJm51bGwhPWcmJlNlKGUsZil9c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOmNjKGEpO01jKGEsYywhMCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Y2MoYSk7RWUoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGMub25DbGljayYmKGEub25jbGljaz12KX1yZXR1cm4gZH1mdW5jdGlvbiBaZShhLGIpe3JldHVybiBhLm5vZGVWYWx1ZSE9PWJ9XG52YXIgJGU9e2NyZWF0ZUVsZW1lbnQ6VGUsY3JlYXRlVGV4dE5vZGU6VWUsc2V0SW5pdGlhbFByb3BlcnRpZXM6VmUsZGlmZlByb3BlcnRpZXM6V2UsdXBkYXRlUHJvcGVydGllczpYZSxkaWZmSHlkcmF0ZWRQcm9wZXJ0aWVzOlllLGRpZmZIeWRyYXRlZFRleHQ6WmUsd2FybkZvclVubWF0Y2hlZFRleHQ6ZnVuY3Rpb24oKXt9LHdhcm5Gb3JEZWxldGVkSHlkcmF0YWJsZUVsZW1lbnQ6ZnVuY3Rpb24oKXt9LHdhcm5Gb3JEZWxldGVkSHlkcmF0YWJsZVRleHQ6ZnVuY3Rpb24oKXt9LHdhcm5Gb3JJbnNlcnRlZEh5ZHJhdGVkRWxlbWVudDpmdW5jdGlvbigpe30sd2FybkZvckluc2VydGVkSHlkcmF0ZWRUZXh0OmZ1bmN0aW9uKCl7fSxyZXN0b3JlQ29udHJvbGxlZFN0YXRlOmZ1bmN0aW9uKGEsYixjKXtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6S2MoYSxjKTtiPWMubmFtZTtpZihcInJhZGlvXCI9PT1jLnR5cGUmJm51bGwhPWIpe2ZvcihjPWE7Yy5wYXJlbnROb2RlOyljPWMucGFyZW50Tm9kZTtcbmM9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT1cIitKU09OLnN0cmluZ2lmeShcIlwiK2IpKyddW3R5cGU9XCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9UGEoZCk7ZT92b2lkIDA6QShcIjkwXCIpO2RjKGQpO0tjKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjpEZShhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmemUoYSwhIWMubXVsdGlwbGUsYiwhMSl9fX0sYWY9bnVsbCxiZj1udWxsO2Z1bmN0aW9uIGNmKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1cbmZ1bmN0aW9uIGRmKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm51bWJlclwiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9PWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwic3RyaW5nXCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9dmFyIGVmPWdlLGZmPWllLGdmPWplO2Z1bmN0aW9uIGhmKGEpe2ZvcihhPWEubmV4dFNpYmxpbmc7YSYmMSE9PWEubm9kZVR5cGUmJjMhPT1hLm5vZGVUeXBlOylhPWEubmV4dFNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gamYoYSl7Zm9yKGE9YS5maXJzdENoaWxkO2EmJjEhPT1hLm5vZGVUeXBlJiYzIT09YS5ub2RlVHlwZTspYT1hLm5leHRTaWJsaW5nO3JldHVybiBhfW5ldyBTZXQ7dmFyIGtmPVtdLGxmPS0xO2Z1bmN0aW9uIG1mKGEpe3JldHVybntjdXJyZW50OmF9fVxuZnVuY3Rpb24gTShhKXswPmxmfHwoYS5jdXJyZW50PWtmW2xmXSxrZltsZl09bnVsbCxsZi0tKX1mdW5jdGlvbiBOKGEsYil7bGYrKztrZltsZl09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBuZj1tZihoYSksTz1tZighMSksb2Y9aGE7ZnVuY3Rpb24gcGYoYSl7cmV0dXJuIHFmKGEpP29mOm5mLmN1cnJlbnR9XG5mdW5jdGlvbiByZihhLGIpe3ZhciBjPWEudHlwZS5jb250ZXh0VHlwZXM7aWYoIWMpcmV0dXJuIGhhO3ZhciBkPWEuc3RhdGVOb2RlO2lmKGQmJmQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD09PWIpcmV0dXJuIGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ7dmFyIGU9e30sZjtmb3IoZiBpbiBjKWVbZl09YltmXTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9YixhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWUpO3JldHVybiBlfWZ1bmN0aW9uIHFmKGEpe3JldHVybiAyPT09YS50YWcmJm51bGwhPWEudHlwZS5jaGlsZENvbnRleHRUeXBlc31mdW5jdGlvbiBzZihhKXtxZihhKSYmKE0oTyxhKSxNKG5mLGEpKX1mdW5jdGlvbiB0ZihhKXtNKE8sYSk7TShuZixhKX1cbmZ1bmN0aW9uIHVmKGEsYixjKXtuZi5jdXJyZW50IT09aGE/QShcIjE2OFwiKTp2b2lkIDA7TihuZixiLGEpO04oTyxjLGEpfWZ1bmN0aW9uIHZmKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGUsZD1hLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBiO2M9Yy5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gYyllIGluIGQ/dm9pZCAwOkEoXCIxMDhcIix1YyhhKXx8XCJVbmtub3duXCIsZSk7cmV0dXJuIHAoe30sYixjKX1mdW5jdGlvbiB3ZihhKXtpZighcWYoYSkpcmV0dXJuITE7dmFyIGI9YS5zdGF0ZU5vZGU7Yj1iJiZiLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxoYTtvZj1uZi5jdXJyZW50O04obmYsYixhKTtOKE8sTy5jdXJyZW50LGEpO3JldHVybiEwfVxuZnVuY3Rpb24geGYoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtjP3ZvaWQgMDpBKFwiMTY5XCIpO2lmKGIpe3ZhciBkPXZmKGEsb2YpO2MuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9ZDtNKE8sYSk7TShuZixhKTtOKG5mLGQsYSl9ZWxzZSBNKE8sYSk7TihPLGIsYSl9XG5mdW5jdGlvbiB5ZihhLGIsYyxkKXt0aGlzLnRhZz1hO3RoaXMua2V5PWM7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpcy5yZXR1cm49dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbDt0aGlzLm1vZGU9ZDt0aGlzLmVmZmVjdFRhZz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuZXhwaXJhdGlvblRpbWU9MDt0aGlzLmFsdGVybmF0ZT1udWxsfVxuZnVuY3Rpb24gemYoYSxiLGMpe3ZhciBkPWEuYWx0ZXJuYXRlO251bGw9PT1kPyhkPW5ldyB5ZihhLnRhZyxiLGEua2V5LGEubW9kZSksZC50eXBlPWEudHlwZSxkLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxkLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWQpOihkLnBlbmRpbmdQcm9wcz1iLGQuZWZmZWN0VGFnPTAsZC5uZXh0RWZmZWN0PW51bGwsZC5maXJzdEVmZmVjdD1udWxsLGQubGFzdEVmZmVjdD1udWxsKTtkLmV4cGlyYXRpb25UaW1lPWM7ZC5jaGlsZD1hLmNoaWxkO2QubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7ZC5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtkLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7ZC5zaWJsaW5nPWEuc2libGluZztkLmluZGV4PWEuaW5kZXg7ZC5yZWY9YS5yZWY7cmV0dXJuIGR9XG5mdW5jdGlvbiBBZihhLGIsYyl7dmFyIGQ9YS50eXBlLGU9YS5rZXk7YT1hLnByb3BzO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXZhciBmPWQucHJvdG90eXBlJiZkLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PzI6MDtlbHNlIGlmKFwic3RyaW5nXCI9PT10eXBlb2YgZClmPTU7ZWxzZSBzd2l0Y2goZCl7Y2FzZSBpYzpyZXR1cm4gQmYoYS5jaGlsZHJlbixiLGMsZSk7Y2FzZSBwYzpmPTExO2J8PTM7YnJlYWs7Y2FzZSBqYzpmPTExO2J8PTI7YnJlYWs7Y2FzZSBrYzpyZXR1cm4gZD1uZXcgeWYoMTUsYSxlLGJ8NCksZC50eXBlPWtjLGQuZXhwaXJhdGlvblRpbWU9YyxkO2Nhc2UgcmM6Zj0xNjtifD0yO2JyZWFrO2RlZmF1bHQ6YTp7c3dpdGNoKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQ/ZC4kJHR5cGVvZjpudWxsKXtjYXNlIGxjOmY9MTM7YnJlYWsgYTtjYXNlIG1jOmY9MTI7YnJlYWsgYTtjYXNlIHFjOmY9MTQ7YnJlYWsgYTtkZWZhdWx0OkEoXCIxMzBcIixudWxsPT1kP1xuZDp0eXBlb2YgZCxcIlwiKX1mPXZvaWQgMH19Yj1uZXcgeWYoZixhLGUsYik7Yi50eXBlPWQ7Yi5leHBpcmF0aW9uVGltZT1jO3JldHVybiBifWZ1bmN0aW9uIEJmKGEsYixjLGQpe2E9bmV3IHlmKDEwLGEsZCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9ZnVuY3Rpb24gQ2YoYSxiLGMpe2E9bmV3IHlmKDYsYSxudWxsLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1mdW5jdGlvbiBEZihhLGIsYyl7Yj1uZXcgeWYoNCxudWxsIT09YS5jaGlsZHJlbj9hLmNoaWxkcmVuOltdLGEua2V5LGIpO2IuZXhwaXJhdGlvblRpbWU9YztiLnN0YXRlTm9kZT17Y29udGFpbmVySW5mbzphLmNvbnRhaW5lckluZm8scGVuZGluZ0NoaWxkcmVuOm51bGwsaW1wbGVtZW50YXRpb246YS5pbXBsZW1lbnRhdGlvbn07cmV0dXJuIGJ9XG5mdW5jdGlvbiBFZihhLGIsYyl7Yj1uZXcgeWYoMyxudWxsLG51bGwsYj8zOjApO2E9e2N1cnJlbnQ6Yixjb250YWluZXJJbmZvOmEscGVuZGluZ0NoaWxkcmVuOm51bGwsZWFybGllc3RQZW5kaW5nVGltZTowLGxhdGVzdFBlbmRpbmdUaW1lOjAsZWFybGllc3RTdXNwZW5kZWRUaW1lOjAsbGF0ZXN0U3VzcGVuZGVkVGltZTowLGxhdGVzdFBpbmdlZFRpbWU6MCxwZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU6MCxmaW5pc2hlZFdvcms6bnVsbCxjb250ZXh0Om51bGwscGVuZGluZ0NvbnRleHQ6bnVsbCxoeWRyYXRlOmMscmVtYWluaW5nRXhwaXJhdGlvblRpbWU6MCxmaXJzdEJhdGNoOm51bGwsbmV4dFNjaGVkdWxlZFJvb3Q6bnVsbH07cmV0dXJuIGIuc3RhdGVOb2RlPWF9dmFyIEZmPW51bGwsR2Y9bnVsbDtmdW5jdGlvbiBIZihhKXtyZXR1cm4gZnVuY3Rpb24oYil7dHJ5e3JldHVybiBhKGIpfWNhdGNoKGMpe319fVxuZnVuY3Rpb24gSWYoYSl7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18pcmV0dXJuITE7dmFyIGI9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKGIuaXNEaXNhYmxlZHx8IWIuc3VwcG9ydHNGaWJlcilyZXR1cm4hMDt0cnl7dmFyIGM9Yi5pbmplY3QoYSk7RmY9SGYoZnVuY3Rpb24oYSl7cmV0dXJuIGIub25Db21taXRGaWJlclJvb3QoYyxhKX0pO0dmPUhmKGZ1bmN0aW9uKGEpe3JldHVybiBiLm9uQ29tbWl0RmliZXJVbm1vdW50KGMsYSl9KX1jYXRjaChkKXt9cmV0dXJuITB9ZnVuY3Rpb24gSmYoYSl7XCJmdW5jdGlvblwiPT09dHlwZW9mIEZmJiZGZihhKX1mdW5jdGlvbiBLZihhKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgR2YmJkdmKGEpfXZhciBMZj0hMTtcbmZ1bmN0aW9uIE1mKGEpe3JldHVybntleHBpcmF0aW9uVGltZTowLGJhc2VTdGF0ZTphLGZpcnN0VXBkYXRlOm51bGwsbGFzdFVwZGF0ZTpudWxsLGZpcnN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxsYXN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxmaXJzdEVmZmVjdDpudWxsLGxhc3RFZmZlY3Q6bnVsbCxmaXJzdENhcHR1cmVkRWZmZWN0Om51bGwsbGFzdENhcHR1cmVkRWZmZWN0Om51bGx9fWZ1bmN0aW9uIE5mKGEpe3JldHVybntleHBpcmF0aW9uVGltZTphLmV4cGlyYXRpb25UaW1lLGJhc2VTdGF0ZTphLmJhc2VTdGF0ZSxmaXJzdFVwZGF0ZTphLmZpcnN0VXBkYXRlLGxhc3RVcGRhdGU6YS5sYXN0VXBkYXRlLGZpcnN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxsYXN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxmaXJzdEVmZmVjdDpudWxsLGxhc3RFZmZlY3Q6bnVsbCxmaXJzdENhcHR1cmVkRWZmZWN0Om51bGwsbGFzdENhcHR1cmVkRWZmZWN0Om51bGx9fVxuZnVuY3Rpb24gT2YoYSl7cmV0dXJue2V4cGlyYXRpb25UaW1lOmEsdGFnOjAscGF5bG9hZDpudWxsLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsLG5leHRFZmZlY3Q6bnVsbH19ZnVuY3Rpb24gUGYoYSxiLGMpe251bGw9PT1hLmxhc3RVcGRhdGU/YS5maXJzdFVwZGF0ZT1hLmxhc3RVcGRhdGU9YjooYS5sYXN0VXBkYXRlLm5leHQ9YixhLmxhc3RVcGRhdGU9Yik7aWYoMD09PWEuZXhwaXJhdGlvblRpbWV8fGEuZXhwaXJhdGlvblRpbWU+YylhLmV4cGlyYXRpb25UaW1lPWN9XG5mdW5jdGlvbiBRZihhLGIsYyl7dmFyIGQ9YS5hbHRlcm5hdGU7aWYobnVsbD09PWQpe3ZhciBlPWEudXBkYXRlUXVldWU7dmFyIGY9bnVsbDtudWxsPT09ZSYmKGU9YS51cGRhdGVRdWV1ZT1NZihhLm1lbW9pemVkU3RhdGUpKX1lbHNlIGU9YS51cGRhdGVRdWV1ZSxmPWQudXBkYXRlUXVldWUsbnVsbD09PWU/bnVsbD09PWY/KGU9YS51cGRhdGVRdWV1ZT1NZihhLm1lbW9pemVkU3RhdGUpLGY9ZC51cGRhdGVRdWV1ZT1NZihkLm1lbW9pemVkU3RhdGUpKTplPWEudXBkYXRlUXVldWU9TmYoZik6bnVsbD09PWYmJihmPWQudXBkYXRlUXVldWU9TmYoZSkpO251bGw9PT1mfHxlPT09Zj9QZihlLGIsYyk6bnVsbD09PWUubGFzdFVwZGF0ZXx8bnVsbD09PWYubGFzdFVwZGF0ZT8oUGYoZSxiLGMpLFBmKGYsYixjKSk6KFBmKGUsYixjKSxmLmxhc3RVcGRhdGU9Yil9XG5mdW5jdGlvbiBSZihhLGIsYyl7dmFyIGQ9YS51cGRhdGVRdWV1ZTtkPW51bGw9PT1kP2EudXBkYXRlUXVldWU9TWYoYS5tZW1vaXplZFN0YXRlKTpTZihhLGQpO251bGw9PT1kLmxhc3RDYXB0dXJlZFVwZGF0ZT9kLmZpcnN0Q2FwdHVyZWRVcGRhdGU9ZC5sYXN0Q2FwdHVyZWRVcGRhdGU9YjooZC5sYXN0Q2FwdHVyZWRVcGRhdGUubmV4dD1iLGQubGFzdENhcHR1cmVkVXBkYXRlPWIpO2lmKDA9PT1kLmV4cGlyYXRpb25UaW1lfHxkLmV4cGlyYXRpb25UaW1lPmMpZC5leHBpcmF0aW9uVGltZT1jfWZ1bmN0aW9uIFNmKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmI9PT1jLnVwZGF0ZVF1ZXVlJiYoYj1hLnVwZGF0ZVF1ZXVlPU5mKGIpKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIFRmKGEsYixjLGQsZSxmKXtzd2l0Y2goYy50YWcpe2Nhc2UgMTpyZXR1cm4gYT1jLnBheWxvYWQsXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YS5jYWxsKGYsZCxlKTphO2Nhc2UgMzphLmVmZmVjdFRhZz1hLmVmZmVjdFRhZyYtMTAyNXw2NDtjYXNlIDA6YT1jLnBheWxvYWQ7ZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hLmNhbGwoZixkLGUpOmE7aWYobnVsbD09PWV8fHZvaWQgMD09PWUpYnJlYWs7cmV0dXJuIHAoe30sZCxlKTtjYXNlIDI6TGY9ITB9cmV0dXJuIGR9XG5mdW5jdGlvbiBVZihhLGIsYyxkLGUpe0xmPSExO2lmKCEoMD09PWIuZXhwaXJhdGlvblRpbWV8fGIuZXhwaXJhdGlvblRpbWU+ZSkpe2I9U2YoYSxiKTtmb3IodmFyIGY9Yi5iYXNlU3RhdGUsZz1udWxsLGg9MCxrPWIuZmlyc3RVcGRhdGUsbj1mO251bGwhPT1rOyl7dmFyIHI9ay5leHBpcmF0aW9uVGltZTtpZihyPmUpe2lmKG51bGw9PT1nJiYoZz1rLGY9biksMD09PWh8fGg+ciloPXJ9ZWxzZSBuPVRmKGEsYixrLG4sYyxkKSxudWxsIT09ay5jYWxsYmFjayYmKGEuZWZmZWN0VGFnfD0zMixrLm5leHRFZmZlY3Q9bnVsbCxudWxsPT09Yi5sYXN0RWZmZWN0P2IuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWs6KGIubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWssYi5sYXN0RWZmZWN0PWspKTtrPWsubmV4dH1yPW51bGw7Zm9yKGs9Yi5maXJzdENhcHR1cmVkVXBkYXRlO251bGwhPT1rOyl7dmFyIHc9ay5leHBpcmF0aW9uVGltZTtpZih3PmUpe2lmKG51bGw9PT1yJiYocj1rLG51bGw9PT1cbmcmJihmPW4pKSwwPT09aHx8aD53KWg9d31lbHNlIG49VGYoYSxiLGssbixjLGQpLG51bGwhPT1rLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PTMyLGsubmV4dEVmZmVjdD1udWxsLG51bGw9PT1iLmxhc3RDYXB0dXJlZEVmZmVjdD9iLmZpcnN0Q2FwdHVyZWRFZmZlY3Q9Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q9azooYi5sYXN0Q2FwdHVyZWRFZmZlY3QubmV4dEVmZmVjdD1rLGIubGFzdENhcHR1cmVkRWZmZWN0PWspKTtrPWsubmV4dH1udWxsPT09ZyYmKGIubGFzdFVwZGF0ZT1udWxsKTtudWxsPT09cj9iLmxhc3RDYXB0dXJlZFVwZGF0ZT1udWxsOmEuZWZmZWN0VGFnfD0zMjtudWxsPT09ZyYmbnVsbD09PXImJihmPW4pO2IuYmFzZVN0YXRlPWY7Yi5maXJzdFVwZGF0ZT1nO2IuZmlyc3RDYXB0dXJlZFVwZGF0ZT1yO2IuZXhwaXJhdGlvblRpbWU9aDthLm1lbW9pemVkU3RhdGU9bn19XG5mdW5jdGlvbiBWZihhLGIpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBhP0EoXCIxOTFcIixhKTp2b2lkIDA7YS5jYWxsKGIpfVxuZnVuY3Rpb24gV2YoYSxiLGMpe251bGwhPT1iLmZpcnN0Q2FwdHVyZWRVcGRhdGUmJihudWxsIT09Yi5sYXN0VXBkYXRlJiYoYi5sYXN0VXBkYXRlLm5leHQ9Yi5maXJzdENhcHR1cmVkVXBkYXRlLGIubGFzdFVwZGF0ZT1iLmxhc3RDYXB0dXJlZFVwZGF0ZSksYi5maXJzdENhcHR1cmVkVXBkYXRlPWIubGFzdENhcHR1cmVkVXBkYXRlPW51bGwpO2E9Yi5maXJzdEVmZmVjdDtmb3IoYi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9bnVsbDtudWxsIT09YTspe3ZhciBkPWEuY2FsbGJhY2s7bnVsbCE9PWQmJihhLmNhbGxiYWNrPW51bGwsVmYoZCxjKSk7YT1hLm5leHRFZmZlY3R9YT1iLmZpcnN0Q2FwdHVyZWRFZmZlY3Q7Zm9yKGIuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1udWxsO251bGwhPT1hOyliPWEuY2FsbGJhY2ssbnVsbCE9PWImJihhLmNhbGxiYWNrPW51bGwsVmYoYixjKSksYT1hLm5leHRFZmZlY3R9XG5mdW5jdGlvbiBYZihhLGIpe3JldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOnZjKGIpfX12YXIgWWY9bWYobnVsbCksWmY9bWYobnVsbCksJGY9bWYoMCk7ZnVuY3Rpb24gYWcoYSl7dmFyIGI9YS50eXBlLl9jb250ZXh0O04oJGYsYi5fY2hhbmdlZEJpdHMsYSk7TihaZixiLl9jdXJyZW50VmFsdWUsYSk7TihZZixhLGEpO2IuX2N1cnJlbnRWYWx1ZT1hLnBlbmRpbmdQcm9wcy52YWx1ZTtiLl9jaGFuZ2VkQml0cz1hLnN0YXRlTm9kZX1mdW5jdGlvbiBiZyhhKXt2YXIgYj0kZi5jdXJyZW50LGM9WmYuY3VycmVudDtNKFlmLGEpO00oWmYsYSk7TSgkZixhKTthPWEudHlwZS5fY29udGV4dDthLl9jdXJyZW50VmFsdWU9YzthLl9jaGFuZ2VkQml0cz1ifXZhciBjZz17fSxkZz1tZihjZyksZWc9bWYoY2cpLGZnPW1mKGNnKTtmdW5jdGlvbiBnZyhhKXthPT09Y2c/QShcIjE3NFwiKTp2b2lkIDA7cmV0dXJuIGF9XG5mdW5jdGlvbiBpZyhhLGIpe04oZmcsYixhKTtOKGVnLGEsYSk7TihkZyxjZyxhKTt2YXIgYz1iLm5vZGVUeXBlO3N3aXRjaChjKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTpIZShudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6Yz04PT09Yz9iLnBhcmVudE5vZGU6YixiPWMubmFtZXNwYWNlVVJJfHxudWxsLGM9Yy50YWdOYW1lLGI9SGUoYixjKX1NKGRnLGEpO04oZGcsYixhKX1mdW5jdGlvbiBqZyhhKXtNKGRnLGEpO00oZWcsYSk7TShmZyxhKX1mdW5jdGlvbiBrZyhhKXtlZy5jdXJyZW50PT09YSYmKE0oZGcsYSksTShlZyxhKSl9ZnVuY3Rpb24gbGcoYSxiLGMpe3ZhciBkPWEubWVtb2l6ZWRTdGF0ZTtiPWIoYyxkKTtkPW51bGw9PT1ifHx2b2lkIDA9PT1iP2Q6cCh7fSxkLGIpO2EubWVtb2l6ZWRTdGF0ZT1kO2E9YS51cGRhdGVRdWV1ZTtudWxsIT09YSYmMD09PWEuZXhwaXJhdGlvblRpbWUmJihhLmJhc2VTdGF0ZT1kKX1cbnZhciBwZz17aXNNb3VudGVkOmZ1bmN0aW9uKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxGaWJlcik/Mj09PWpkKGEpOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPW1nKCk7ZD1uZyhkLGEpO3ZhciBlPU9mKGQpO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTtRZihhLGUsZCk7b2coYSxkKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9bWcoKTtkPW5nKGQsYSk7dmFyIGU9T2YoZCk7ZS50YWc9MTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7UWYoYSxlLGQpO29nKGEsZCl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBjPW1nKCk7Yz1uZyhjLGEpO3ZhciBkPU9mKGMpO2QudGFnPTI7dm9pZCAwIT09XG5iJiZudWxsIT09YiYmKGQuY2FsbGJhY2s9Yik7UWYoYSxkLGMpO29nKGEsYyl9fTtmdW5jdGlvbiBxZyhhLGIsYyxkLGUsZil7dmFyIGc9YS5zdGF0ZU5vZGU7YT1hLnR5cGU7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuc2hvdWxkQ29tcG9uZW50VXBkYXRlP2cuc2hvdWxkQ29tcG9uZW50VXBkYXRlKGMsZSxmKTphLnByb3RvdHlwZSYmYS5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IWVhKGIsYyl8fCFlYShkLGUpOiEwfVxuZnVuY3Rpb24gcmcoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJnBnLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24gc2coYSxiKXt2YXIgYz1hLnR5cGUsZD1hLnN0YXRlTm9kZSxlPWEucGVuZGluZ1Byb3BzLGY9cGYoYSk7ZC5wcm9wcz1lO2Quc3RhdGU9YS5tZW1vaXplZFN0YXRlO2QucmVmcz1oYTtkLmNvbnRleHQ9cmYoYSxmKTtmPWEudXBkYXRlUXVldWU7bnVsbCE9PWYmJihVZihhLGYsZSxkLGIpLGQuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtmPWEudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihsZyhhLGYsZSksZC5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wc3x8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmNvbXBvbmVudFdpbGxNb3VudHx8KGM9ZC5zdGF0ZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnRXaWxsTW91bnQmJlxuZC5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZkLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSxjIT09ZC5zdGF0ZSYmcGcuZW5xdWV1ZVJlcGxhY2VTdGF0ZShkLGQuc3RhdGUsbnVsbCksZj1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1mJiYoVWYoYSxmLGUsZCxiKSxkLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSkpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZE1vdW50JiYoYS5lZmZlY3RUYWd8PTQpfXZhciB0Zz1BcnJheS5pc0FycmF5O1xuZnVuY3Rpb24gdWcoYSxiLGMpe2E9Yy5yZWY7aWYobnVsbCE9PWEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZcIm9iamVjdFwiIT09dHlwZW9mIGEpe2lmKGMuX293bmVyKXtjPWMuX293bmVyO3ZhciBkPXZvaWQgMDtjJiYoMiE9PWMudGFnP0EoXCIxMTBcIik6dm9pZCAwLGQ9Yy5zdGF0ZU5vZGUpO2Q/dm9pZCAwOkEoXCIxNDdcIixhKTt2YXIgZT1cIlwiK2E7aWYobnVsbCE9PWImJm51bGwhPT1iLnJlZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGIucmVmJiZiLnJlZi5fc3RyaW5nUmVmPT09ZSlyZXR1cm4gYi5yZWY7Yj1mdW5jdGlvbihhKXt2YXIgYj1kLnJlZnM9PT1oYT9kLnJlZnM9e306ZC5yZWZzO251bGw9PT1hP2RlbGV0ZSBiW2VdOmJbZV09YX07Yi5fc3RyaW5nUmVmPWU7cmV0dXJuIGJ9XCJzdHJpbmdcIiE9PXR5cGVvZiBhP0EoXCIxNDhcIik6dm9pZCAwO2MuX293bmVyP3ZvaWQgMDpBKFwiMjU0XCIsYSl9cmV0dXJuIGF9XG5mdW5jdGlvbiB2ZyhhLGIpe1widGV4dGFyZWFcIiE9PWEudHlwZSYmQShcIjMxXCIsXCJbb2JqZWN0IE9iamVjdF1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChiKT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGIpLmpvaW4oXCIsIFwiKStcIn1cIjpiLFwiXCIpfVxuZnVuY3Rpb24gd2coYSl7ZnVuY3Rpb24gYihiLGMpe2lmKGEpe3ZhciBkPWIubGFzdEVmZmVjdDtudWxsIT09ZD8oZC5uZXh0RWZmZWN0PWMsYi5sYXN0RWZmZWN0PWMpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWM7Yy5uZXh0RWZmZWN0PW51bGw7Yy5lZmZlY3RUYWc9OH19ZnVuY3Rpb24gYyhjLGQpe2lmKCFhKXJldHVybiBudWxsO2Zvcig7bnVsbCE9PWQ7KWIoYyxkKSxkPWQuc2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBkKGEsYil7Zm9yKGE9bmV3IE1hcDtudWxsIT09YjspbnVsbCE9PWIua2V5P2Euc2V0KGIua2V5LGIpOmEuc2V0KGIuaW5kZXgsYiksYj1iLnNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gZShhLGIsYyl7YT16ZihhLGIsYyk7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmVmZmVjdFRhZz1cbjIsYyk6ZDtiLmVmZmVjdFRhZz0yO3JldHVybiBjfWZ1bmN0aW9uIGcoYil7YSYmbnVsbD09PWIuYWx0ZXJuYXRlJiYoYi5lZmZlY3RUYWc9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPUNmKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gayhhLGIsYyxkKXtpZihudWxsIT09YiYmYi50eXBlPT09Yy50eXBlKXJldHVybiBkPWUoYixjLnByb3BzLGQpLGQucmVmPXVnKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1BZihjLGEubW9kZSxkKTtkLnJlZj11ZyhhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBuKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09Yy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj1cbkRmKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIHIoYSxiLGMsZCxmKXtpZihudWxsPT09Ynx8MTAhPT1iLnRhZylyZXR1cm4gYj1CZihjLGEubW9kZSxkLGYpLGIucmV0dXJuPWEsYjtiPWUoYixjLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gdyhhLGIsYyl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBifHxcIm51bWJlclwiPT09dHlwZW9mIGIpcmV0dXJuIGI9Q2YoXCJcIitiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yil7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2UgZ2M6cmV0dXJuIGM9QWYoYixhLm1vZGUsYyksYy5yZWY9dWcoYSxudWxsLGIpLGMucmV0dXJuPWEsYztjYXNlIGhjOnJldHVybiBiPURmKGIsYS5tb2RlLGMpLGIucmV0dXJuPWEsYn1pZih0ZyhiKXx8dGMoYikpcmV0dXJuIGI9QmYoYixhLm1vZGUsYyxudWxsKSxiLnJldHVybj1cbmEsYjt2ZyhhLGIpfXJldHVybiBudWxsfWZ1bmN0aW9uIFAoYSxiLGMsZCl7dmFyIGU9bnVsbCE9PWI/Yi5rZXk6bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGN8fFwibnVtYmVyXCI9PT10eXBlb2YgYylyZXR1cm4gbnVsbCE9PWU/bnVsbDpoKGEsYixcIlwiK2MsZCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7c3dpdGNoKGMuJCR0eXBlb2Ype2Nhc2UgZ2M6cmV0dXJuIGMua2V5PT09ZT9jLnR5cGU9PT1pYz9yKGEsYixjLnByb3BzLmNoaWxkcmVuLGQsZSk6ayhhLGIsYyxkKTpudWxsO2Nhc2UgaGM6cmV0dXJuIGMua2V5PT09ZT9uKGEsYixjLGQpOm51bGx9aWYodGcoYyl8fHRjKGMpKXJldHVybiBudWxsIT09ZT9udWxsOnIoYSxiLGMsZCxudWxsKTt2ZyhhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIG5jKGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsaChiLGEsXCJcIitkLGUpO1xuaWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2UgZ2M6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PWljP3IoYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6ayhiLGEsZCxlKTtjYXNlIGhjOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxuKGIsYSxkLGUpfWlmKHRnKGQpfHx0YyhkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxyKGIsYSxkLGUsbnVsbCk7dmcoYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBKZChlLGcsaCxrKXtmb3IodmFyIHU9bnVsbCx4PW51bGwsdD1nLHE9Zz0wLG49bnVsbDtudWxsIT09dCYmcTxoLmxlbmd0aDtxKyspe3QuaW5kZXg+cT8obj10LHQ9bnVsbCk6bj10LnNpYmxpbmc7dmFyIGw9UChlLHQsaFtxXSxrKTtpZihudWxsPT09bCl7bnVsbD09PXQmJih0PW4pO2JyZWFrfWEmJnQmJm51bGw9PT1sLmFsdGVybmF0ZSYmYihlLFxudCk7Zz1mKGwsZyxxKTtudWxsPT09eD91PWw6eC5zaWJsaW5nPWw7eD1sO3Q9bn1pZihxPT09aC5sZW5ndGgpcmV0dXJuIGMoZSx0KSx1O2lmKG51bGw9PT10KXtmb3IoO3E8aC5sZW5ndGg7cSsrKWlmKHQ9dyhlLGhbcV0saykpZz1mKHQsZyxxKSxudWxsPT09eD91PXQ6eC5zaWJsaW5nPXQseD10O3JldHVybiB1fWZvcih0PWQoZSx0KTtxPGgubGVuZ3RoO3ErKylpZihuPW5jKHQsZSxxLGhbcV0saykpYSYmbnVsbCE9PW4uYWx0ZXJuYXRlJiZ0LmRlbGV0ZShudWxsPT09bi5rZXk/cTpuLmtleSksZz1mKG4sZyxxKSxudWxsPT09eD91PW46eC5zaWJsaW5nPW4seD1uO2EmJnQuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIHV9ZnVuY3Rpb24gRShlLGcsaCxrKXt2YXIgdT10YyhoKTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgdT9BKFwiMTUwXCIpOnZvaWQgMDtoPXUuY2FsbChoKTtudWxsPT1oP0EoXCIxNTFcIik6dm9pZCAwO2Zvcih2YXIgdD11PW51bGwsbj1nLHg9XG5nPTAseT1udWxsLGw9aC5uZXh0KCk7bnVsbCE9PW4mJiFsLmRvbmU7eCsrLGw9aC5uZXh0KCkpe24uaW5kZXg+eD8oeT1uLG49bnVsbCk6eT1uLnNpYmxpbmc7dmFyIHI9UChlLG4sbC52YWx1ZSxrKTtpZihudWxsPT09cil7bnx8KG49eSk7YnJlYWt9YSYmbiYmbnVsbD09PXIuYWx0ZXJuYXRlJiZiKGUsbik7Zz1mKHIsZyx4KTtudWxsPT09dD91PXI6dC5zaWJsaW5nPXI7dD1yO249eX1pZihsLmRvbmUpcmV0dXJuIGMoZSxuKSx1O2lmKG51bGw9PT1uKXtmb3IoOyFsLmRvbmU7eCsrLGw9aC5uZXh0KCkpbD13KGUsbC52YWx1ZSxrKSxudWxsIT09bCYmKGc9ZihsLGcseCksbnVsbD09PXQ/dT1sOnQuc2libGluZz1sLHQ9bCk7cmV0dXJuIHV9Zm9yKG49ZChlLG4pOyFsLmRvbmU7eCsrLGw9aC5uZXh0KCkpbD1uYyhuLGUseCxsLnZhbHVlLGspLG51bGwhPT1sJiYoYSYmbnVsbCE9PWwuYWx0ZXJuYXRlJiZuLmRlbGV0ZShudWxsPT09bC5rZXk/eDpsLmtleSksZz1mKGwsZyx4KSxudWxsPT09XG50P3U9bDp0LnNpYmxpbmc9bCx0PWwpO2EmJm4uZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIHV9cmV0dXJuIGZ1bmN0aW9uKGEsZCxmLGgpe3ZhciBrPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYudHlwZT09PWljJiZudWxsPT09Zi5rZXk7ayYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7dmFyIG49XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZjtpZihuKXN3aXRjaChmLiQkdHlwZW9mKXtjYXNlIGdjOmE6e249Zi5rZXk7Zm9yKGs9ZDtudWxsIT09azspe2lmKGsua2V5PT09bilpZigxMD09PWsudGFnP2YudHlwZT09PWljOmsudHlwZT09PWYudHlwZSl7YyhhLGsuc2libGluZyk7ZD1lKGssZi50eXBlPT09aWM/Zi5wcm9wcy5jaGlsZHJlbjpmLnByb3BzLGgpO2QucmVmPXVnKGEsayxmKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGspO2JyZWFrfWVsc2UgYihhLGspO2s9ay5zaWJsaW5nfWYudHlwZT09PWljPyhkPUJmKGYucHJvcHMuY2hpbGRyZW4sXG5hLm1vZGUsaCxmLmtleSksZC5yZXR1cm49YSxhPWQpOihoPUFmKGYsYS5tb2RlLGgpLGgucmVmPXVnKGEsZCxmKSxoLnJldHVybj1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSBoYzphOntmb3Ioaz1mLmtleTtudWxsIT09ZDspe2lmKGQua2V5PT09aylpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10saCk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPURmKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpfWlmKFwic3RyaW5nXCI9PT10eXBlb2YgZnx8XCJudW1iZXJcIj09PXR5cGVvZiBmKXJldHVybiBmPVwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmLGgpLGQucmV0dXJuPVxuYSxhPWQpOihjKGEsZCksZD1DZihmLGEubW9kZSxoKSxkLnJldHVybj1hLGE9ZCksZyhhKTtpZih0ZyhmKSlyZXR1cm4gSmQoYSxkLGYsaCk7aWYodGMoZikpcmV0dXJuIEUoYSxkLGYsaCk7biYmdmcoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAyOmNhc2UgMTpoPWEudHlwZSxBKFwiMTUyXCIsaC5kaXNwbGF5TmFtZXx8aC5uYW1lfHxcIkNvbXBvbmVudFwiKX1yZXR1cm4gYyhhLGQpfX12YXIgeGc9d2coITApLHlnPXdnKCExKSx6Zz1udWxsLEFnPW51bGwsQmc9ITE7ZnVuY3Rpb24gQ2coYSxiKXt2YXIgYz1uZXcgeWYoNSxudWxsLG51bGwsMCk7Yy50eXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtjLmVmZmVjdFRhZz04O251bGwhPT1hLmxhc3RFZmZlY3Q/KGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsYS5sYXN0RWZmZWN0PWMpOmEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PWN9XG5mdW5jdGlvbiBEZyhhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnZhciBjPWEudHlwZTtiPTEhPT1iLm5vZGVUeXBlfHxjLnRvTG93ZXJDYXNlKCkhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDpiO3JldHVybiBudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBFZyhhKXtpZihCZyl7dmFyIGI9QWc7aWYoYil7dmFyIGM9YjtpZighRGcoYSxiKSl7Yj1oZihjKTtpZighYnx8IURnKGEsYikpe2EuZWZmZWN0VGFnfD0yO0JnPSExO3pnPWE7cmV0dXJufUNnKHpnLGMpfXpnPWE7QWc9amYoYil9ZWxzZSBhLmVmZmVjdFRhZ3w9MixCZz0hMSx6Zz1hfX1cbmZ1bmN0aW9uIEZnKGEpe2ZvcihhPWEucmV0dXJuO251bGwhPT1hJiY1IT09YS50YWcmJjMhPT1hLnRhZzspYT1hLnJldHVybjt6Zz1hfWZ1bmN0aW9uIEdnKGEpe2lmKGEhPT16ZylyZXR1cm4hMTtpZighQmcpcmV0dXJuIEZnKGEpLEJnPSEwLCExO3ZhciBiPWEudHlwZTtpZig1IT09YS50YWd8fFwiaGVhZFwiIT09YiYmXCJib2R5XCIhPT1iJiYhZGYoYixhLm1lbW9pemVkUHJvcHMpKWZvcihiPUFnO2I7KUNnKGEsYiksYj1oZihiKTtGZyhhKTtBZz16Zz9oZihhLnN0YXRlTm9kZSk6bnVsbDtyZXR1cm4hMH1mdW5jdGlvbiBIZygpe0FnPXpnPW51bGw7Qmc9ITF9ZnVuY3Rpb24gUShhLGIsYyl7SWcoYSxiLGMsYi5leHBpcmF0aW9uVGltZSl9ZnVuY3Rpb24gSWcoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT95ZyhiLG51bGwsYyxkKTp4ZyhiLGEuY2hpbGQsYyxkKX1cbmZ1bmN0aW9uIEpnKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZWZmZWN0VGFnfD0xMjh9ZnVuY3Rpb24gS2coYSxiLGMsZCxlKXtKZyhhLGIpO3ZhciBmPTAhPT0oYi5lZmZlY3RUYWcmNjQpO2lmKCFjJiYhZilyZXR1cm4gZCYmeGYoYiwhMSksUihhLGIpO2M9Yi5zdGF0ZU5vZGU7ZWMuY3VycmVudD1iO3ZhciBnPWY/bnVsbDpjLnJlbmRlcigpO2IuZWZmZWN0VGFnfD0xO2YmJihJZyhhLGIsbnVsbCxlKSxiLmNoaWxkPW51bGwpO0lnKGEsYixnLGUpO2IubWVtb2l6ZWRTdGF0ZT1jLnN0YXRlO2IubWVtb2l6ZWRQcm9wcz1jLnByb3BzO2QmJnhmKGIsITApO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gTGcoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD91ZihhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZ1ZihhLGIuY29udGV4dCwhMSk7aWcoYSxiLmNvbnRhaW5lckluZm8pfVxuZnVuY3Rpb24gTWcoYSxiLGMsZCl7dmFyIGU9YS5jaGlsZDtudWxsIT09ZSYmKGUucmV0dXJuPWEpO2Zvcig7bnVsbCE9PWU7KXtzd2l0Y2goZS50YWcpe2Nhc2UgMTI6dmFyIGY9ZS5zdGF0ZU5vZGV8MDtpZihlLnR5cGU9PT1iJiYwIT09KGYmYykpe2ZvcihmPWU7bnVsbCE9PWY7KXt2YXIgZz1mLmFsdGVybmF0ZTtpZigwPT09Zi5leHBpcmF0aW9uVGltZXx8Zi5leHBpcmF0aW9uVGltZT5kKWYuZXhwaXJhdGlvblRpbWU9ZCxudWxsIT09ZyYmKDA9PT1nLmV4cGlyYXRpb25UaW1lfHxnLmV4cGlyYXRpb25UaW1lPmQpJiYoZy5leHBpcmF0aW9uVGltZT1kKTtlbHNlIGlmKG51bGwhPT1nJiYoMD09PWcuZXhwaXJhdGlvblRpbWV8fGcuZXhwaXJhdGlvblRpbWU+ZCkpZy5leHBpcmF0aW9uVGltZT1kO2Vsc2UgYnJlYWs7Zj1mLnJldHVybn1mPW51bGx9ZWxzZSBmPWUuY2hpbGQ7YnJlYWs7Y2FzZSAxMzpmPWUudHlwZT09PWEudHlwZT9udWxsOmUuY2hpbGQ7YnJlYWs7ZGVmYXVsdDpmPVxuZS5jaGlsZH1pZihudWxsIT09ZilmLnJldHVybj1lO2Vsc2UgZm9yKGY9ZTtudWxsIT09Zjspe2lmKGY9PT1hKXtmPW51bGw7YnJlYWt9ZT1mLnNpYmxpbmc7aWYobnVsbCE9PWUpe2UucmV0dXJuPWYucmV0dXJuO2Y9ZTticmVha31mPWYucmV0dXJufWU9Zn19XG5mdW5jdGlvbiBRZyhhLGIsYyl7dmFyIGQ9Yi50eXBlLl9jb250ZXh0LGU9Yi5wZW5kaW5nUHJvcHMsZj1iLm1lbW9pemVkUHJvcHMsZz0hMDtpZihPLmN1cnJlbnQpZz0hMTtlbHNlIGlmKGY9PT1lKXJldHVybiBiLnN0YXRlTm9kZT0wLGFnKGIpLFIoYSxiKTt2YXIgaD1lLnZhbHVlO2IubWVtb2l6ZWRQcm9wcz1lO2lmKG51bGw9PT1mKWg9MTA3Mzc0MTgyMztlbHNlIGlmKGYudmFsdWU9PT1lLnZhbHVlKXtpZihmLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmZylyZXR1cm4gYi5zdGF0ZU5vZGU9MCxhZyhiKSxSKGEsYik7aD0wfWVsc2V7dmFyIGs9Zi52YWx1ZTtpZihrPT09aCYmKDAhPT1rfHwxL2s9PT0xL2gpfHxrIT09ayYmaCE9PWgpe2lmKGYuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiZnKXJldHVybiBiLnN0YXRlTm9kZT0wLGFnKGIpLFIoYSxiKTtoPTB9ZWxzZSBpZihoPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhrLFxuaCk6MTA3Mzc0MTgyMyxofD0wLDA9PT1oKXtpZihmLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmZylyZXR1cm4gYi5zdGF0ZU5vZGU9MCxhZyhiKSxSKGEsYil9ZWxzZSBNZyhiLGQsaCxjKX1iLnN0YXRlTm9kZT1oO2FnKGIpO1EoYSxiLGUuY2hpbGRyZW4pO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIFIoYSxiKXtudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQ/QShcIjE1M1wiKTp2b2lkIDA7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDt2YXIgYz16ZihhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz16ZihhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBSZyhhLGIsYyl7aWYoMD09PWIuZXhwaXJhdGlvblRpbWV8fGIuZXhwaXJhdGlvblRpbWU+Yyl7c3dpdGNoKGIudGFnKXtjYXNlIDM6TGcoYik7YnJlYWs7Y2FzZSAyOndmKGIpO2JyZWFrO2Nhc2UgNDppZyhiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2JyZWFrO2Nhc2UgMTM6YWcoYil9cmV0dXJuIG51bGx9c3dpdGNoKGIudGFnKXtjYXNlIDA6bnVsbCE9PWE/QShcIjE1NVwiKTp2b2lkIDA7dmFyIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZj1wZihiKTtmPXJmKGIsZik7ZD1kKGUsZik7Yi5lZmZlY3RUYWd8PTE7XCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQucmVuZGVyJiZ2b2lkIDA9PT1kLiQkdHlwZW9mPyhmPWIudHlwZSxiLnRhZz0yLGIubWVtb2l6ZWRTdGF0ZT1udWxsIT09ZC5zdGF0ZSYmdm9pZCAwIT09ZC5zdGF0ZT9kLnN0YXRlOm51bGwsZj1mLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBmJiZsZyhiLGYsZSksZT13ZihiKSxkLnVwZGF0ZXI9cGcsYi5zdGF0ZU5vZGU9ZCxkLl9yZWFjdEludGVybmFsRmliZXI9YixzZyhiLGMpLGE9S2coYSxiLCEwLGUsYykpOihiLnRhZz0xLFEoYSxiLGQpLGIubWVtb2l6ZWRQcm9wcz1lLGE9Yi5jaGlsZCk7cmV0dXJuIGE7Y2FzZSAxOnJldHVybiBlPWIudHlwZSxjPWIucGVuZGluZ1Byb3BzLE8uY3VycmVudHx8Yi5tZW1vaXplZFByb3BzIT09Yz8oZD1wZihiKSxkPXJmKGIsZCksZT1lKGMsZCksYi5lZmZlY3RUYWd8PTEsUShhLGIsZSksYi5tZW1vaXplZFByb3BzPWMsYT1iLmNoaWxkKTphPVIoYSxiKSxhO2Nhc2UgMjplPXdmKGIpO2lmKG51bGw9PT1hKWlmKG51bGw9PT1iLnN0YXRlTm9kZSl7dmFyIGc9Yi5wZW5kaW5nUHJvcHMsaD1iLnR5cGU7ZD1wZihiKTt2YXIgaz0yPT09Yi50YWcmJm51bGwhPWIudHlwZS5jb250ZXh0VHlwZXM7Zj1rP3JmKGIsZCk6aGE7Zz1uZXcgaChnLGYpO2IubWVtb2l6ZWRTdGF0ZT1udWxsIT09XG5nLnN0YXRlJiZ2b2lkIDAhPT1nLnN0YXRlP2cuc3RhdGU6bnVsbDtnLnVwZGF0ZXI9cGc7Yi5zdGF0ZU5vZGU9ZztnLl9yZWFjdEludGVybmFsRmliZXI9YjtrJiYoaz1iLnN0YXRlTm9kZSxrLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZCxrLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3NnKGIsYyk7ZD0hMH1lbHNle2g9Yi50eXBlO2Q9Yi5zdGF0ZU5vZGU7az1iLm1lbW9pemVkUHJvcHM7Zj1iLnBlbmRpbmdQcm9wcztkLnByb3BzPWs7dmFyIG49ZC5jb250ZXh0O2c9cGYoYik7Zz1yZihiLGcpO3ZhciByPWguZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOyhoPVwiZnVuY3Rpb25cIj09PXR5cGVvZiByfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHxcbihrIT09Znx8biE9PWcpJiZyZyhiLGQsZixnKTtMZj0hMTt2YXIgdz1iLm1lbW9pemVkU3RhdGU7bj1kLnN0YXRlPXc7dmFyIFA9Yi51cGRhdGVRdWV1ZTtudWxsIT09UCYmKFVmKGIsUCxmLGQsYyksbj1iLm1lbW9pemVkU3RhdGUpO2shPT1mfHx3IT09bnx8Ty5jdXJyZW50fHxMZj8oXCJmdW5jdGlvblwiPT09dHlwZW9mIHImJihsZyhiLHIsZiksbj1iLm1lbW9pemVkU3RhdGUpLChrPUxmfHxxZyhiLGssZix3LG4sZykpPyhofHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnRXaWxsTW91bnQmJmQuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZC5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZE1vdW50JiZcbihiLmVmZmVjdFRhZ3w9NCkpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxiLm1lbW9pemVkUHJvcHM9ZixiLm1lbW9pemVkU3RhdGU9biksZC5wcm9wcz1mLGQuc3RhdGU9bixkLmNvbnRleHQ9ZyxkPWspOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxkPSExKX1lbHNlIGg9Yi50eXBlLGQ9Yi5zdGF0ZU5vZGUsZj1iLm1lbW9pemVkUHJvcHMsaz1iLnBlbmRpbmdQcm9wcyxkLnByb3BzPWYsbj1kLmNvbnRleHQsZz1wZihiKSxnPXJmKGIsZykscj1oLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcywoaD1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8XG4oZiE9PWt8fG4hPT1nKSYmcmcoYixkLGssZyksTGY9ITEsbj1iLm1lbW9pemVkU3RhdGUsdz1kLnN0YXRlPW4sUD1iLnVwZGF0ZVF1ZXVlLG51bGwhPT1QJiYoVWYoYixQLGssZCxjKSx3PWIubWVtb2l6ZWRTdGF0ZSksZiE9PWt8fG4hPT13fHxPLmN1cnJlbnR8fExmPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgciYmKGxnKGIscixrKSx3PWIubWVtb2l6ZWRTdGF0ZSksKHI9TGZ8fHFnKGIsZixrLG4sdyxnKSk/KGh8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50V2lsbFVwZGF0ZSYmZC5jb21wb25lbnRXaWxsVXBkYXRlKGssdyxnKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZC5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShrLHcsZykpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZFVwZGF0ZSYmXG4oYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTI1NikpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5jb21wb25lbnREaWRVcGRhdGV8fGY9PT1hLm1lbW9pemVkUHJvcHMmJm49PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGY9PT1hLm1lbW9pemVkUHJvcHMmJm49PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxiLm1lbW9pemVkUHJvcHM9ayxiLm1lbW9pemVkU3RhdGU9dyksZC5wcm9wcz1rLGQuc3RhdGU9dyxkLmNvbnRleHQ9ZyxkPXIpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5jb21wb25lbnREaWRVcGRhdGV8fGY9PT1hLm1lbW9pemVkUHJvcHMmJm49PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fFxuZj09PWEubWVtb2l6ZWRQcm9wcyYmbj09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGQ9ITEpO3JldHVybiBLZyhhLGIsZCxlLGMpO2Nhc2UgMzpMZyhiKTtlPWIudXBkYXRlUXVldWU7aWYobnVsbCE9PWUpaWYoZD1iLm1lbW9pemVkU3RhdGUsZD1udWxsIT09ZD9kLmVsZW1lbnQ6bnVsbCxVZihiLGUsYi5wZW5kaW5nUHJvcHMsbnVsbCxjKSxlPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50LGU9PT1kKUhnKCksYT1SKGEsYik7ZWxzZXtkPWIuc3RhdGVOb2RlO2lmKGQ9KG51bGw9PT1hfHxudWxsPT09YS5jaGlsZCkmJmQuaHlkcmF0ZSlBZz1qZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSx6Zz1iLGQ9Qmc9ITA7ZD8oYi5lZmZlY3RUYWd8PTIsYi5jaGlsZD15ZyhiLG51bGwsZSxjKSk6KEhnKCksUShhLGIsZSkpO2E9Yi5jaGlsZH1lbHNlIEhnKCksYT1SKGEsYik7cmV0dXJuIGE7Y2FzZSA1OmE6e2dnKGZnLmN1cnJlbnQpO2U9Z2coZGcuY3VycmVudCk7ZD1IZShlLFxuYi50eXBlKTtlIT09ZCYmKE4oZWcsYixiKSxOKGRnLGQsYikpO251bGw9PT1hJiZFZyhiKTtlPWIudHlwZTtrPWIubWVtb2l6ZWRQcm9wcztkPWIucGVuZGluZ1Byb3BzO2Y9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOm51bGw7aWYoIU8uY3VycmVudCYmaz09PWQpe2lmKGs9Yi5tb2RlJjEmJiEhZC5oaWRkZW4pYi5leHBpcmF0aW9uVGltZT0xMDczNzQxODIzO2lmKCFrfHwxMDczNzQxODIzIT09Yyl7YT1SKGEsYik7YnJlYWsgYX19az1kLmNoaWxkcmVuO2RmKGUsZCk/az1udWxsOmYmJmRmKGUsZikmJihiLmVmZmVjdFRhZ3w9MTYpO0pnKGEsYik7MTA3Mzc0MTgyMyE9PWMmJmIubW9kZSYxJiZkLmhpZGRlbj8oYi5leHBpcmF0aW9uVGltZT0xMDczNzQxODIzLGIubWVtb2l6ZWRQcm9wcz1kLGE9bnVsbCk6KFEoYSxiLGspLGIubWVtb2l6ZWRQcm9wcz1kLGE9Yi5jaGlsZCl9cmV0dXJuIGE7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmRWcoYiksYi5tZW1vaXplZFByb3BzPWIucGVuZGluZ1Byb3BzLFxubnVsbDtjYXNlIDE2OnJldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gaWcoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxlPWIucGVuZGluZ1Byb3BzLE8uY3VycmVudHx8Yi5tZW1vaXplZFByb3BzIT09ZT8obnVsbD09PWE/Yi5jaGlsZD14ZyhiLG51bGwsZSxjKTpRKGEsYixlKSxiLm1lbW9pemVkUHJvcHM9ZSxhPWIuY2hpbGQpOmE9UihhLGIpLGE7Y2FzZSAxNDpyZXR1cm4gZT1iLnR5cGUucmVuZGVyLGM9Yi5wZW5kaW5nUHJvcHMsZD1iLnJlZixPLmN1cnJlbnR8fGIubWVtb2l6ZWRQcm9wcyE9PWN8fGQhPT0obnVsbCE9PWE/YS5yZWY6bnVsbCk/KGU9ZShjLGQpLFEoYSxiLGUpLGIubWVtb2l6ZWRQcm9wcz1jLGE9Yi5jaGlsZCk6YT1SKGEsYiksYTtjYXNlIDEwOnJldHVybiBjPWIucGVuZGluZ1Byb3BzLE8uY3VycmVudHx8Yi5tZW1vaXplZFByb3BzIT09Yz8oUShhLGIsYyksYi5tZW1vaXplZFByb3BzPWMsYT1iLmNoaWxkKTphPVIoYSxiKSxhO2Nhc2UgMTE6cmV0dXJuIGM9XG5iLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixPLmN1cnJlbnR8fG51bGwhPT1jJiZiLm1lbW9pemVkUHJvcHMhPT1jPyhRKGEsYixjKSxiLm1lbW9pemVkUHJvcHM9YyxhPWIuY2hpbGQpOmE9UihhLGIpLGE7Y2FzZSAxNTpyZXR1cm4gYz1iLnBlbmRpbmdQcm9wcyxiLm1lbW9pemVkUHJvcHM9PT1jP2E9UihhLGIpOihRKGEsYixjLmNoaWxkcmVuKSxiLm1lbW9pemVkUHJvcHM9YyxhPWIuY2hpbGQpLGE7Y2FzZSAxMzpyZXR1cm4gUWcoYSxiLGMpO2Nhc2UgMTI6YTppZihkPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGs9Yi5tZW1vaXplZFByb3BzLGU9ZC5fY3VycmVudFZhbHVlLGc9ZC5fY2hhbmdlZEJpdHMsTy5jdXJyZW50fHwwIT09Z3x8ayE9PWYpe2IubWVtb2l6ZWRQcm9wcz1mO2g9Zi51bnN0YWJsZV9vYnNlcnZlZEJpdHM7aWYodm9pZCAwPT09aHx8bnVsbD09PWgpaD0xMDczNzQxODIzO2Iuc3RhdGVOb2RlPWg7aWYoMCE9PShnJmgpKU1nKGIsZCxnLGMpO2Vsc2UgaWYoaz09PWYpe2E9XG5SKGEsYik7YnJlYWsgYX1jPWYuY2hpbGRyZW47Yz1jKGUpO2IuZWZmZWN0VGFnfD0xO1EoYSxiLGMpO2E9Yi5jaGlsZH1lbHNlIGE9UihhLGIpO3JldHVybiBhO2RlZmF1bHQ6QShcIjE1NlwiKX19ZnVuY3Rpb24gU2coYSl7YS5lZmZlY3RUYWd8PTR9dmFyIFRnPXZvaWQgMCxVZz12b2lkIDAsVmc9dm9pZCAwO1RnPWZ1bmN0aW9uKCl7fTtVZz1mdW5jdGlvbihhLGIsYyl7KGIudXBkYXRlUXVldWU9YykmJlNnKGIpfTtWZz1mdW5jdGlvbihhLGIsYyxkKXtjIT09ZCYmU2coYil9O1xuZnVuY3Rpb24gV2coYSxiKXt2YXIgYz1iLnBlbmRpbmdQcm9wcztzd2l0Y2goYi50YWcpe2Nhc2UgMTpyZXR1cm4gbnVsbDtjYXNlIDI6cmV0dXJuIHNmKGIpLG51bGw7Y2FzZSAzOmpnKGIpO3RmKGIpO3ZhciBkPWIuc3RhdGVOb2RlO2QucGVuZGluZ0NvbnRleHQmJihkLmNvbnRleHQ9ZC5wZW5kaW5nQ29udGV4dCxkLnBlbmRpbmdDb250ZXh0PW51bGwpO2lmKG51bGw9PT1hfHxudWxsPT09YS5jaGlsZClHZyhiKSxiLmVmZmVjdFRhZyY9LTM7VGcoYik7cmV0dXJuIG51bGw7Y2FzZSA1OmtnKGIpO2Q9Z2coZmcuY3VycmVudCk7dmFyIGU9Yi50eXBlO2lmKG51bGwhPT1hJiZudWxsIT1iLnN0YXRlTm9kZSl7dmFyIGY9YS5tZW1vaXplZFByb3BzLGc9Yi5zdGF0ZU5vZGUsaD1nZyhkZy5jdXJyZW50KTtnPVdlKGcsZSxmLGMsZCk7VWcoYSxiLGcsZSxmLGMsZCxoKTthLnJlZiE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCl9ZWxzZXtpZighYylyZXR1cm4gbnVsbD09PWIuc3RhdGVOb2RlP1xuQShcIjE2NlwiKTp2b2lkIDAsbnVsbDthPWdnKGRnLmN1cnJlbnQpO2lmKEdnKGIpKWM9Yi5zdGF0ZU5vZGUsZT1iLnR5cGUsZj1iLm1lbW9pemVkUHJvcHMsY1tDXT1iLGNbTWFdPWYsZD1ZZShjLGUsZixhLGQpLGIudXBkYXRlUXVldWU9ZCxudWxsIT09ZCYmU2coYik7ZWxzZXthPVRlKGUsYyxkLGEpO2FbQ109YjthW01hXT1jO2E6Zm9yKGY9Yi5jaGlsZDtudWxsIT09Zjspe2lmKDU9PT1mLnRhZ3x8Nj09PWYudGFnKWEuYXBwZW5kQ2hpbGQoZi5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWYudGFnJiZudWxsIT09Zi5jaGlsZCl7Zi5jaGlsZC5yZXR1cm49ZjtmPWYuY2hpbGQ7Y29udGludWV9aWYoZj09PWIpYnJlYWs7Zm9yKDtudWxsPT09Zi5zaWJsaW5nOyl7aWYobnVsbD09PWYucmV0dXJufHxmLnJldHVybj09PWIpYnJlYWsgYTtmPWYucmV0dXJufWYuc2libGluZy5yZXR1cm49Zi5yZXR1cm47Zj1mLnNpYmxpbmd9VmUoYSxlLGMsZCk7Y2YoZSxjKSYmU2coYik7Yi5zdGF0ZU5vZGU9XG5hfW51bGwhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpfXJldHVybiBudWxsO2Nhc2UgNjppZihhJiZudWxsIT1iLnN0YXRlTm9kZSlWZyhhLGIsYS5tZW1vaXplZFByb3BzLGMpO2Vsc2V7aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBjKXJldHVybiBudWxsPT09Yi5zdGF0ZU5vZGU/QShcIjE2NlwiKTp2b2lkIDAsbnVsbDtkPWdnKGZnLmN1cnJlbnQpO2dnKGRnLmN1cnJlbnQpO0dnKGIpPyhkPWIuc3RhdGVOb2RlLGM9Yi5tZW1vaXplZFByb3BzLGRbQ109YixaZShkLGMpJiZTZyhiKSk6KGQ9VWUoYyxkKSxkW0NdPWIsYi5zdGF0ZU5vZGU9ZCl9cmV0dXJuIG51bGw7Y2FzZSAxNDpyZXR1cm4gbnVsbDtjYXNlIDE2OnJldHVybiBudWxsO2Nhc2UgMTA6cmV0dXJuIG51bGw7Y2FzZSAxMTpyZXR1cm4gbnVsbDtjYXNlIDE1OnJldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gamcoYiksVGcoYiksbnVsbDtjYXNlIDEzOnJldHVybiBiZyhiKSxudWxsO2Nhc2UgMTI6cmV0dXJuIG51bGw7Y2FzZSAwOkEoXCIxNjdcIik7XG5kZWZhdWx0OkEoXCIxNTZcIil9fWZ1bmN0aW9uIFhnKGEsYil7dmFyIGM9Yi5zb3VyY2U7bnVsbD09PWIuc3RhY2smJm51bGwhPT1jJiZ2YyhjKTtudWxsIT09YyYmdWMoYyk7Yj1iLnZhbHVlO251bGwhPT1hJiYyPT09YS50YWcmJnVjKGEpO3RyeXtiJiZiLnN1cHByZXNzUmVhY3RFcnJvckxvZ2dpbmd8fGNvbnNvbGUuZXJyb3IoYil9Y2F0Y2goZCl7ZCYmZC5zdXBwcmVzc1JlYWN0RXJyb3JMb2dnaW5nfHxjb25zb2xlLmVycm9yKGQpfX1mdW5jdGlvbiBZZyhhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09YilpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYil0cnl7YihudWxsKX1jYXRjaChjKXtaZyhhLGMpfWVsc2UgYi5jdXJyZW50PW51bGx9XG5mdW5jdGlvbiAkZyhhKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgS2YmJktmKGEpO3N3aXRjaChhLnRhZyl7Y2FzZSAyOllnKGEpO3ZhciBiPWEuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxVbm1vdW50KXRyeXtiLnByb3BzPWEubWVtb2l6ZWRQcm9wcyxiLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSxiLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2goYyl7WmcoYSxjKX1icmVhaztjYXNlIDU6WWcoYSk7YnJlYWs7Y2FzZSA0OmFoKGEpfX1mdW5jdGlvbiBiaChhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uIGNoKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKGJoKGIpKXt2YXIgYz1iO2JyZWFrIGF9Yj1iLnJldHVybn1BKFwiMTYwXCIpO2M9dm9pZCAwfXZhciBkPWI9dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSA1OmI9Yy5zdGF0ZU5vZGU7ZD0hMTticmVhaztjYXNlIDM6Yj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7Y2FzZSA0OmI9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6QShcIjE2MVwiKX1jLmVmZmVjdFRhZyYxNiYmKEtlKGIsXCJcIiksYy5lZmZlY3RUYWcmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxiaChjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWc7KXtpZihjLmVmZmVjdFRhZyYyKWNvbnRpbnVlIGI7XG5pZihudWxsPT09Yy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZWZmZWN0VGFnJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWZvcih2YXIgZT1hOzspe2lmKDU9PT1lLnRhZ3x8Nj09PWUudGFnKWlmKGMpaWYoZCl7dmFyIGY9YixnPWUuc3RhdGVOb2RlLGg9Yzs4PT09Zi5ub2RlVHlwZT9mLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGcsaCk6Zi5pbnNlcnRCZWZvcmUoZyxoKX1lbHNlIGIuaW5zZXJ0QmVmb3JlKGUuc3RhdGVOb2RlLGMpO2Vsc2UgZD8oZj1iLGc9ZS5zdGF0ZU5vZGUsOD09PWYubm9kZVR5cGU/Zi5wYXJlbnROb2RlLmluc2VydEJlZm9yZShnLGYpOmYuYXBwZW5kQ2hpbGQoZykpOmIuYXBwZW5kQ2hpbGQoZS5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWUudGFnJiZudWxsIT09ZS5jaGlsZCl7ZS5jaGlsZC5yZXR1cm49ZTtlPWUuY2hpbGQ7Y29udGludWV9aWYoZT09PWEpYnJlYWs7Zm9yKDtudWxsPT09XG5lLnNpYmxpbmc7KXtpZihudWxsPT09ZS5yZXR1cm58fGUucmV0dXJuPT09YSlyZXR1cm47ZT1lLnJldHVybn1lLnNpYmxpbmcucmV0dXJuPWUucmV0dXJuO2U9ZS5zaWJsaW5nfX1cbmZ1bmN0aW9uIGFoKGEpe2Zvcih2YXIgYj1hLGM9ITEsZD12b2lkIDAsZT12b2lkIDA7Oyl7aWYoIWMpe2M9Yi5yZXR1cm47YTpmb3IoOzspe251bGw9PT1jP0EoXCIxNjBcIik6dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSA1OmQ9Yy5zdGF0ZU5vZGU7ZT0hMTticmVhayBhO2Nhc2UgMzpkPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZT0hMDticmVhayBhO2Nhc2UgNDpkPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZT0hMDticmVhayBhfWM9Yy5yZXR1cm59Yz0hMH1pZig1PT09Yi50YWd8fDY9PT1iLnRhZyl7YTpmb3IodmFyIGY9YixnPWY7OylpZigkZyhnKSxudWxsIT09Zy5jaGlsZCYmNCE9PWcudGFnKWcuY2hpbGQucmV0dXJuPWcsZz1nLmNoaWxkO2Vsc2V7aWYoZz09PWYpYnJlYWs7Zm9yKDtudWxsPT09Zy5zaWJsaW5nOyl7aWYobnVsbD09PWcucmV0dXJufHxnLnJldHVybj09PWYpYnJlYWsgYTtnPWcucmV0dXJufWcuc2libGluZy5yZXR1cm49Zy5yZXR1cm47Zz1nLnNpYmxpbmd9ZT9cbihmPWQsZz1iLnN0YXRlTm9kZSw4PT09Zi5ub2RlVHlwZT9mLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZyk6Zi5yZW1vdmVDaGlsZChnKSk6ZC5yZW1vdmVDaGlsZChiLnN0YXRlTm9kZSl9ZWxzZSBpZig0PT09Yi50YWc/ZD1iLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOiRnKGIpLG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm47Yj1iLnJldHVybjs0PT09Yi50YWcmJihjPSExKX1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1cbmZ1bmN0aW9uIGRoKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDI6YnJlYWs7Y2FzZSA1OnZhciBjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe3ZhciBkPWIubWVtb2l6ZWRQcm9wczthPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO3ZhciBlPWIudHlwZSxmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO251bGwhPT1mJiYoY1tNYV09ZCxYZShjLGYsZSxhLGQpKX1icmVhaztjYXNlIDY6bnVsbD09PWIuc3RhdGVOb2RlP0EoXCIxNjJcIik6dm9pZCAwO2Iuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iLm1lbW9pemVkUHJvcHM7YnJlYWs7Y2FzZSAzOmJyZWFrO2Nhc2UgMTU6YnJlYWs7Y2FzZSAxNjpicmVhaztkZWZhdWx0OkEoXCIxNjNcIil9fWZ1bmN0aW9uIGVoKGEsYixjKXtjPU9mKGMpO2MudGFnPTM7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe2ZoKGQpO1hnKGEsYil9O3JldHVybiBjfVxuZnVuY3Rpb24gZ2goYSxiLGMpe2M9T2YoYyk7Yy50YWc9Mzt2YXIgZD1hLnN0YXRlTm9kZTtudWxsIT09ZCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7bnVsbD09PWhoP2hoPW5ldyBTZXQoW3RoaXNdKTpoaC5hZGQodGhpcyk7dmFyIGM9Yi52YWx1ZSxkPWIuc3RhY2s7WGcoYSxiKTt0aGlzLmNvbXBvbmVudERpZENhdGNoKGMse2NvbXBvbmVudFN0YWNrOm51bGwhPT1kP2Q6XCJcIn0pfSk7cmV0dXJuIGN9XG5mdW5jdGlvbiBpaChhLGIsYyxkLGUsZil7Yy5lZmZlY3RUYWd8PTUxMjtjLmZpcnN0RWZmZWN0PWMubGFzdEVmZmVjdD1udWxsO2Q9WGYoZCxjKTthPWI7ZG97c3dpdGNoKGEudGFnKXtjYXNlIDM6YS5lZmZlY3RUYWd8PTEwMjQ7ZD1laChhLGQsZik7UmYoYSxkLGYpO3JldHVybjtjYXNlIDI6aWYoYj1kLGM9YS5zdGF0ZU5vZGUsMD09PShhLmVmZmVjdFRhZyY2NCkmJm51bGwhPT1jJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1oaHx8IWhoLmhhcyhjKSkpe2EuZWZmZWN0VGFnfD0xMDI0O2Q9Z2goYSxiLGYpO1JmKGEsZCxmKTtyZXR1cm59fWE9YS5yZXR1cm59d2hpbGUobnVsbCE9PWEpfVxuZnVuY3Rpb24gamgoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDI6c2YoYSk7dmFyIGI9YS5lZmZlY3RUYWc7cmV0dXJuIGImMTAyND8oYS5lZmZlY3RUYWc9YiYtMTAyNXw2NCxhKTpudWxsO2Nhc2UgMzpyZXR1cm4gamcoYSksdGYoYSksYj1hLmVmZmVjdFRhZyxiJjEwMjQ/KGEuZWZmZWN0VGFnPWImLTEwMjV8NjQsYSk6bnVsbDtjYXNlIDU6cmV0dXJuIGtnKGEpLG51bGw7Y2FzZSAxNjpyZXR1cm4gYj1hLmVmZmVjdFRhZyxiJjEwMjQ/KGEuZWZmZWN0VGFnPWImLTEwMjV8NjQsYSk6bnVsbDtjYXNlIDQ6cmV0dXJuIGpnKGEpLG51bGw7Y2FzZSAxMzpyZXR1cm4gYmcoYSksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX12YXIga2g9ZWYoKSxsaD0yLG1oPWtoLG5oPTAsb2g9MCxwaD0hMSxTPW51bGwscWg9bnVsbCxUPTAscmg9LTEsc2g9ITEsVT1udWxsLHRoPSExLHVoPSExLGhoPW51bGw7XG5mdW5jdGlvbiB2aCgpe2lmKG51bGwhPT1TKWZvcih2YXIgYT1TLnJldHVybjtudWxsIT09YTspe3ZhciBiPWE7c3dpdGNoKGIudGFnKXtjYXNlIDI6c2YoYik7YnJlYWs7Y2FzZSAzOmpnKGIpO3RmKGIpO2JyZWFrO2Nhc2UgNTprZyhiKTticmVhaztjYXNlIDQ6amcoYik7YnJlYWs7Y2FzZSAxMzpiZyhiKX1hPWEucmV0dXJufXFoPW51bGw7VD0wO3JoPS0xO3NoPSExO1M9bnVsbDt1aD0hMX1cbmZ1bmN0aW9uIHdoKGEpe2Zvcig7Oyl7dmFyIGI9YS5hbHRlcm5hdGUsYz1hLnJldHVybixkPWEuc2libGluZztpZigwPT09KGEuZWZmZWN0VGFnJjUxMikpe2I9V2coYixhLFQpO3ZhciBlPWE7aWYoMTA3Mzc0MTgyMz09PVR8fDEwNzM3NDE4MjMhPT1lLmV4cGlyYXRpb25UaW1lKXt2YXIgZj0wO3N3aXRjaChlLnRhZyl7Y2FzZSAzOmNhc2UgMjp2YXIgZz1lLnVwZGF0ZVF1ZXVlO251bGwhPT1nJiYoZj1nLmV4cGlyYXRpb25UaW1lKX1mb3IoZz1lLmNoaWxkO251bGwhPT1nOykwIT09Zy5leHBpcmF0aW9uVGltZSYmKDA9PT1mfHxmPmcuZXhwaXJhdGlvblRpbWUpJiYoZj1nLmV4cGlyYXRpb25UaW1lKSxnPWcuc2libGluZztlLmV4cGlyYXRpb25UaW1lPWZ9aWYobnVsbCE9PWIpcmV0dXJuIGI7bnVsbCE9PWMmJjA9PT0oYy5lZmZlY3RUYWcmNTEyKSYmKG51bGw9PT1jLmZpcnN0RWZmZWN0JiYoYy5maXJzdEVmZmVjdD1hLmZpcnN0RWZmZWN0KSxudWxsIT09YS5sYXN0RWZmZWN0JiZcbihudWxsIT09Yy5sYXN0RWZmZWN0JiYoYy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YS5maXJzdEVmZmVjdCksYy5sYXN0RWZmZWN0PWEubGFzdEVmZmVjdCksMTxhLmVmZmVjdFRhZyYmKG51bGwhPT1jLmxhc3RFZmZlY3Q/Yy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YTpjLmZpcnN0RWZmZWN0PWEsYy5sYXN0RWZmZWN0PWEpKTtpZihudWxsIT09ZClyZXR1cm4gZDtpZihudWxsIT09YylhPWM7ZWxzZXt1aD0hMDticmVha319ZWxzZXthPWpoKGEsc2gsVCk7aWYobnVsbCE9PWEpcmV0dXJuIGEuZWZmZWN0VGFnJj01MTEsYTtudWxsIT09YyYmKGMuZmlyc3RFZmZlY3Q9Yy5sYXN0RWZmZWN0PW51bGwsYy5lZmZlY3RUYWd8PTUxMik7aWYobnVsbCE9PWQpcmV0dXJuIGQ7aWYobnVsbCE9PWMpYT1jO2Vsc2UgYnJlYWt9fXJldHVybiBudWxsfVxuZnVuY3Rpb24geGgoYSl7dmFyIGI9UmcoYS5hbHRlcm5hdGUsYSxUKTtudWxsPT09YiYmKGI9d2goYSkpO2VjLmN1cnJlbnQ9bnVsbDtyZXR1cm4gYn1cbmZ1bmN0aW9uIHloKGEsYixjKXtwaD9BKFwiMjQzXCIpOnZvaWQgMDtwaD0hMDtpZihiIT09VHx8YSE9PXFofHxudWxsPT09Uyl2aCgpLHFoPWEsVD1iLHJoPS0xLFM9emYocWguY3VycmVudCxudWxsLFQpLGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPTA7dmFyIGQ9ITE7c2g9IWN8fFQ8PWxoO2Rve3RyeXtpZihjKWZvcig7bnVsbCE9PVMmJiF6aCgpOylTPXhoKFMpO2Vsc2UgZm9yKDtudWxsIT09UzspUz14aChTKX1jYXRjaChmKXtpZihudWxsPT09UylkPSEwLGZoKGYpO2Vsc2V7bnVsbD09PVM/QShcIjI3MVwiKTp2b2lkIDA7Yz1TO3ZhciBlPWMucmV0dXJuO2lmKG51bGw9PT1lKXtkPSEwO2ZoKGYpO2JyZWFrfWloKGEsZSxjLGYsc2gsVCxtaCk7Uz13aChjKX19YnJlYWt9d2hpbGUoMSk7cGg9ITE7aWYoZClyZXR1cm4gbnVsbDtpZihudWxsPT09Uyl7aWYodWgpcmV0dXJuIGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWIsYS5jdXJyZW50LmFsdGVybmF0ZTtzaD9BKFwiMjYyXCIpOlxudm9pZCAwOzA8PXJoJiZzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dmFyIGI9YS5jdXJyZW50LmV4cGlyYXRpb25UaW1lOzAhPT1iJiYoMD09PWEucmVtYWluaW5nRXhwaXJhdGlvblRpbWV8fGEucmVtYWluaW5nRXhwaXJhdGlvblRpbWU8YikmJkFoKGEsYil9LHJoKTtCaChhLmN1cnJlbnQuZXhwaXJhdGlvblRpbWUpfXJldHVybiBudWxsfVxuZnVuY3Rpb24gWmcoYSxiKXt2YXIgYzthOntwaCYmIXRoP0EoXCIyNjNcIik6dm9pZCAwO2ZvcihjPWEucmV0dXJuO251bGwhPT1jOyl7c3dpdGNoKGMudGFnKXtjYXNlIDI6dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tQ2F0Y2h8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PWhofHwhaGguaGFzKGQpKSl7YT1YZihiLGEpO2E9Z2goYyxhLDEpO1FmKGMsYSwxKTtvZyhjLDEpO2M9dm9pZCAwO2JyZWFrIGF9YnJlYWs7Y2FzZSAzOmE9WGYoYixhKTthPWVoKGMsYSwxKTtRZihjLGEsMSk7b2coYywxKTtjPXZvaWQgMDticmVhayBhfWM9Yy5yZXR1cm59Mz09PWEudGFnJiYoYz1YZihiLGEpLGM9ZWgoYSxjLDEpLFFmKGEsYywxKSxvZyhhLDEpKTtjPXZvaWQgMH1yZXR1cm4gY31cbmZ1bmN0aW9uIENoKCl7dmFyIGE9MisyNSooKChtZygpLTIrNTAwKS8yNXwwKSsxKTthPD1uaCYmKGE9bmgrMSk7cmV0dXJuIG5oPWF9ZnVuY3Rpb24gbmcoYSxiKXthPTAhPT1vaD9vaDpwaD90aD8xOlQ6Yi5tb2RlJjE/RGg/MisxMCooKChhLTIrMTUpLzEwfDApKzEpOjIrMjUqKCgoYS0yKzUwMCkvMjV8MCkrMSk6MTtEaCYmKDA9PT1FaHx8YT5FaCkmJihFaD1hKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIG9nKGEsYil7Zm9yKDtudWxsIT09YTspe2lmKDA9PT1hLmV4cGlyYXRpb25UaW1lfHxhLmV4cGlyYXRpb25UaW1lPmIpYS5leHBpcmF0aW9uVGltZT1iO251bGwhPT1hLmFsdGVybmF0ZSYmKDA9PT1hLmFsdGVybmF0ZS5leHBpcmF0aW9uVGltZXx8YS5hbHRlcm5hdGUuZXhwaXJhdGlvblRpbWU+YikmJihhLmFsdGVybmF0ZS5leHBpcmF0aW9uVGltZT1iKTtpZihudWxsPT09YS5yZXR1cm4paWYoMz09PWEudGFnKXt2YXIgYz1hLnN0YXRlTm9kZTshcGgmJjAhPT1UJiZiPFQmJnZoKCk7dmFyIGQ9Yy5jdXJyZW50LmV4cGlyYXRpb25UaW1lO3BoJiYhdGgmJnFoPT09Y3x8QWgoYyxkKTtGaD5HaCYmQShcIjE4NVwiKX1lbHNlIGJyZWFrO2E9YS5yZXR1cm59fWZ1bmN0aW9uIG1nKCl7bWg9ZWYoKS1raDtyZXR1cm4gbGg9KG1oLzEwfDApKzJ9XG5mdW5jdGlvbiBIaChhKXt2YXIgYj1vaDtvaD0yKzI1KigoKG1nKCktMis1MDApLzI1fDApKzEpO3RyeXtyZXR1cm4gYSgpfWZpbmFsbHl7b2g9Yn19ZnVuY3Rpb24gSWgoYSxiLGMsZCxlKXt2YXIgZj1vaDtvaD0xO3RyeXtyZXR1cm4gYShiLGMsZCxlKX1maW5hbGx5e29oPWZ9fXZhciBKaD1udWxsLFY9bnVsbCxLaD0wLExoPXZvaWQgMCxXPSExLFg9bnVsbCxZPTAsRWg9MCxNaD0hMSxOaD0hMSxPaD1udWxsLFBoPW51bGwsWj0hMSxRaD0hMSxEaD0hMSxSaD1udWxsLEdoPTFFMyxGaD0wLFNoPTE7ZnVuY3Rpb24gVGgoYSl7aWYoMCE9PUtoKXtpZihhPktoKXJldHVybjtudWxsIT09TGgmJmdmKExoKX12YXIgYj1lZigpLWtoO0toPWE7TGg9ZmYoVWgse3RpbWVvdXQ6MTAqKGEtMiktYn0pfVxuZnVuY3Rpb24gQWgoYSxiKXtpZihudWxsPT09YS5uZXh0U2NoZWR1bGVkUm9vdClhLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPWIsbnVsbD09PVY/KEpoPVY9YSxhLm5leHRTY2hlZHVsZWRSb290PWEpOihWPVYubmV4dFNjaGVkdWxlZFJvb3Q9YSxWLm5leHRTY2hlZHVsZWRSb290PUpoKTtlbHNle3ZhciBjPWEucmVtYWluaW5nRXhwaXJhdGlvblRpbWU7aWYoMD09PWN8fGI8YylhLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPWJ9V3x8KFo/UWgmJihYPWEsWT0xLFZoKGEsMSwhMSkpOjE9PT1iP1doKCk6VGgoYikpfVxuZnVuY3Rpb24gWGgoKXt2YXIgYT0wLGI9bnVsbDtpZihudWxsIT09Vilmb3IodmFyIGM9VixkPUpoO251bGwhPT1kOyl7dmFyIGU9ZC5yZW1haW5pbmdFeHBpcmF0aW9uVGltZTtpZigwPT09ZSl7bnVsbD09PWN8fG51bGw9PT1WP0EoXCIyNDRcIik6dm9pZCAwO2lmKGQ9PT1kLm5leHRTY2hlZHVsZWRSb290KXtKaD1WPWQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDticmVha31lbHNlIGlmKGQ9PT1KaClKaD1lPWQubmV4dFNjaGVkdWxlZFJvb3QsVi5uZXh0U2NoZWR1bGVkUm9vdD1lLGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtlbHNlIGlmKGQ9PT1WKXtWPWM7Vi5uZXh0U2NoZWR1bGVkUm9vdD1KaDtkLm5leHRTY2hlZHVsZWRSb290PW51bGw7YnJlYWt9ZWxzZSBjLm5leHRTY2hlZHVsZWRSb290PWQubmV4dFNjaGVkdWxlZFJvb3QsZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2Q9Yy5uZXh0U2NoZWR1bGVkUm9vdH1lbHNle2lmKDA9PT1hfHxlPGEpYT1lLGI9ZDtpZihkPT09VilicmVhaztcbmM9ZDtkPWQubmV4dFNjaGVkdWxlZFJvb3R9fWM9WDtudWxsIT09YyYmYz09PWImJjE9PT1hP0ZoKys6Rmg9MDtYPWI7WT1hfWZ1bmN0aW9uIFVoKGEpe1loKDAsITAsYSl9ZnVuY3Rpb24gV2goKXtZaCgxLCExLG51bGwpfWZ1bmN0aW9uIFloKGEsYixjKXtQaD1jO1hoKCk7aWYoYilmb3IoO251bGwhPT1YJiYwIT09WSYmKDA9PT1hfHxhPj1ZKSYmKCFNaHx8bWcoKT49WSk7KW1nKCksVmgoWCxZLCFNaCksWGgoKTtlbHNlIGZvcig7bnVsbCE9PVgmJjAhPT1ZJiYoMD09PWF8fGE+PVkpOylWaChYLFksITEpLFhoKCk7bnVsbCE9PVBoJiYoS2g9MCxMaD1udWxsKTswIT09WSYmVGgoWSk7UGg9bnVsbDtNaD0hMTtaaCgpfWZ1bmN0aW9uICRoKGEsYil7Vz9BKFwiMjUzXCIpOnZvaWQgMDtYPWE7WT1iO1ZoKGEsYiwhMSk7V2goKTtaaCgpfVxuZnVuY3Rpb24gWmgoKXtGaD0wO2lmKG51bGwhPT1SaCl7dmFyIGE9Umg7Umg9bnVsbDtmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGM9YVtiXTt0cnl7Yy5fb25Db21wbGV0ZSgpfWNhdGNoKGQpe05ofHwoTmg9ITAsT2g9ZCl9fX1pZihOaCl0aHJvdyBhPU9oLE9oPW51bGwsTmg9ITEsYTt9ZnVuY3Rpb24gVmgoYSxiLGMpe1c/QShcIjI0NVwiKTp2b2lkIDA7Vz0hMDtjPyhjPWEuZmluaXNoZWRXb3JrLG51bGwhPT1jP2FpKGEsYyxiKTooYz15aChhLGIsITApLG51bGwhPT1jJiYoemgoKT9hLmZpbmlzaGVkV29yaz1jOmFpKGEsYyxiKSkpKTooYz1hLmZpbmlzaGVkV29yayxudWxsIT09Yz9haShhLGMsYik6KGM9eWgoYSxiLCExKSxudWxsIT09YyYmYWkoYSxjLGIpKSk7Vz0hMX1cbmZ1bmN0aW9uIGFpKGEsYixjKXt2YXIgZD1hLmZpcnN0QmF0Y2g7aWYobnVsbCE9PWQmJmQuX2V4cGlyYXRpb25UaW1lPD1jJiYobnVsbD09PVJoP1JoPVtkXTpSaC5wdXNoKGQpLGQuX2RlZmVyKSl7YS5maW5pc2hlZFdvcms9YjthLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPTA7cmV0dXJufWEuZmluaXNoZWRXb3JrPW51bGw7dGg9cGg9ITA7Yz1iLnN0YXRlTm9kZTtjLmN1cnJlbnQ9PT1iP0EoXCIxNzdcIik6dm9pZCAwO2Q9Yy5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU7MD09PWQ/QShcIjI2MVwiKTp2b2lkIDA7Yy5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9MDttZygpO2VjLmN1cnJlbnQ9bnVsbDtpZigxPGIuZWZmZWN0VGFnKWlmKG51bGwhPT1iLmxhc3RFZmZlY3Qpe2IubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWI7dmFyIGU9Yi5maXJzdEVmZmVjdH1lbHNlIGU9YjtlbHNlIGU9Yi5maXJzdEVmZmVjdDthZj1IZDt2YXIgZj1kYSgpO2lmKFVkKGYpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpblxuZil2YXIgZz17c3RhcnQ6Zi5zZWxlY3Rpb25TdGFydCxlbmQ6Zi5zZWxlY3Rpb25FbmR9O2Vsc2UgYTp7dmFyIGg9d2luZG93LmdldFNlbGVjdGlvbiYmd2luZG93LmdldFNlbGVjdGlvbigpO2lmKGgmJjAhPT1oLnJhbmdlQ291bnQpe2c9aC5hbmNob3JOb2RlO3ZhciBrPWguYW5jaG9yT2Zmc2V0LG49aC5mb2N1c05vZGU7aD1oLmZvY3VzT2Zmc2V0O3RyeXtnLm5vZGVUeXBlLG4ubm9kZVR5cGV9Y2F0Y2goV2Epe2c9bnVsbDticmVhayBhfXZhciByPTAsdz0tMSxQPS0xLG5jPTAsSmQ9MCxFPWYsdD1udWxsO2I6Zm9yKDs7KXtmb3IodmFyIHg7Oyl7RSE9PWd8fDAhPT1rJiYzIT09RS5ub2RlVHlwZXx8KHc9citrKTtFIT09bnx8MCE9PWgmJjMhPT1FLm5vZGVUeXBlfHwoUD1yK2gpOzM9PT1FLm5vZGVUeXBlJiYocis9RS5ub2RlVmFsdWUubGVuZ3RoKTtpZihudWxsPT09KHg9RS5maXJzdENoaWxkKSlicmVhazt0PUU7RT14fWZvcig7Oyl7aWYoRT09PWYpYnJlYWsgYjt0PT09ZyYmXG4rK25jPT09ayYmKHc9cik7dD09PW4mJisrSmQ9PT1oJiYoUD1yKTtpZihudWxsIT09KHg9RS5uZXh0U2libGluZykpYnJlYWs7RT10O3Q9RS5wYXJlbnROb2RlfUU9eH1nPS0xPT09d3x8LTE9PT1QP251bGw6e3N0YXJ0OncsZW5kOlB9fWVsc2UgZz1udWxsfWc9Z3x8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgZz1udWxsO2JmPXtmb2N1c2VkRWxlbTpmLHNlbGVjdGlvblJhbmdlOmd9O0lkKCExKTtmb3IoVT1lO251bGwhPT1VOyl7Zj0hMTtnPXZvaWQgMDt0cnl7Zm9yKDtudWxsIT09VTspe2lmKFUuZWZmZWN0VGFnJjI1Nil7dmFyIHU9VS5hbHRlcm5hdGU7az1VO3N3aXRjaChrLnRhZyl7Y2FzZSAyOmlmKGsuZWZmZWN0VGFnJjI1NiYmbnVsbCE9PXUpe3ZhciB5PXUubWVtb2l6ZWRQcm9wcyxEPXUubWVtb2l6ZWRTdGF0ZSxqYT1rLnN0YXRlTm9kZTtqYS5wcm9wcz1rLm1lbW9pemVkUHJvcHM7amEuc3RhdGU9ay5tZW1vaXplZFN0YXRlO3ZhciBtaT1qYS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSh5LFxuRCk7amEuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9bWl9YnJlYWs7Y2FzZSAzOmNhc2UgNTpjYXNlIDY6Y2FzZSA0OmJyZWFrO2RlZmF1bHQ6QShcIjE2M1wiKX19VT1VLm5leHRFZmZlY3R9fWNhdGNoKFdhKXtmPSEwLGc9V2F9ZiYmKG51bGw9PT1VP0EoXCIxNzhcIik6dm9pZCAwLFpnKFUsZyksbnVsbCE9PVUmJihVPVUubmV4dEVmZmVjdCkpfWZvcihVPWU7bnVsbCE9PVU7KXt1PSExO3k9dm9pZCAwO3RyeXtmb3IoO251bGwhPT1VOyl7dmFyIHE9VS5lZmZlY3RUYWc7cSYxNiYmS2UoVS5zdGF0ZU5vZGUsXCJcIik7aWYocSYxMjgpe3ZhciB6PVUuYWx0ZXJuYXRlO2lmKG51bGwhPT16KXt2YXIgbD16LnJlZjtudWxsIT09bCYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBsP2wobnVsbCk6bC5jdXJyZW50PW51bGwpfX1zd2l0Y2gocSYxNCl7Y2FzZSAyOmNoKFUpO1UuZWZmZWN0VGFnJj0tMzticmVhaztjYXNlIDY6Y2goVSk7VS5lZmZlY3RUYWcmPS0zO2RoKFUuYWx0ZXJuYXRlLFxuVSk7YnJlYWs7Y2FzZSA0OmRoKFUuYWx0ZXJuYXRlLFUpO2JyZWFrO2Nhc2UgODpEPVUsYWgoRCksRC5yZXR1cm49bnVsbCxELmNoaWxkPW51bGwsRC5hbHRlcm5hdGUmJihELmFsdGVybmF0ZS5jaGlsZD1udWxsLEQuYWx0ZXJuYXRlLnJldHVybj1udWxsKX1VPVUubmV4dEVmZmVjdH19Y2F0Y2goV2Epe3U9ITAseT1XYX11JiYobnVsbD09PVU/QShcIjE3OFwiKTp2b2lkIDAsWmcoVSx5KSxudWxsIT09VSYmKFU9VS5uZXh0RWZmZWN0KSl9bD1iZjt6PWRhKCk7cT1sLmZvY3VzZWRFbGVtO3U9bC5zZWxlY3Rpb25SYW5nZTtpZih6IT09cSYmZmEoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LHEpKXtudWxsIT09dSYmVWQocSkmJih6PXUuc3RhcnQsbD11LmVuZCx2b2lkIDA9PT1sJiYobD16KSxcInNlbGVjdGlvblN0YXJ0XCJpbiBxPyhxLnNlbGVjdGlvblN0YXJ0PXoscS5zZWxlY3Rpb25FbmQ9TWF0aC5taW4obCxxLnZhbHVlLmxlbmd0aCkpOndpbmRvdy5nZXRTZWxlY3Rpb24mJih6PXdpbmRvdy5nZXRTZWxlY3Rpb24oKSxcbnk9cVtsYigpXS5sZW5ndGgsbD1NYXRoLm1pbih1LnN0YXJ0LHkpLHU9dm9pZCAwPT09dS5lbmQ/bDpNYXRoLm1pbih1LmVuZCx5KSwhei5leHRlbmQmJmw+dSYmKHk9dSx1PWwsbD15KSx5PVRkKHEsbCksRD1UZChxLHUpLHkmJkQmJigxIT09ei5yYW5nZUNvdW50fHx6LmFuY2hvck5vZGUhPT15Lm5vZGV8fHouYW5jaG9yT2Zmc2V0IT09eS5vZmZzZXR8fHouZm9jdXNOb2RlIT09RC5ub2RlfHx6LmZvY3VzT2Zmc2V0IT09RC5vZmZzZXQpJiYoamE9ZG9jdW1lbnQuY3JlYXRlUmFuZ2UoKSxqYS5zZXRTdGFydCh5Lm5vZGUseS5vZmZzZXQpLHoucmVtb3ZlQWxsUmFuZ2VzKCksbD51Pyh6LmFkZFJhbmdlKGphKSx6LmV4dGVuZChELm5vZGUsRC5vZmZzZXQpKTooamEuc2V0RW5kKEQubm9kZSxELm9mZnNldCksei5hZGRSYW5nZShqYSkpKSkpO3o9W107Zm9yKGw9cTtsPWwucGFyZW50Tm9kZTspMT09PWwubm9kZVR5cGUmJnoucHVzaCh7ZWxlbWVudDpsLGxlZnQ6bC5zY3JvbGxMZWZ0LFxudG9wOmwuc2Nyb2xsVG9wfSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIHEuZm9jdXMmJnEuZm9jdXMoKTtmb3IocT0wO3E8ei5sZW5ndGg7cSsrKWw9eltxXSxsLmVsZW1lbnQuc2Nyb2xsTGVmdD1sLmxlZnQsbC5lbGVtZW50LnNjcm9sbFRvcD1sLnRvcH1iZj1udWxsO0lkKGFmKTthZj1udWxsO2MuY3VycmVudD1iO2ZvcihVPWU7bnVsbCE9PVU7KXtlPSExO3E9dm9pZCAwO3RyeXtmb3Ioej1kO251bGwhPT1VOyl7dmFyIGhnPVUuZWZmZWN0VGFnO2lmKGhnJjM2KXt2YXIgb2M9VS5hbHRlcm5hdGU7bD1VO3U9ejtzd2l0Y2gobC50YWcpe2Nhc2UgMjp2YXIgY2E9bC5zdGF0ZU5vZGU7aWYobC5lZmZlY3RUYWcmNClpZihudWxsPT09b2MpY2EucHJvcHM9bC5tZW1vaXplZFByb3BzLGNhLnN0YXRlPWwubWVtb2l6ZWRTdGF0ZSxjYS5jb21wb25lbnREaWRNb3VudCgpO2Vsc2V7dmFyIHdpPW9jLm1lbW9pemVkUHJvcHMseGk9b2MubWVtb2l6ZWRTdGF0ZTtjYS5wcm9wcz1sLm1lbW9pemVkUHJvcHM7XG5jYS5zdGF0ZT1sLm1lbW9pemVkU3RhdGU7Y2EuY29tcG9uZW50RGlkVXBkYXRlKHdpLHhpLGNhLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKX12YXIgTmc9bC51cGRhdGVRdWV1ZTtudWxsIT09TmcmJihjYS5wcm9wcz1sLm1lbW9pemVkUHJvcHMsY2Euc3RhdGU9bC5tZW1vaXplZFN0YXRlLFdmKGwsTmcsY2EsdSkpO2JyZWFrO2Nhc2UgMzp2YXIgT2c9bC51cGRhdGVRdWV1ZTtpZihudWxsIT09T2cpe3k9bnVsbDtpZihudWxsIT09bC5jaGlsZClzd2l0Y2gobC5jaGlsZC50YWcpe2Nhc2UgNTp5PWwuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMjp5PWwuY2hpbGQuc3RhdGVOb2RlfVdmKGwsT2cseSx1KX1icmVhaztjYXNlIDU6dmFyIHlpPWwuc3RhdGVOb2RlO251bGw9PT1vYyYmbC5lZmZlY3RUYWcmNCYmY2YobC50eXBlLGwubWVtb2l6ZWRQcm9wcykmJnlpLmZvY3VzKCk7YnJlYWs7Y2FzZSA2OmJyZWFrO2Nhc2UgNDpicmVhaztjYXNlIDE1OmJyZWFrO2Nhc2UgMTY6YnJlYWs7XG5kZWZhdWx0OkEoXCIxNjNcIil9fWlmKGhnJjEyOCl7bD12b2lkIDA7dmFyIHljPVUucmVmO2lmKG51bGwhPT15Yyl7dmFyIFBnPVUuc3RhdGVOb2RlO3N3aXRjaChVLnRhZyl7Y2FzZSA1Omw9UGc7YnJlYWs7ZGVmYXVsdDpsPVBnfVwiZnVuY3Rpb25cIj09PXR5cGVvZiB5Yz95YyhsKTp5Yy5jdXJyZW50PWx9fXZhciB6aT1VLm5leHRFZmZlY3Q7VS5uZXh0RWZmZWN0PW51bGw7VT16aX19Y2F0Y2goV2Epe2U9ITAscT1XYX1lJiYobnVsbD09PVU/QShcIjE3OFwiKTp2b2lkIDAsWmcoVSxxKSxudWxsIT09VSYmKFU9VS5uZXh0RWZmZWN0KSl9cGg9dGg9ITE7XCJmdW5jdGlvblwiPT09dHlwZW9mIEpmJiZKZihiLnN0YXRlTm9kZSk7Yj1jLmN1cnJlbnQuZXhwaXJhdGlvblRpbWU7MD09PWImJihoaD1udWxsKTthLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPWJ9ZnVuY3Rpb24gemgoKXtyZXR1cm4gbnVsbD09PVBofHxQaC50aW1lUmVtYWluaW5nKCk+U2g/ITE6TWg9ITB9XG5mdW5jdGlvbiBmaChhKXtudWxsPT09WD9BKFwiMjQ2XCIpOnZvaWQgMDtYLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPTA7Tmh8fChOaD0hMCxPaD1hKX1mdW5jdGlvbiBCaChhKXtudWxsPT09WD9BKFwiMjQ2XCIpOnZvaWQgMDtYLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPWF9ZnVuY3Rpb24gYmkoYSxiKXt2YXIgYz1aO1o9ITA7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7KFo9Yyl8fFd8fFdoKCl9fWZ1bmN0aW9uIGNpKGEsYil7aWYoWiYmIVFoKXtRaD0hMDt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtRaD0hMX19cmV0dXJuIGEoYil9ZnVuY3Rpb24gZGkoYSxiKXtXP0EoXCIxODdcIik6dm9pZCAwO3ZhciBjPVo7Wj0hMDt0cnl7cmV0dXJuIEloKGEsYil9ZmluYWxseXtaPWMsV2goKX19XG5mdW5jdGlvbiBlaShhLGIsYyl7aWYoRGgpcmV0dXJuIGEoYixjKTtafHxXfHwwPT09RWh8fChZaChFaCwhMSxudWxsKSxFaD0wKTt2YXIgZD1EaCxlPVo7Wj1EaD0hMDt0cnl7cmV0dXJuIGEoYixjKX1maW5hbGx5e0RoPWQsKFo9ZSl8fFd8fFdoKCl9fWZ1bmN0aW9uIGZpKGEpe3ZhciBiPVo7Wj0hMDt0cnl7SWgoYSl9ZmluYWxseXsoWj1iKXx8V3x8WWgoMSwhMSxudWxsKX19XG5mdW5jdGlvbiBnaShhLGIsYyxkLGUpe3ZhciBmPWIuY3VycmVudDtpZihjKXtjPWMuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZztiOnsyPT09amQoYykmJjI9PT1jLnRhZz92b2lkIDA6QShcIjE3MFwiKTtmb3IoZz1jOzMhPT1nLnRhZzspe2lmKHFmKGcpKXtnPWcuc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9KGc9Zy5yZXR1cm4pP3ZvaWQgMDpBKFwiMTcxXCIpfWc9Zy5zdGF0ZU5vZGUuY29udGV4dH1jPXFmKGMpP3ZmKGMsZyk6Z31lbHNlIGM9aGE7bnVsbD09PWIuY29udGV4dD9iLmNvbnRleHQ9YzpiLnBlbmRpbmdDb250ZXh0PWM7Yj1lO2U9T2YoZCk7ZS5wYXlsb2FkPXtlbGVtZW50OmF9O2I9dm9pZCAwPT09Yj9udWxsOmI7bnVsbCE9PWImJihlLmNhbGxiYWNrPWIpO1FmKGYsZSxkKTtvZyhmLGQpO3JldHVybiBkfVxuZnVuY3Rpb24gaGkoYSl7dmFyIGI9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZvaWQgMD09PWImJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXI/QShcIjE4OFwiKTpBKFwiMjY4XCIsT2JqZWN0LmtleXMoYSkpKTthPW1kKGIpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfWZ1bmN0aW9uIGlpKGEsYixjLGQpe3ZhciBlPWIuY3VycmVudCxmPW1nKCk7ZT1uZyhmLGUpO3JldHVybiBnaShhLGIsYyxlLGQpfWZ1bmN0aW9uIGppKGEpe2E9YS5jdXJyZW50O2lmKCFhLmNoaWxkKXJldHVybiBudWxsO3N3aXRjaChhLmNoaWxkLnRhZyl7Y2FzZSA1OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZTtkZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19XG5mdW5jdGlvbiBraShhKXt2YXIgYj1hLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlO3JldHVybiBJZihwKHt9LGEse2ZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9bWQoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiBiP2IoYSk6bnVsbH19KSl9XG52YXIgbGk9e3VwZGF0ZUNvbnRhaW5lckF0RXhwaXJhdGlvblRpbWU6Z2ksY3JlYXRlQ29udGFpbmVyOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gRWYoYSxiLGMpfSx1cGRhdGVDb250YWluZXI6aWksZmx1c2hSb290OiRoLHJlcXVlc3RXb3JrOkFoLGNvbXB1dGVVbmlxdWVBc3luY0V4cGlyYXRpb246Q2gsYmF0Y2hlZFVwZGF0ZXM6YmksdW5iYXRjaGVkVXBkYXRlczpjaSxkZWZlcnJlZFVwZGF0ZXM6SGgsc3luY1VwZGF0ZXM6SWgsaW50ZXJhY3RpdmVVcGRhdGVzOmVpLGZsdXNoSW50ZXJhY3RpdmVVcGRhdGVzOmZ1bmN0aW9uKCl7V3x8MD09PUVofHwoWWgoRWgsITEsbnVsbCksRWg9MCl9LGZsdXNoQ29udHJvbGxlZDpmaSxmbHVzaFN5bmM6ZGksZ2V0UHVibGljUm9vdEluc3RhbmNlOmppLGZpbmRIb3N0SW5zdGFuY2U6aGksZmluZEhvc3RJbnN0YW5jZVdpdGhOb1BvcnRhbHM6ZnVuY3Rpb24oYSl7YT1uZChhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0saW5qZWN0SW50b0RldlRvb2xzOmtpfTtcbmZ1bmN0aW9uIG5pKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6aGMsa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319S2IuaW5qZWN0RmliZXJDb250cm9sbGVkSG9zdENvbXBvbmVudCgkZSk7ZnVuY3Rpb24gb2koYSl7dGhpcy5fZXhwaXJhdGlvblRpbWU9Q2goKTt0aGlzLl9yb290PWE7dGhpcy5fY2FsbGJhY2tzPXRoaXMuX25leHQ9bnVsbDt0aGlzLl9oYXNDaGlsZHJlbj10aGlzLl9kaWRDb21wbGV0ZT0hMTt0aGlzLl9jaGlsZHJlbj1udWxsO3RoaXMuX2RlZmVyPSEwfVxub2kucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhKXt0aGlzLl9kZWZlcj92b2lkIDA6QShcIjI1MFwiKTt0aGlzLl9oYXNDaGlsZHJlbj0hMDt0aGlzLl9jaGlsZHJlbj1hO3ZhciBiPXRoaXMuX3Jvb3QuX2ludGVybmFsUm9vdCxjPXRoaXMuX2V4cGlyYXRpb25UaW1lLGQ9bmV3IHBpO2dpKGEsYixudWxsLGMsZC5fb25Db21taXQpO3JldHVybiBkfTtvaS5wcm90b3R5cGUudGhlbj1mdW5jdGlvbihhKXtpZih0aGlzLl9kaWRDb21wbGV0ZSlhKCk7ZWxzZXt2YXIgYj10aGlzLl9jYWxsYmFja3M7bnVsbD09PWImJihiPXRoaXMuX2NhbGxiYWNrcz1bXSk7Yi5wdXNoKGEpfX07XG5vaS5wcm90b3R5cGUuY29tbWl0PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5fcm9vdC5faW50ZXJuYWxSb290LGI9YS5maXJzdEJhdGNoO3RoaXMuX2RlZmVyJiZudWxsIT09Yj92b2lkIDA6QShcIjI1MVwiKTtpZih0aGlzLl9oYXNDaGlsZHJlbil7dmFyIGM9dGhpcy5fZXhwaXJhdGlvblRpbWU7aWYoYiE9PXRoaXMpe3RoaXMuX2hhc0NoaWxkcmVuJiYoYz10aGlzLl9leHBpcmF0aW9uVGltZT1iLl9leHBpcmF0aW9uVGltZSx0aGlzLnJlbmRlcih0aGlzLl9jaGlsZHJlbikpO2Zvcih2YXIgZD1udWxsLGU9YjtlIT09dGhpczspZD1lLGU9ZS5fbmV4dDtudWxsPT09ZD9BKFwiMjUxXCIpOnZvaWQgMDtkLl9uZXh0PWUuX25leHQ7dGhpcy5fbmV4dD1iO2EuZmlyc3RCYXRjaD10aGlzfXRoaXMuX2RlZmVyPSExOyRoKGEsYyk7Yj10aGlzLl9uZXh0O3RoaXMuX25leHQ9bnVsbDtiPWEuZmlyc3RCYXRjaD1iO251bGwhPT1iJiZiLl9oYXNDaGlsZHJlbiYmYi5yZW5kZXIoYi5fY2hpbGRyZW4pfWVsc2UgdGhpcy5fbmV4dD1cbm51bGwsdGhpcy5fZGVmZXI9ITF9O29pLnByb3RvdHlwZS5fb25Db21wbGV0ZT1mdW5jdGlvbigpe2lmKCF0aGlzLl9kaWRDb21wbGV0ZSl7dGhpcy5fZGlkQ29tcGxldGU9ITA7dmFyIGE9dGhpcy5fY2FsbGJhY2tzO2lmKG51bGwhPT1hKWZvcih2YXIgYj0wO2I8YS5sZW5ndGg7YisrKSgwLGFbYl0pKCl9fTtmdW5jdGlvbiBwaSgpe3RoaXMuX2NhbGxiYWNrcz1udWxsO3RoaXMuX2RpZENvbW1pdD0hMTt0aGlzLl9vbkNvbW1pdD10aGlzLl9vbkNvbW1pdC5iaW5kKHRoaXMpfXBpLnByb3RvdHlwZS50aGVuPWZ1bmN0aW9uKGEpe2lmKHRoaXMuX2RpZENvbW1pdClhKCk7ZWxzZXt2YXIgYj10aGlzLl9jYWxsYmFja3M7bnVsbD09PWImJihiPXRoaXMuX2NhbGxiYWNrcz1bXSk7Yi5wdXNoKGEpfX07XG5waS5wcm90b3R5cGUuX29uQ29tbWl0PWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2RpZENvbW1pdCl7dGhpcy5fZGlkQ29tbWl0PSEwO3ZhciBhPXRoaXMuX2NhbGxiYWNrcztpZihudWxsIT09YSlmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGM9YVtiXTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz9BKFwiMTkxXCIsYyk6dm9pZCAwO2MoKX19fTtmdW5jdGlvbiBxaShhLGIsYyl7dGhpcy5faW50ZXJuYWxSb290PUVmKGEsYixjKX1xaS5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5faW50ZXJuYWxSb290LGQ9bmV3IHBpO2I9dm9pZCAwPT09Yj9udWxsOmI7bnVsbCE9PWImJmQudGhlbihiKTtpaShhLGMsbnVsbCxkLl9vbkNvbW1pdCk7cmV0dXJuIGR9O1xucWkucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5faW50ZXJuYWxSb290LGM9bmV3IHBpO2E9dm9pZCAwPT09YT9udWxsOmE7bnVsbCE9PWEmJmMudGhlbihhKTtpaShudWxsLGIsbnVsbCxjLl9vbkNvbW1pdCk7cmV0dXJuIGN9O3FpLnByb3RvdHlwZS5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRoaXMuX2ludGVybmFsUm9vdCxlPW5ldyBwaTtjPXZvaWQgMD09PWM/bnVsbDpjO251bGwhPT1jJiZlLnRoZW4oYyk7aWkoYixkLGEsZS5fb25Db21taXQpO3JldHVybiBlfTtcbnFpLnByb3RvdHlwZS5jcmVhdGVCYXRjaD1mdW5jdGlvbigpe3ZhciBhPW5ldyBvaSh0aGlzKSxiPWEuX2V4cGlyYXRpb25UaW1lLGM9dGhpcy5faW50ZXJuYWxSb290LGQ9Yy5maXJzdEJhdGNoO2lmKG51bGw9PT1kKWMuZmlyc3RCYXRjaD1hLGEuX25leHQ9bnVsbDtlbHNle2ZvcihjPW51bGw7bnVsbCE9PWQmJmQuX2V4cGlyYXRpb25UaW1lPD1iOyljPWQsZD1kLl9uZXh0O2EuX25leHQ9ZDtudWxsIT09YyYmKGMuX25leHQ9YSl9cmV0dXJuIGF9O2Z1bmN0aW9uIHJpKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1TYj1saS5iYXRjaGVkVXBkYXRlcztUYj1saS5pbnRlcmFjdGl2ZVVwZGF0ZXM7VWI9bGkuZmx1c2hJbnRlcmFjdGl2ZVVwZGF0ZXM7XG5mdW5jdGlvbiBzaShhLGIpe2J8fChiPWE/OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGwsYj0hKCFifHwxIT09Yi5ub2RlVHlwZXx8IWIuaGFzQXR0cmlidXRlKFwiZGF0YS1yZWFjdHJvb3RcIikpKTtpZighYilmb3IodmFyIGM7Yz1hLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChjKTtyZXR1cm4gbmV3IHFpKGEsITEsYil9XG5mdW5jdGlvbiB0aShhLGIsYyxkLGUpe3JpKGMpP3ZvaWQgMDpBKFwiMjAwXCIpO3ZhciBmPWMuX3JlYWN0Um9vdENvbnRhaW5lcjtpZihmKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGc9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9amkoZi5faW50ZXJuYWxSb290KTtnLmNhbGwoYSl9fW51bGwhPWE/Zi5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIoYSxiLGUpOmYucmVuZGVyKGIsZSl9ZWxzZXtmPWMuX3JlYWN0Um9vdENvbnRhaW5lcj1zaShjLGQpO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1qaShmLl9pbnRlcm5hbFJvb3QpO2guY2FsbChhKX19Y2koZnVuY3Rpb24oKXtudWxsIT1hP2YubGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyKGEsYixlKTpmLnJlbmRlcihiLGUpfSl9cmV0dXJuIGppKGYuX2ludGVybmFsUm9vdCl9XG5mdW5jdGlvbiB1aShhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO3JpKGIpP3ZvaWQgMDpBKFwiMjAwXCIpO3JldHVybiBuaShhLGIsbnVsbCxjKX1cbnZhciB2aT17Y3JlYXRlUG9ydGFsOnVpLGZpbmRET01Ob2RlOmZ1bmN0aW9uKGEpe3JldHVybiBudWxsPT1hP251bGw6MT09PWEubm9kZVR5cGU/YTpoaShhKX0saHlkcmF0ZTpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIHRpKG51bGwsYSxiLCEwLGMpfSxyZW5kZXI6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiB0aShudWxsLGEsYiwhMSxjKX0sdW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI6ZnVuY3Rpb24oYSxiLGMsZCl7bnVsbD09YXx8dm9pZCAwPT09YS5fcmVhY3RJbnRlcm5hbEZpYmVyP0EoXCIzOFwiKTp2b2lkIDA7cmV0dXJuIHRpKGEsYixjLCExLGQpfSx1bm1vdW50Q29tcG9uZW50QXROb2RlOmZ1bmN0aW9uKGEpe3JpKGEpP3ZvaWQgMDpBKFwiNDBcIik7cmV0dXJuIGEuX3JlYWN0Um9vdENvbnRhaW5lcj8oY2koZnVuY3Rpb24oKXt0aShudWxsLG51bGwsYSwhMSxmdW5jdGlvbigpe2EuX3JlYWN0Um9vdENvbnRhaW5lcj1udWxsfSl9KSwhMCk6ITF9LHVuc3RhYmxlX2NyZWF0ZVBvcnRhbDpmdW5jdGlvbigpe3JldHVybiB1aS5hcHBseSh2b2lkIDAsXG5hcmd1bWVudHMpfSx1bnN0YWJsZV9iYXRjaGVkVXBkYXRlczpiaSx1bnN0YWJsZV9kZWZlcnJlZFVwZGF0ZXM6SGgsdW5zdGFibGVfaW50ZXJhY3RpdmVVcGRhdGVzOmVpLGZsdXNoU3luYzpkaSx1bnN0YWJsZV9mbHVzaENvbnRyb2xsZWQ6ZmksX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e0V2ZW50UGx1Z2luSHViOkthLEV2ZW50UGx1Z2luUmVnaXN0cnk6dmEsRXZlbnRQcm9wYWdhdG9yczokYSxSZWFjdENvbnRyb2xsZWRDb21wb25lbnQ6UmIsUmVhY3RET01Db21wb25lbnRUcmVlOlFhLFJlYWN0RE9NRXZlbnRMaXN0ZW5lcjpOZH0sdW5zdGFibGVfY3JlYXRlUm9vdDpmdW5jdGlvbihhLGIpe3JldHVybiBuZXcgcWkoYSwhMCxudWxsIT1iJiYhMD09PWIuaHlkcmF0ZSl9fTtraSh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6TmEsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi40LjFcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTtcbnZhciBBaT17ZGVmYXVsdDp2aX0sQmk9QWkmJnZpfHxBaTttb2R1bGUuZXhwb3J0cz1CaS5kZWZhdWx0P0JpLmRlZmF1bHQ6Qmk7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjQuMVxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGs9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1yZXF1aXJlKFwiZmJqcy9saWIvaW52YXJpYW50XCIpLHA9cmVxdWlyZShcImZianMvbGliL2VtcHR5T2JqZWN0XCIpLHE9cmVxdWlyZShcImZianMvbGliL2VtcHR5RnVuY3Rpb25cIikscj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLHQ9cj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyx1PXI/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNix2PXI/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHc9cj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgseD1yP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCx5PXI/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LHo9cj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxBPXI/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEsQj1cbnI/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyO3ImJlN5bWJvbC5mb3IoXCJyZWFjdC50aW1lb3V0XCIpO3ZhciBDPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBEKGEpe2Zvcih2YXIgYj1hcmd1bWVudHMubGVuZ3RoLTEsZT1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0wO2M8YjtjKyspZSs9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbYysxXSk7bighMSxcIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCAlcyBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuIFwiLGUpfVxudmFyIEU9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319O2Z1bmN0aW9uIEYoYSxiLGUpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9cDt0aGlzLnVwZGF0ZXI9ZXx8RX1GLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O0YucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7XCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YT9EKFwiODVcIik6dm9pZCAwO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07Ri5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07ZnVuY3Rpb24gRygpe31cbkcucHJvdG90eXBlPUYucHJvdG90eXBlO2Z1bmN0aW9uIEgoYSxiLGUpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9cDt0aGlzLnVwZGF0ZXI9ZXx8RX12YXIgST1ILnByb3RvdHlwZT1uZXcgRztJLmNvbnN0cnVjdG9yPUg7ayhJLEYucHJvdG90eXBlKTtJLmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBKPXtjdXJyZW50Om51bGx9LEs9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxMPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBNKGEsYixlKXt2YXIgYz12b2lkIDAsZD17fSxnPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGMgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksYilLLmNhbGwoYixjKSYmIUwuaGFzT3duUHJvcGVydHkoYykmJihkW2NdPWJbY10pO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZilkLmNoaWxkcmVuPWU7ZWxzZSBpZigxPGYpe2Zvcih2YXIgbD1BcnJheShmKSxtPTA7bTxmO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49bH1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoYyBpbiBmPWEuZGVmYXVsdFByb3BzLGYpdm9pZCAwPT09ZFtjXSYmKGRbY109ZltjXSk7cmV0dXJueyQkdHlwZW9mOnQsdHlwZTphLGtleTpnLHJlZjpoLHByb3BzOmQsX293bmVyOkouY3VycmVudH19XG5mdW5jdGlvbiBOKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT10fWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrKFwiXCIrYSkucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIE89L1xcLysvZyxQPVtdO2Z1bmN0aW9uIFEoYSxiLGUsYyl7aWYoUC5sZW5ndGgpe3ZhciBkPVAucG9wKCk7ZC5yZXN1bHQ9YTtkLmtleVByZWZpeD1iO2QuZnVuYz1lO2QuY29udGV4dD1jO2QuY291bnQ9MDtyZXR1cm4gZH1yZXR1cm57cmVzdWx0OmEsa2V5UHJlZml4OmIsZnVuYzplLGNvbnRleHQ6Yyxjb3VudDowfX1mdW5jdGlvbiBSKGEpe2EucmVzdWx0PW51bGw7YS5rZXlQcmVmaXg9bnVsbDthLmZ1bmM9bnVsbDthLmNvbnRleHQ9bnVsbDthLmNvdW50PTA7MTA+UC5sZW5ndGgmJlAucHVzaChhKX1cbmZ1bmN0aW9uIFMoYSxiLGUsYyl7dmFyIGQ9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWR8fFwiYm9vbGVhblwiPT09ZClhPW51bGw7dmFyIGc9ITE7aWYobnVsbD09PWEpZz0hMDtlbHNlIHN3aXRjaChkKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmc9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHQ6Y2FzZSB1Omc9ITB9fWlmKGcpcmV0dXJuIGUoYyxhLFwiXCI9PT1iP1wiLlwiK1QoYSwwKTpiKSwxO2c9MDtiPVwiXCI9PT1iP1wiLlwiOmIrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGg9MDtoPGEubGVuZ3RoO2grKyl7ZD1hW2hdO3ZhciBmPWIrVChkLGgpO2crPVMoZCxmLGUsYyl9ZWxzZSBpZihudWxsPT09YXx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhP2Y9bnVsbDooZj1DJiZhW0NdfHxhW1wiQEBpdGVyYXRvclwiXSxmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBmP2Y6bnVsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLFxuaD0wOyEoZD1hLm5leHQoKSkuZG9uZTspZD1kLnZhbHVlLGY9YitUKGQsaCsrKSxnKz1TKGQsZixlLGMpO2Vsc2VcIm9iamVjdFwiPT09ZCYmKGU9XCJcIithLEQoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1lP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmUsXCJcIikpO3JldHVybiBnfWZ1bmN0aW9uIFQoYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoYS5rZXkpOmIudG9TdHJpbmcoMzYpfWZ1bmN0aW9uIFUoYSxiKXthLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspfVxuZnVuY3Rpb24gVihhLGIsZSl7dmFyIGM9YS5yZXN1bHQsZD1hLmtleVByZWZpeDthPWEuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyk7QXJyYXkuaXNBcnJheShhKT9XKGEsYyxlLHEudGhhdFJldHVybnNBcmd1bWVudCk6bnVsbCE9YSYmKE4oYSkmJihiPWQrKCFhLmtleXx8YiYmYi5rZXk9PT1hLmtleT9cIlwiOihcIlwiK2Eua2V5KS5yZXBsYWNlKE8sXCIkJi9cIikrXCIvXCIpK2UsYT17JCR0eXBlb2Y6dCx0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9KSxjLnB1c2goYSkpfWZ1bmN0aW9uIFcoYSxiLGUsYyxkKXt2YXIgZz1cIlwiO251bGwhPWUmJihnPShcIlwiK2UpLnJlcGxhY2UoTyxcIiQmL1wiKStcIi9cIik7Yj1RKGIsZyxjLGQpO251bGw9PWF8fFMoYSxcIlwiLFYsYik7UihiKX1cbnZhciBYPXtDaGlsZHJlbjp7bWFwOmZ1bmN0aW9uKGEsYixlKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBjPVtdO1coYSxjLG51bGwsYixlKTtyZXR1cm4gY30sZm9yRWFjaDpmdW5jdGlvbihhLGIsZSl7aWYobnVsbD09YSlyZXR1cm4gYTtiPVEobnVsbCxudWxsLGIsZSk7bnVsbD09YXx8UyhhLFwiXCIsVSxiKTtSKGIpfSxjb3VudDpmdW5jdGlvbihhKXtyZXR1cm4gbnVsbD09YT8wOlMoYSxcIlwiLHEudGhhdFJldHVybnNOdWxsLG51bGwpfSx0b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPVtdO1coYSxiLG51bGwscS50aGF0UmV0dXJuc0FyZ3VtZW50KTtyZXR1cm4gYn0sb25seTpmdW5jdGlvbihhKXtOKGEpP3ZvaWQgMDpEKFwiMTQzXCIpO3JldHVybiBhfX0sY3JlYXRlUmVmOmZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19LENvbXBvbmVudDpGLFB1cmVDb21wb25lbnQ6SCxjcmVhdGVDb250ZXh0OmZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6eixcbl9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLF9kZWZhdWx0VmFsdWU6YSxfY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfY2hhbmdlZEJpdHM6MCxfY2hhbmdlZEJpdHMyOjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjp5LF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9LGZvcndhcmRSZWY6ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOkIscmVuZGVyOmF9fSxGcmFnbWVudDp2LFN0cmljdE1vZGU6dyx1bnN0YWJsZV9Bc3luY01vZGU6QSx1bnN0YWJsZV9Qcm9maWxlcjp4LGNyZWF0ZUVsZW1lbnQ6TSxjbG9uZUVsZW1lbnQ6ZnVuY3Rpb24oYSxiLGUpe251bGw9PT1hfHx2b2lkIDA9PT1hP0QoXCIyNjdcIixhKTp2b2lkIDA7dmFyIGM9dm9pZCAwLGQ9ayh7fSxhLnByb3BzKSxnPWEua2V5LGg9YS5yZWYsZj1hLl9vd25lcjtpZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGg9Yi5yZWYsZj1KLmN1cnJlbnQpO3ZvaWQgMCE9PVxuYi5rZXkmJihnPVwiXCIrYi5rZXkpO3ZhciBsPXZvaWQgMDthLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMmJihsPWEudHlwZS5kZWZhdWx0UHJvcHMpO2ZvcihjIGluIGIpSy5jYWxsKGIsYykmJiFMLmhhc093blByb3BlcnR5KGMpJiYoZFtjXT12b2lkIDA9PT1iW2NdJiZ2b2lkIDAhPT1sP2xbY106YltjXSl9Yz1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWMpZC5jaGlsZHJlbj1lO2Vsc2UgaWYoMTxjKXtsPUFycmF5KGMpO2Zvcih2YXIgbT0wO208YzttKyspbFttXT1hcmd1bWVudHNbbSsyXTtkLmNoaWxkcmVuPWx9cmV0dXJueyQkdHlwZW9mOnQsdHlwZTphLnR5cGUsa2V5OmcscmVmOmgscHJvcHM6ZCxfb3duZXI6Zn19LGNyZWF0ZUZhY3Rvcnk6ZnVuY3Rpb24oYSl7dmFyIGI9TS5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9LGlzVmFsaWRFbGVtZW50Ok4sdmVyc2lvbjpcIjE2LjQuMVwiLF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOntSZWFjdEN1cnJlbnRPd25lcjpKLFxuYXNzaWduOmt9fSxZPXtkZWZhdWx0Olh9LFo9WSYmWHx8WTttb2R1bGUuZXhwb3J0cz1aLmRlZmF1bHQ/Wi5kZWZhdWx0Olo7XG4iXSwic291cmNlUm9vdCI6IiJ9